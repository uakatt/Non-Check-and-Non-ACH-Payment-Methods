Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/build/project/xsd/purap/uaElectronicInvoice.xsd
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/build/project/xsd/purap/uaElectronicInvoice.xsd	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/build/project/xsd/purap/uaElectronicInvoice.xsd	(revision 10217)
@@ -0,0 +1,867 @@
+<?xml version="1.0" encoding="utf-8"?>
+<!--
+ Copyright 2008-2009 The Kuali Foundation
+ 
+ Licensed under the Educational Community License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+ http://www.opensource.org/licenses/ecl2.php
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+    
+<xsd:schema elementFormDefault="qualified"
+		    targetNamespace="http://www.kuali.org/kfs/purap/electronicInvoice"
+		    xmlns="http://www.kuali.org/kfs/purap/electronicInvoice" 
+		    xmlns:purap="http://www.kuali.org/kfs/purap/types"
+		    xmlns:kfs="http://www.kuali.org/kfs/sys/types"
+		    xmlns:xsd="http://www.w3.org/2001/XMLSchema">
+
+  <xsd:import namespace="http://www.w3.org/XML/1998/namespace" schemaLocation="@externalizable.static.content.url@/xsd/sys/xml.xsd"/>
+  <xsd:import namespace="http://www.kuali.org/kfs/purap/types" schemaLocation="@externalizable.static.content.url@/xsd/purap/purapTypes.xsd" />
+  <xsd:import namespace="http://www.kuali.org/kfs/sys/types" schemaLocation="@externalizable.static.content.url@/xsd/sys/types.xsd" />
+
+  <xsd:element name="Credential">
+  	<xsd:complexType>
+  		<xsd:sequence>
+  			<xsd:element name="Identity" type="purap:dunsNumberType" />
+  			<xsd:element name="SharedSecret" minOccurs="0" maxOccurs="1" type="xsd:string" /> <!-- Not used -->
+  		</xsd:sequence>
+  		<xsd:attribute name="domain" type="purap:domainType" use="required" />
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="Name">
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="purap:twoHundredCharsType"> <!--  since barnesandnoble.xml contains empty name in contact, we need minLen=0 insteadof 1 -->
+  				<xsd:attribute ref="xml:lang" use="required" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="Description">
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="purap:eInvoiceDescriptionType">
+  				<xsd:attribute ref="xml:lang" use="required" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="Email">
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="kfs:emailType">
+  				<xsd:attribute name="name" type="kfs:oneToFiftyCharType" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+  
+  <xsd:element name="PostalAddress">
+  	<xsd:complexType>
+  		<xsd:sequence>
+  			<xsd:element name="DeliverTo" type="kfs:zeroToFiftyFiveCharType" minOccurs="0" maxOccurs="unbounded"/>
+  			<xsd:element name="Street" type="purap:addressType" maxOccurs="unbounded" />
+  			<xsd:element name="City" type="purap:addressType" />
+  			<xsd:element name="State" type="purap:addressType" />
+  			<xsd:element name="PostalCode" type="purap:postalCodeType" />
+  			<xsd:element name="Country">
+  				<xsd:complexType>
+  					<xsd:simpleContent>
+  						<xsd:extension base="purap:addressType">
+  							<xsd:attribute name="isoCountryCode" type="purap:countryCodeType" use="required" />
+  						</xsd:extension>
+  					</xsd:simpleContent>
+  				</xsd:complexType>
+  			</xsd:element>
+  		</xsd:sequence>
+  		<xsd:attribute name="name" type="kfs:oneToFiftyCharType" use="optional" />
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="Phone">
+  	<xsd:complexType>
+  		<xsd:sequence>
+  			<xsd:element name="TelephoneNumber">
+  				<xsd:complexType>
+  					<xsd:sequence>
+  						<xsd:element name="CountryCode">
+  							<xsd:complexType>
+  								<xsd:simpleContent>
+  									<xsd:extension base="purap:addressType">
+  										<xsd:attribute name="isoCountryCode" type="kfs:oneToFourCharType" /> <!-- It's national prefix, not iso Country Code -->
+  									</xsd:extension>
+  								</xsd:simpleContent>
+  							</xsd:complexType>
+  						</xsd:element>
+  						<xsd:element name="AreaOrCityCode" type="kfs:oneToFourCharType" />
+  						<xsd:element name="Number" type="kfs:oneToTwentyCharType" />
+  					</xsd:sequence>
+  				</xsd:complexType>
+  			</xsd:element>
+  		</xsd:sequence>
+  		<xsd:attribute name="name" type="kfs:oneToFiftyCharType" />
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="Fax">
+  	<xsd:complexType>
+  		<xsd:sequence>
+  			<xsd:element name="TelephoneNumber">
+  				<xsd:complexType>
+  					<xsd:sequence>
+  						<xsd:element name="CountryCode">
+  							<xsd:complexType>
+  								<xsd:simpleContent>
+  									<xsd:extension base="purap:addressType">
+  										<xsd:attribute name="isoCountryCode" type="kfs:oneToFourCharType" /> <!-- It's national prefix, not iso Country Code -->
+  									</xsd:extension>
+  								</xsd:simpleContent>
+  							</xsd:complexType>
+  						</xsd:element>
+  						<xsd:element name="AreaOrCityCode" type="kfs:oneToFourCharType" />
+  						<xsd:element name="Number" type="kfs:oneToTwentyCharType" />
+  					</xsd:sequence>
+  				</xsd:complexType>
+  			</xsd:element>
+  		</xsd:sequence>
+  		<xsd:attribute name="name" type="kfs:oneToFiftyCharType" />
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="URL">
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="kfs:zeroToNinetyCharType">
+  				<xsd:attribute name="name" type="kfs:oneToFiftyCharType" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="Contact">
+  	<xsd:complexType>
+  		<xsd:sequence>
+  			<xsd:element ref="Name" />
+  			<xsd:element ref="PostalAddress" minOccurs="0" maxOccurs="unbounded" />
+  			<xsd:element ref="Email" minOccurs="0" maxOccurs="unbounded" />
+  			<xsd:element ref="Phone" minOccurs="0" maxOccurs="unbounded" />
+  			<xsd:element ref="Fax" minOccurs="0" maxOccurs="unbounded" />
+  			<xsd:element ref="URL" minOccurs="0" maxOccurs="unbounded" />
+  		</xsd:sequence>
+  		<xsd:attribute name="role" type="kfs:oneToTwentyCharType" use="required" />
+  		<xsd:attribute name="addressID" type="kfs:zeroToTwentyCharType" use="optional" />
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="Extrinsic">
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="kfs:zeroToNinetyCharType"> <!-- It may have CDATA also -->
+  				<xsd:attribute name="name" type="kfs:zeroToFiftyFiveCharType" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="Comments"> <!-- Not used -->
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="xsd:string">
+  				<xsd:attribute ref="xml:lang" use="optional" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="Money" default="0">
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="xsd:string"> <!-- since cdw3.xml contains 3703.7400000000002, declaring as string insteadof kfs:amountType -->
+  				<xsd:attribute name="currency" type="purap:currencyType" use="required" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="UnitPrice">
+  	<xsd:complexType>
+  		<xsd:sequence>
+  			<xsd:element ref="Money" />
+  		</xsd:sequence>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="Tax">
+  	<xsd:complexType>
+  		<xsd:sequence>
+  			<xsd:element ref="Money" />
+  			<xsd:element ref="Description" />
+  			<xsd:element name="TaxDetail" minOccurs="0" maxOccurs="unbounded">
+  				<xsd:complexType>
+  					<xsd:sequence>
+  						<xsd:element name="TaxableAmount" minOccurs="0">
+  							<xsd:complexType>
+  								<xsd:sequence>
+  									<xsd:element ref="Money" />
+  								</xsd:sequence>
+  							</xsd:complexType>
+  						</xsd:element>
+  						<xsd:element name="TaxAmount">
+  							<xsd:complexType>
+  								<xsd:sequence>
+  									<xsd:element ref="Money" />
+  								</xsd:sequence>
+  							</xsd:complexType>
+  						</xsd:element>
+  						<xsd:element name="TaxLocation" minOccurs="0"> <!--  Not Used -->
+  							<xsd:complexType>
+  								<xsd:simpleContent>
+  									<xsd:extension base="xsd:string">
+  										<xsd:attribute ref="xml:lang" use="required" />
+  									</xsd:extension>
+  								</xsd:simpleContent>
+  							</xsd:complexType>
+  						</xsd:element>
+  						<xsd:element ref="Description" minOccurs="0" />
+  					</xsd:sequence>
+  					<xsd:attribute name="purpose" type="kfs:oneToFiftyCharType" use="optional" />
+  					<xsd:attribute name="category" type="kfs:oneToFiftyCharType" use="required" />
+  					<xsd:attribute name="percentageRate" type="xsd:decimal" use="optional" />
+  				</xsd:complexType>
+  			</xsd:element>
+  		</xsd:sequence>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="OrderReference">
+  	<xsd:complexType>
+  		<xsd:sequence>
+  			<!--  In DTD, it's a required element, changing it to optional because of cdw.xml -->
+  			<xsd:element name="DocumentReference" minOccurs="0" maxOccurs="1">
+  				<xsd:complexType>
+  					<xsd:simpleContent>
+  						<xsd:extension base="purap:idType">
+  							<xsd:attribute name="payloadID" type="purap:idType" />
+  						</xsd:extension>
+  					</xsd:simpleContent>
+  				</xsd:complexType>
+  			</xsd:element>
+  		</xsd:sequence>
+  		<xsd:attribute name="orderID" type="purap:idType" use="optional" />
+  		<xsd:attribute name="orderDate" type="purap:dateStringType" use="optional" />
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="MasterAgreementReference">
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="xsd:string">
+  				<xsd:attribute name="agreementID" type="purap:idType" use="optional" />
+  				<xsd:attribute name="agreementDate" type="purap:dateStringType" use="optional" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="MasterAgreementIDInfo">
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="xsd:string">
+  				<xsd:attribute name="agreementID" type="purap:idType" use="required" />
+  				<xsd:attribute name="agreementDate" type="purap:dateStringType" use="optional" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="OrderIDInfo">
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="xsd:string">
+  				<xsd:attribute name="orderID" type="purap:idType" use="required" />
+  				<xsd:attribute name="orderDate" type="purap:dateStringType" use="optional" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="SupplierOrderInfo">
+  	<xsd:complexType>
+  		<xsd:simpleContent>
+  			<xsd:extension base="xsd:string">
+  				<xsd:attribute name="orderID" type="purap:idType" use="required" />
+  			</xsd:extension>
+  		</xsd:simpleContent>
+  	</xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="InvoiceDetailShipping">
+       	<xsd:complexType>
+       		<xsd:sequence>
+       			<!-- Contact should be min=2, but changing it to 1 because fisher xml files contains only one  -->
+       			<xsd:element ref="Contact" minOccurs="1" maxOccurs="unbounded"/>
+       			<xsd:choice minOccurs="0">
+	       			<xsd:element name="CarrierIdentifier" minOccurs="0">  <!-- Not found in vendor xml -->
+	       				<xsd:complexType>
+	       					<xsd:attribute name="domain" type="xsd:string" use="required" />
+	       				</xsd:complexType>
+	       			</xsd:element>
+	       			<xsd:element name="ShipmentIdentifier" type="xsd:string" minOccurs="0"/>	<!-- Not found in vendor xml -->
+       			</xsd:choice>
+       			<xsd:element name="DocumentReference" minOccurs="0"> <!-- Not found in vendor xml -->
+       				<xsd:complexType>
+       					<xsd:simpleContent>
+       						<xsd:extension base="xsd:string">
+       							<xsd:attribute name="payloadID" type="xsd:string" use="required" />
+       						</xsd:extension>
+       					</xsd:simpleContent>
+       				</xsd:complexType>
+       			</xsd:element>
+       		</xsd:sequence>
+       		<xsd:attribute name="shippingDate" type="purap:dateStringType" use="optional" />
+       	</xsd:complexType>
+  </xsd:element>
+    
+  <xsd:element name="GrossAmount">
+     <xsd:complexType>
+       <xsd:sequence>
+         <xsd:element ref="Money"/>
+       </xsd:sequence>
+     </xsd:complexType>
+  </xsd:element>  
+	
+  <xsd:element name="NetAmount">
+    <xsd:complexType>
+      <xsd:sequence>
+        <xsd:element ref="Money"/>
+      </xsd:sequence>
+    </xsd:complexType>
+  </xsd:element>
+                                
+  <xsd:element name="InvoiceDetailDiscount">
+     <xsd:complexType>
+       <xsd:sequence>
+         <xsd:element ref="Money"/>
+       </xsd:sequence>
+       <xsd:attribute name="percentageRate" type="xsd:decimal" use="optional" default="0"/>
+     </xsd:complexType>
+  </xsd:element>
+
+  <xsd:element name="InvoiceDetailItem">
+  	<xsd:complexType>
+  		<xsd:sequence>
+  			<xsd:element name="UnitOfMeasure" type="purap:uomType" />
+  			<xsd:element ref="UnitPrice" />
+  			
+  			<xsd:element name="InvoiceDetailItemReference">
+  				<xsd:complexType>
+  					<xsd:sequence>
+  					
+  						<xsd:element name="ItemID" minOccurs="0">
+  							<xsd:complexType>
+  								<xsd:sequence>
+  									<xsd:element name="SupplierPartID" type="purap:catalogNumberType" />
+  									<xsd:element name="SupplierPartAuxiliaryID" type="purap:auxiliaryIDType" minOccurs="0"/>
+  								</xsd:sequence>
+  							</xsd:complexType>
+  						</xsd:element>
+  						
+  						<xsd:element ref="Description" minOccurs="0" />
+  						
+  						<xsd:choice minOccurs="0">
+  							<xsd:sequence>
+  								<xsd:element name="ManufacturerPartID" type="purap:hundredCharsType" />
+  								<xsd:element name="ManufacturerName">
+  									<xsd:complexType>
+  										<xsd:simpleContent>
+  											<xsd:extension base="purap:hundredCharsType">
+  												<xsd:attribute ref="xml:lang" use="optional" />
+  											</xsd:extension>
+  										</xsd:simpleContent>
+  									</xsd:complexType>
+  								</xsd:element>
+  							</xsd:sequence>
+  						</xsd:choice>
+  						
+  						<xsd:element name="Country" minOccurs="0">
+  							<xsd:complexType>
+  								<xsd:simpleContent>
+  									<xsd:extension base="purap:addressType">
+  										<xsd:attribute name="isoCountryCode" type="kfs:oneToFourCharType" use="required" />
+  									</xsd:extension>
+  								</xsd:simpleContent>
+  							</xsd:complexType>
+  						</xsd:element>
+  						<xsd:element name="SerialNumber" type="xsd:string" minOccurs="0" maxOccurs="unbounded" /> <!-- Not found in vendor file -->
+  					</xsd:sequence>
+  					<xsd:attribute name="lineNumber" type="xsd:unsignedByte" use="required" />
+  					<xsd:attribute name="serialNumber" type="xsd:string" use="optional" /> <!-- Not found in vendor file -->
+  				</xsd:complexType>
+  			</xsd:element> <!-- InvoiceDetailItemReference -->
+  			
+  			<xsd:element name="SubtotalAmount" minOccurs="0">
+  				<xsd:complexType>
+  					<xsd:sequence>
+  						<xsd:element ref="Money" />
+  					</xsd:sequence>
+  				</xsd:complexType>
+  			</xsd:element>
+
+  			<!-- Added minOccurs and maxOccurs (maxOccurs should be unbound but epic parser supports only one!!!)-->
+  			<xsd:element ref="Tax" minOccurs="0" />
+
+  			<xsd:element name="InvoiceDetailLineSpecialHandling" minOccurs="0">
+  				<xsd:complexType>
+  					<xsd:sequence>
+  						<xsd:element ref="Money" />
+  					</xsd:sequence>
+  				</xsd:complexType>
+  			</xsd:element>
+  			
+  			<xsd:element name="InvoiceDetailLineShipping" minOccurs="0">
+  				<xsd:complexType>
+  					<xsd:sequence>
+  						<!-- minOccurs should be 1, but in sample data file there are no entries for it,
+  							but in dtd, it's maxOccurs/minOccurs=1. Becuase of the sample data file,
+  							i'm changing the minOccurs to ZERO-->
+  						<xsd:element ref="InvoiceDetailShipping" minOccurs="0" />
+  						<xsd:element ref="Money" />
+  					</xsd:sequence>
+  				</xsd:complexType>
+  			</xsd:element>
+  			
+  			<xsd:element ref="GrossAmount" minOccurs="0" />
+  			<xsd:element ref="InvoiceDetailDiscount" minOccurs="0" />
+  			<xsd:element ref="NetAmount" minOccurs="0" />
+  			
+  			<!-- Distribution not used in EPIC -->
+  			<!-- <xsd:element name="Distribution" minOccurs="0" maxOccurs="unbounded">
+  				<xsd:complexType>
+  					<xsd:sequence>
+  						<xsd:element name="Accounting">
+  							<xsd:complexType>
+  								<xsd:sequence>
+  									<xsd:element name="AccountingSegment">
+  										<xsd:complexType>
+  											<xsd:sequence>
+  												<xsd:element ref="Name" />
+  												<xsd:element ref="Description" />
+  											</xsd:sequence>
+  											<xsd:attribute name="id" type="xsd:string" />
+  										</xsd:complexType>
+  									</xsd:element>
+  								</xsd:sequence>
+  								<xsd:attribute name="name" type="xsd:string" />
+  							</xsd:complexType>
+  						</xsd:element>
+  						<xsd:element name="Charge">
+  							<xsd:complexType>
+  								<xsd:sequence>
+  									<xsd:element ref="Money" />
+  								</xsd:sequence>
+  							</xsd:complexType>
+  						</xsd:element>
+  					</xsd:sequence>
+  				</xsd:complexType>
+  			</xsd:element> -->
+  			
+  			<xsd:element ref="Comments" minOccurs="0" />
+  			<xsd:element ref="Extrinsic" minOccurs="0" maxOccurs="unbounded" />
+  		</xsd:sequence>
+  		<xsd:attribute name="invoiceLineNumber" type="xsd:unsignedByte" use="required" />
+  		<xsd:attribute name="quantity" type="xsd:decimal" use="required" />
+  	</xsd:complexType>
+  </xsd:element>   <!-- InvoiceDetailItem -->
+
+  <xsd:element name="InvoiceDetailServiceItem">
+  	<xsd:complexType>
+  		<xsd:sequence>
+  			<xsd:element name="InvoiceDetailServiceItemReference"> <!--  Not found in vendor xml -->
+  				<xsd:complexType>
+  					<xsd:sequence>
+  						<xsd:element name="Classification" minOccurs="0" maxOccurs="unbounded">
+  							<xsd:complexType>
+  								<xsd:attribute name="domain" type="kfs:oneToTenCharType" use="required" />
+  							</xsd:complexType>
+  						</xsd:element>
+  						<xsd:element name="ItemID" minOccurs="0" maxOccurs="1">
+  							<xsd:complexType>
+  								<xsd:sequence>
+  									<xsd:element name="SupplierPartID" type="purap:catalogNumberType" />
+  									<xsd:element name="SupplierPartAuxiliaryID" type="purap:auxiliaryIDType" minOccurs="0" maxOccurs="1" />
+  								</xsd:sequence>
+  							</xsd:complexType>
+  						</xsd:element><!-- ItemID -->
+  						<xsd:element ref="Description" minOccurs="0" />
+  					</xsd:sequence>
+  					<xsd:attribute name="lineNumber" type="xsd:unsignedByte" use="optional" />
+  				</xsd:complexType>
+  			</xsd:element><!-- InvoiceDetailServiceItemReference -->
+
+  			<xsd:element name="SubtotalAmount">
+  				<xsd:complexType>
+  					<xsd:sequence>
+  						<xsd:element ref="Money" />
+  					</xsd:sequence>
+  				</xsd:complexType>
+  			</xsd:element>
+
+  			<xsd:choice minOccurs="0">
+  				<xsd:sequence>
+  					<xsd:element name="UnitRate">
+  						<xsd:complexType>
+  							<xsd:sequence>
+  								<xsd:element ref="Money" />
+  								<xsd:element name="UnitOfMeasure" type="purap:uomType" />
+  								<xsd:element name="TermReference" minOccurs="0">
+  									<xsd:complexType>
+  										<xsd:attribute name="termName" type="kfs:oneToTwentyCharType" use="required" />
+  										<xsd:attribute name="term" type="kfs:oneToTenCharType" use="required" />
+  									</xsd:complexType>
+  								</xsd:element>
+  							</xsd:sequence>
+  						</xsd:complexType>
+  					</xsd:element><!-- UnitRate -->
+  				</xsd:sequence>
+  				<xsd:sequence>
+  					<xsd:element name="UnitOfMeasure" type="purap:uomType" />
+  					<xsd:element ref="UnitPrice" />
+  				</xsd:sequence>
+  			</xsd:choice>
+
+  			<xsd:element ref="Tax" minOccurs="0" />
+  			<xsd:element ref="GrossAmount" minOccurs="0" />
+  			<xsd:element ref="InvoiceDetailDiscount" minOccurs="0" />
+  			<xsd:element ref="NetAmount" minOccurs="0" />
+  			<xsd:element ref="Comments" minOccurs="0" />
+  			<xsd:element ref="Extrinsic" minOccurs="0" maxOccurs="unbounded"/>
+
+  		</xsd:sequence>
+  		
+  		<xsd:attribute name="invoiceLineNumber" type="xsd:unsignedByte" use="required" />
+  		<xsd:attribute name="quantity" type="xsd:unsignedByte" use="optional" />
+  		<xsd:attribute name="referenceDate" type="xsd:date" use="optional" />
+  		<xsd:attribute name="inspectionDate" type="xsd:date" use="optional" />
+  		
+  	</xsd:complexType>
+  </xsd:element>  <!-- InvoiceDetailServiceItem -->
+  
+
+
+  <xsd:element name="cXML">
+    <xsd:complexType>
+      <xsd:sequence>
+        <xsd:element name="Header">
+          <xsd:complexType>
+            <xsd:sequence>
+              <xsd:element name="From">
+                <xsd:complexType>
+                  <xsd:sequence>
+                    <xsd:element ref="Credential"/>
+                  </xsd:sequence>
+                </xsd:complexType>
+              </xsd:element>
+              <xsd:element name="To">
+                <xsd:complexType>
+                  <xsd:sequence>
+                    <xsd:element ref="Credential"/>
+                  </xsd:sequence>
+                </xsd:complexType>
+              </xsd:element>
+              <xsd:element name="Sender">
+                <xsd:complexType>
+                  <xsd:sequence>
+                    <xsd:element ref="Credential"/>
+                    <xsd:element name="UserAgent" type="kfs:zeroToFiftyFiveCharType" />
+                  </xsd:sequence>
+                </xsd:complexType>
+              </xsd:element>
+            </xsd:sequence>
+          </xsd:complexType>
+        </xsd:element>
+        <xsd:element name="Request">
+          <xsd:complexType>
+            <xsd:sequence>
+              <xsd:element name="InvoiceDetailRequest">
+                <xsd:complexType>
+                  <xsd:sequence>
+                    <xsd:element name="InvoiceDetailRequestHeader">
+                      <xsd:complexType>
+                        <xsd:sequence>
+                          <xsd:element name="InvoiceDetailHeaderIndicator">
+                            <xsd:complexType>
+                              <xsd:simpleContent>
+                                <xsd:extension base="purap:emptyType">
+                                  <xsd:attribute name="isHeaderInvoice" use="optional">
+                                  	<xsd:simpleType>
+										<xsd:restriction base="xsd:string">
+											<xsd:enumeration value="yes"/>
+	   									</xsd:restriction>
+  									</xsd:simpleType>
+  								  </xsd:attribute>	
+                                  <xsd:attribute name="isVatRecoverable" use="optional">
+                                  	<xsd:simpleType>
+										<xsd:restriction base="xsd:string">
+											<xsd:enumeration value="yes"/>
+	   									</xsd:restriction>
+  									</xsd:simpleType>
+  								  </xsd:attribute>	
+                                </xsd:extension>
+                              </xsd:simpleContent>
+                            </xsd:complexType>
+                          </xsd:element>
+                          <xsd:element name="InvoiceDetailLineIndicator">
+                            <xsd:complexType>
+                              <xsd:simpleContent>
+                                <xsd:extension base="purap:emptyType">
+                                  <xsd:attribute name="isTaxInLine" use="optional">
+                                  	<xsd:simpleType>
+										<xsd:restriction base="xsd:string">
+											<xsd:enumeration value="yes"/>
+	   									</xsd:restriction>
+  									</xsd:simpleType>
+  								  </xsd:attribute>	
+                                  <xsd:attribute name="isSpecialHandlingInLine" use="optional">
+                                  	<xsd:simpleType>
+										<xsd:restriction base="xsd:string">
+											<xsd:enumeration value="yes"/>
+	   									</xsd:restriction>
+  									</xsd:simpleType>
+  								  </xsd:attribute>	
+                                  <xsd:attribute name="isShippingInLine" use="optional">
+                                  	<xsd:simpleType>
+										<xsd:restriction base="xsd:string">
+											<xsd:enumeration value="yes"/>
+	   									</xsd:restriction>
+  									</xsd:simpleType>
+  								  </xsd:attribute>	
+                                  <xsd:attribute name="isDiscountInLine" use="optional" >
+                                  	<xsd:simpleType>
+										<xsd:restriction base="xsd:string">
+											<xsd:enumeration value="yes"/>
+	   									</xsd:restriction>
+  									</xsd:simpleType>
+  								  </xsd:attribute>	
+                                  <xsd:attribute name="isAccountingInLine" use="optional">
+                                  	<xsd:simpleType>
+										<xsd:restriction base="xsd:string">
+											<xsd:enumeration value="yes"/>
+	   									</xsd:restriction>
+  									</xsd:simpleType>
+  								  </xsd:attribute>	
+                                </xsd:extension>
+                              </xsd:simpleContent>
+                            </xsd:complexType>
+                          </xsd:element>
+                          <xsd:element name="InvoicePartner" minOccurs="0" maxOccurs="unbounded" >
+                            <xsd:complexType>
+                              <xsd:sequence>
+                              	<!-- Contact should be allowed only once, but EPIC parser is supporting
+                              	more than one, that's why chaged the maxOccurs -->
+                                <xsd:element ref="Contact" maxOccurs="unbounded"/>
+                                <xsd:element name="IdReference" minOccurs="0">
+                                  <xsd:complexType>
+                                    <xsd:sequence>
+                                      <xsd:element name="Creator" type="kfs:zeroToTwentyCharType" minOccurs="0" />
+                                      <xsd:element ref="Description" minOccurs="0"/>
+                                    </xsd:sequence>
+                                    <xsd:attribute name="domain" type="kfs:zeroToTwentyCharType" use="required" />
+                                    <xsd:attribute name="identifier" type="kfs:zeroToTwentyCharType" use="required" />
+                                  </xsd:complexType>
+                                </xsd:element>
+                              </xsd:sequence>
+                            </xsd:complexType>
+                          </xsd:element>
+                          
+                          <!-- Two elements DocumentReference and InvoiceIDInfo not used in EPIC -->
+                          
+                          <xsd:element ref="InvoiceDetailShipping" minOccurs="0"/>
+
+                          <!-- This is not used in EPIC -->
+						  <xsd:choice minOccurs="0" maxOccurs="unbounded">
+	                          <xsd:element name="InvoiceDetailPaymentTerm">
+	                            <xsd:complexType>
+	                              <xsd:attribute name="payInNumberOfDays" type="xsd:unsignedInt" use="required" />
+	                              <xsd:attribute name="percentageRate" type="xsd:decimal" use="required" />
+	                            </xsd:complexType>
+	                          </xsd:element>
+	                          <xsd:element name="PaymentTerm">
+	                            <xsd:complexType>
+	                              <xsd:attribute name="payInNumberOfDays" type="xsd:unsignedInt" use="required" />
+	                            </xsd:complexType>
+	                          </xsd:element>
+                          </xsd:choice>
+                          
+                          <!--  InvoiceDetailPaymentTerm and PaymentTerm not used in EPIC -->
+                          
+                          <xsd:element ref="Comments" minOccurs="0"/>
+
+                          <xsd:element ref="Extrinsic" minOccurs="0" maxOccurs="unbounded"/>
+                          
+                        </xsd:sequence>
+                        <xsd:attribute name="purpose" use="optional" default="standard">
+                        	<xsd:simpleType>
+								<xsd:restriction base="xsd:string">
+									<!--  This is the only value allowed in EPIC/Kuali -->
+									<xsd:enumeration value="standard"/>
+									<!--<xsd:enumeration value="creditMemo"/>
+									<xsd:enumeration value="debitMemo"/>
+									<xsd:enumeration value="lineLevelCreditMemo"/>-->
+	   							</xsd:restriction>
+  							</xsd:simpleType>
+  						</xsd:attribute>	
+                        <xsd:attribute name="operation" default="new">
+                        	<xsd:simpleType>
+								<xsd:restriction base="xsd:string">
+									<!--  This is the only value allowed in EPIC/Kuali -->
+									<xsd:enumeration value="new"/>
+									<!--<xsd:enumeration value="delete"/>
+									<xsd:enumeration value="update"/>-->
+	   							</xsd:restriction>
+  							</xsd:simpleType>
+  						</xsd:attribute>	
+  						<!-- Changed to string from dateTime because of diff formats in the vendor xml files
+  						In vwr, it's like 2008-07-29 (Not valid)
+  						In guybrown, it's 2008-07-29T12:00:00 (valid dateTime)
+  						In fisher, it's 2008-07-25T00:00:00-08:00 (valid dateTime) -->
+                        <xsd:attribute name="invoiceDate" type="purap:dateStringType" use="required" />
+                        <!-- Changed to String from unsignedint -->
+                        <xsd:attribute name="invoiceID" type="purap:idType" use="required" />
+                        <xsd:attribute name="paymentMethodCode" type="kfs:oneAlphaType" use="optional" />
+                        <xsd:attribute name="isInformationOnly" use="optional">
+                        	<xsd:simpleType>
+								<xsd:restriction base="xsd:string">
+						      		<xsd:enumeration value="yes"/>
+	   							</xsd:restriction>
+  							</xsd:simpleType>
+                        </xsd:attribute>
+                      </xsd:complexType>
+                    </xsd:element>
+                    <xsd:element name="InvoiceDetailOrder" minOccurs="1" maxOccurs="unbounded">
+                      <xsd:complexType>
+                        <xsd:sequence>
+                          <xsd:element name="InvoiceDetailOrderInfo">
+                            <xsd:complexType>
+                              <xsd:sequence>
+                               		<xsd:choice>
+                               			<xsd:sequence>
+                               				<xsd:element ref="OrderReference"/>
+	                                 		<xsd:choice minOccurs="0">
+										        <xsd:element ref="MasterAgreementReference"/>
+										        <xsd:element ref="MasterAgreementIDInfo"/>
+										    </xsd:choice>
+										    <xsd:element ref="SupplierOrderInfo" minOccurs="0"/>
+                               			</xsd:sequence>
+                               			<xsd:sequence>
+                               				<xsd:element ref="MasterAgreementReference"/>
+										    <xsd:element ref="OrderIDInfo" minOccurs="0"/>
+									        <xsd:element ref="SupplierOrderInfo" minOccurs="0"/>
+                               			</xsd:sequence>
+                               			<xsd:sequence>
+                               				<xsd:element ref="MasterAgreementIDInfo"/>
+										    <xsd:element ref="OrderIDInfo" minOccurs="0"/>
+									        <xsd:element ref="SupplierOrderInfo" minOccurs="0"/>
+                               			</xsd:sequence>
+                               			<xsd:sequence>
+										    <xsd:element ref="OrderIDInfo"/>
+									        <xsd:element ref="SupplierOrderInfo" minOccurs="0"/>
+                               			</xsd:sequence>
+                               			<xsd:sequence>
+                               				<xsd:element ref="SupplierOrderInfo"/>
+                               			</xsd:sequence>
+                               		</xsd:choice>
+                              </xsd:sequence>
+                            </xsd:complexType>
+                          </xsd:element>
+                          
+                          <xsd:choice>
+                          		<xsd:element ref="InvoiceDetailItem" minOccurs="1" maxOccurs="unbounded"/>
+                          		<xsd:element ref="InvoiceDetailServiceItem" minOccurs="1" maxOccurs="unbounded"/>
+                          </xsd:choice>
+                          
+                        </xsd:sequence>
+                      </xsd:complexType>
+                    </xsd:element>
+                    
+                    <!--  The next element should be InvoiceDetailHeaderOrder, but EPIC doesnt uses this element -->
+                    
+                    <xsd:element name="InvoiceDetailSummary">
+                      <xsd:complexType>
+                        <xsd:sequence>
+                          <xsd:element name="SubtotalAmount">
+                            <xsd:complexType>
+                              <xsd:sequence>
+                                <xsd:element ref="Money"/>
+                              </xsd:sequence>
+                            </xsd:complexType>
+                          </xsd:element>
+                          <xsd:element ref="Tax"/>
+                          <xsd:element name="SpecialHandlingAmount" minOccurs="0">
+                            <xsd:complexType>
+                              <xsd:sequence>
+                                <xsd:element ref="Money"/>
+                                <xsd:element ref="Description" minOccurs="0"/>
+                              </xsd:sequence>
+                            </xsd:complexType>
+                          </xsd:element>
+                          <xsd:element name="ShippingAmount" minOccurs="0">
+                            <xsd:complexType>
+                              <xsd:sequence>
+                                <xsd:element ref="Money"/>
+                              </xsd:sequence>
+                            </xsd:complexType>
+                          </xsd:element>
+                          <xsd:element ref="GrossAmount" minOccurs="0"/>
+                          <xsd:element ref="InvoiceDetailDiscount" minOccurs="0"/>
+                          <xsd:element ref="NetAmount"/>
+                          <xsd:element name="DepositAmount" minOccurs="0">
+                            <xsd:complexType>
+                              <xsd:sequence>
+                                <xsd:element ref="Money"/>
+                              </xsd:sequence>
+                            </xsd:complexType>
+                          </xsd:element>
+                          <xsd:element name="DueAmount" minOccurs="0">
+                            <xsd:complexType>
+                              <xsd:sequence>
+                                <xsd:element ref="Money"/>
+                              </xsd:sequence>
+                            </xsd:complexType>
+                          </xsd:element>
+                        </xsd:sequence>
+                      </xsd:complexType>
+                    </xsd:element>
+                  </xsd:sequence>
+                </xsd:complexType>
+              </xsd:element>
+            </xsd:sequence>
+            <xsd:attribute name="deploymentMode" use="optional" default="production">
+            	<xsd:simpleType>
+					<xsd:restriction base="xsd:string">
+						<!-- This is the only value allowed in kuali -->
+						<xsd:enumeration value="production"/>
+						<!-- <xsd:enumeration value="test"/>  -->
+					 </xsd:restriction>
+				 </xsd:simpleType>
+  			</xsd:attribute>				
+          </xsd:complexType>
+        </xsd:element>
+      </xsd:sequence>
+      <!-- Chaning to optional since barnesandnoble's xml doesn't contain this attribute -->
+      <xsd:attribute name="version" type="xsd:string" use="optional" default="1.2.019"/>
+      <xsd:attribute ref="xml:lang" use="optional" />
+      <xsd:attribute name="timestamp" type="xsd:string" use="required" />
+      <xsd:attribute name="payloadID" type="xsd:string" use="required" />
+    </xsd:complexType>
+  </xsd:element>
+</xsd:schema>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/fp/document/service/DisbursementVoucherTravelServiceTest.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/fp/document/service/DisbursementVoucherTravelServiceTest.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/fp/document/service/DisbursementVoucherTravelServiceTest.java	(revision 10217)
@@ -21,6 +21,7 @@
 import org.kuali.kfs.sys.ConfigureContext;
 import org.kuali.kfs.sys.context.KualiTestBase;
 import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.rice.kns.service.DataDictionaryService;
 import org.kuali.rice.kns.service.DateTimeService;
 import org.kuali.rice.kns.util.KualiDecimal;
 
@@ -37,7 +38,7 @@
      * @throws Exception
      */
     public void testCalculatePerDiem() throws Exception {
-        dvDocument = new DisbursementVoucherDocument();
+        dvDocument = (DisbursementVoucherDocument) SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName("DV").newInstance();
         dvDocument.getDvNonEmployeeTravel().setPerDiemStartDateTime("04/21/2006 12:00 AM");
         dvDocument.getDvNonEmployeeTravel().setPerDiemEndDateTime("04/22/2006 12:01 AM");
         runPerDiemTest(dvDocument.getDvNonEmployeeTravel().getDvPerdiemStartDttmStamp(), dvDocument.getDvNonEmployeeTravel().getDvPerdiemEndDttmStamp(), new KualiDecimal(10), new KualiDecimal(12.50));
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/fp/document/service/DisbursementVoucherTaxServiceTest.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/fp/document/service/DisbursementVoucherTaxServiceTest.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/fp/document/service/DisbursementVoucherTaxServiceTest.java	(revision 10217)
@@ -25,6 +25,7 @@
 import org.kuali.kfs.sys.businessobject.SourceAccountingLine;
 import org.kuali.kfs.sys.context.KualiTestBase;
 import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.rice.kns.service.DataDictionaryService;
 import org.kuali.rice.kns.util.GlobalVariables;
 import org.kuali.rice.kns.util.KualiDecimal;
 
@@ -38,7 +39,7 @@
     @Override
     protected void setUp() throws Exception {
         super.setUp();
-        dvDocument = new DisbursementVoucherDocument();
+        dvDocument = (DisbursementVoucherDocument) SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName("DV").newInstance();
         dvDocument.setDvPayeeDetail(new DisbursementVoucherPayeeDetail());
         dvDocument.setDvNonResidentAlienTax(new DisbursementVoucherNonResidentAlienTax());
         dvDocument.getDvPayeeDetail().setDisbVchrAlienPaymentCode(true);
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/cab/fixture/PaymentRequestDocumentFixture.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/cab/fixture/PaymentRequestDocumentFixture.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/cab/fixture/PaymentRequestDocumentFixture.java	(revision 10217)
@@ -18,10 +18,12 @@
 import java.util.ArrayList;
 import java.util.List;
 
+import org.kuali.kfs.module.purap.PurapConstants;
 import org.kuali.kfs.module.purap.document.PaymentRequestDocument;
 import org.kuali.kfs.sys.context.SpringContext;
 import org.kuali.rice.kns.bo.PersistableBusinessObjectBase;
 import org.kuali.rice.kns.service.BusinessObjectService;
+import org.kuali.rice.kns.service.DataDictionaryService;
 import org.kuali.rice.kns.service.DateTimeService;
 import org.kuali.rice.kns.util.KualiDecimal;
 
@@ -31,7 +33,13 @@
 
         @Override
         public PaymentRequestDocument newRecord() {
-            PaymentRequestDocument obj = new PaymentRequestDocument();
+            PaymentRequestDocument obj = null;
+            try {
+                obj = (PaymentRequestDocument)SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT).newInstance();
+            }
+            catch (Exception ex) {
+                ex.printStackTrace();
+            }
             java.sql.Timestamp timeStamp = new java.sql.Timestamp(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             java.sql.Date date = new java.sql.Date(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             obj.setPurapDocumentIdentifier(311);
@@ -80,7 +88,13 @@
 
         @Override
         public PaymentRequestDocument newRecord() {
-            PaymentRequestDocument obj = new PaymentRequestDocument();
+            PaymentRequestDocument obj = null;
+            try {
+                obj = (PaymentRequestDocument)SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT).newInstance();
+            }
+            catch (Exception ex) {
+                ex.printStackTrace();
+            }
             java.sql.Timestamp timeStamp = new java.sql.Timestamp(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             java.sql.Date date = new java.sql.Date(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             obj.setPurapDocumentIdentifier(321);
@@ -129,7 +143,13 @@
 
         @Override
         public PaymentRequestDocument newRecord() {
-            PaymentRequestDocument obj = new PaymentRequestDocument();
+            PaymentRequestDocument obj = null;
+            try {
+                obj = (PaymentRequestDocument)SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT).newInstance();
+            }
+            catch (Exception ex) {
+                ex.printStackTrace();
+            }
             java.sql.Timestamp timeStamp = new java.sql.Timestamp(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             java.sql.Date date = new java.sql.Date(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             obj.setPurapDocumentIdentifier(331);
@@ -178,7 +198,13 @@
 
         @Override
         public PaymentRequestDocument newRecord() {
-            PaymentRequestDocument obj = new PaymentRequestDocument();
+            PaymentRequestDocument obj = null;
+            try {
+                obj = (PaymentRequestDocument)SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT).newInstance();
+            }
+            catch (Exception ex) {
+                ex.printStackTrace();
+            }
             java.sql.Timestamp timeStamp = new java.sql.Timestamp(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             java.sql.Date date = new java.sql.Date(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             obj.setPurapDocumentIdentifier(341);
@@ -227,7 +253,13 @@
 
         @Override
         public PaymentRequestDocument newRecord() {
-            PaymentRequestDocument obj = new PaymentRequestDocument();
+            PaymentRequestDocument obj = null;
+            try {
+                obj = (PaymentRequestDocument)SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT).newInstance();
+            }
+            catch (Exception ex) {
+                ex.printStackTrace();
+            }
             java.sql.Timestamp timeStamp = new java.sql.Timestamp(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             java.sql.Date date = new java.sql.Date(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             obj.setPurapDocumentIdentifier(351);
@@ -276,7 +308,13 @@
 
         @Override
         public PaymentRequestDocument newRecord() {
-            PaymentRequestDocument obj = new PaymentRequestDocument();
+            PaymentRequestDocument obj = null;
+            try {
+                obj = (PaymentRequestDocument)SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT).newInstance();
+            }
+            catch (Exception ex) {
+                ex.printStackTrace();
+            }
             java.sql.Timestamp timeStamp = new java.sql.Timestamp(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             java.sql.Date date = new java.sql.Date(SpringContext.getBean(DateTimeService.class).getCurrentDate().getTime());
             obj.setPurapDocumentIdentifier(361);
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/service/ElectronicInvoiceHelperServiceTest.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/service/ElectronicInvoiceHelperServiceTest.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/service/ElectronicInvoiceHelperServiceTest.java	(revision 10217)
@@ -49,8 +49,10 @@
 import org.kuali.kfs.sys.suite.RelatesTo.JiraIssue;
 import org.kuali.kfs.vnd.businessobject.VendorDetail;
 import org.kuali.kfs.vnd.document.service.VendorService;
+import org.kuali.rice.kns.UserSession;
 import org.kuali.rice.kns.service.DocumentService;
 import org.kuali.rice.kns.service.ParameterService;
+import org.kuali.rice.kns.util.GlobalVariables;
 import org.kuali.rice.kns.util.Guid;
 
 @ConfigureContext
@@ -85,7 +87,7 @@
      * TODO: Fix this test. It should not have a hard-coded URL for finding the schema.
      */
     @ConfigureContext(session = kfs, shouldCommitTransactions=true)
-    public void PATCHFIX_testRejectDocumentCreationInvalidData()
+    public void XXX_testRejectDocumentCreationInvalidData()
     throws Exception{
         
         String rejectFile = "reject.xml";
@@ -99,10 +101,10 @@
         //If we use the schemaLocation with DEV url and not running Tomcat locally, this test is going to fail, because
         //it won't be able to find the electronicInvoice.xsd unless Tomcat is running locally.
         //Therefore, for unit test purpose, let's set the schemaLocation to CNV url.
-        String schemaLocation = electronicInvoiceInputFileType.getSchemaLocation();
-        int beginIndex = schemaLocation.indexOf("static");
-        String newSchemaLocation = "https://test.kuali.org/kfs-reg/" + schemaLocation.substring(beginIndex);
-        electronicInvoiceInputFileType.setSchemaLocation(newSchemaLocation);
+//        String schemaLocation = electronicInvoiceInputFileType.getSchemaLocation();
+//        int beginIndex = schemaLocation.indexOf("static");
+//        String newSchemaLocation = "https://test.kuali.org/kfs-reg/" + schemaLocation.substring(beginIndex);
+//        electronicInvoiceInputFileType.setSchemaLocation(newSchemaLocation);
         
         ElectronicInvoiceLoad load = SpringContext.getBean(ElectronicInvoiceHelperService.class).loadElectronicInvoices();
 
@@ -122,7 +124,7 @@
      * TODO: Fix this test. It should not have a hard-coded URL for finding the schema.
      */
     @ConfigureContext(session = kfs, shouldCommitTransactions=true)
-    public void PATCHFIX_testRejectDocumentCreationCorruptXML()
+    public void XXX_testRejectDocumentCreationCorruptXML()
     throws Exception{
         
         String corruptFile = "corrupt.xml";
@@ -153,32 +155,35 @@
      * TODO: Fix this test. It should not have a hard-coded URL for finding the schema.
      */
     @ConfigureContext(session = kfs, shouldCommitTransactions=false)
-    public void PATCHFIX_testPaymentRequestDocumentCreation()
+    public void testPaymentRequestDocumentCreation()
     throws Exception{
         
         String acceptFile = "accept.xml";
         
-        changeCurrentUser(khuntley);
-        RequisitionDocument reqDoc = RequisitionDocumentFixture.REQ_ONLY_REQUIRED_FIELDS.createRequisitionDocument();
-        AccountingDocumentTestUtils.testRouteDocument(reqDoc, SpringContext.getBean(DocumentService.class));
-        Integer reqId = reqDoc.getPurapDocumentIdentifier();
-
-        changeCurrentUser(kfs);
-        PurchaseOrderDocument poDocument = createPODoc(reqId);
+//        changeCurrentUser(khuntley);
+//        GlobalVariables.setUserSession(new UserSession("kfs-test-sys1"));
+//        RequisitionDocument reqDoc = RequisitionDocumentFixture.REQ_ONLY_REQUIRED_FIELDS.createRequisitionDocument();
+//        AccountingDocumentTestUtils.testRouteDocument(reqDoc, SpringContext.getBean(DocumentService.class));
+//        Integer reqId = reqDoc.getPurapDocumentIdentifier();
+//
+//        changeCurrentUser(kfs);
+//        PurchaseOrderDocument poDocument = createPODoc(reqId);
+//        
+//        String vendorDUNS = RandomUtils.nextInt() + "";
+//        if (StringUtils.isEmpty(poDocument.getVendorDetail().getVendorDunsNumber())){
+//            VendorDetail vd = SpringContext.getBean(VendorService.class).getByVendorNumber(poDocument.getVendorNumber());
+//            vd.setVendorDunsNumber(vendorDUNS);
+//            SpringContext.getBean(VendorService.class).saveVendorHeader(vd);
+//        }else{
+//            vendorDUNS = poDocument.getVendorDetail().getVendorDunsNumber();
+//        }
+//        
+//        String poNumber = poDocument.getPurapDocumentIdentifier().toString();
+//        createItemMappingsRecords(poDocument.getVendorHeaderGeneratedIdentifier()+"", poDocument.getVendorDetailAssignedIdentifier()+"");
+//        updateUnitPriceVariance();
         
-        String vendorDUNS = RandomUtils.nextInt() + "";
-        if (StringUtils.isEmpty(poDocument.getVendorDetail().getVendorDunsNumber())){
-            VendorDetail vd = SpringContext.getBean(VendorService.class).getByVendorNumber(poDocument.getVendorNumber());
-            vd.setVendorDunsNumber(vendorDUNS);
-            SpringContext.getBean(VendorService.class).saveVendorHeader(vd);
-        }else{
-            vendorDUNS = poDocument.getVendorDetail().getVendorDunsNumber();
-        }
-        
-        String poNumber = poDocument.getPurapDocumentIdentifier().toString();
-        createItemMappingsRecords(poDocument.getVendorHeaderGeneratedIdentifier()+"", poDocument.getVendorDetailAssignedIdentifier()+"");
-        updateUnitPriceVariance();
-        
+        String vendorDUNS="0001236545";
+        String poNumber = "";
         String xmlChunk = ElectronicInvoiceHelperServiceFixture.getCXMLForPaymentDocCreation(vendorDUNS,poNumber);
         writeXMLFile(xmlChunk, acceptFile);
         
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/fixture/ElectronicInvoiceHelperServiceFixture.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/fixture/ElectronicInvoiceHelperServiceFixture.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/fixture/ElectronicInvoiceHelperServiceFixture.java	(revision 10217)
@@ -104,7 +104,7 @@
         
         request.append("<Request deploymentMode=\"production\">");
         request.append("<InvoiceDetailRequest>");
-        request.append("<InvoiceDetailRequestHeader invoiceID=\"LDR3496\" purpose=\"standard\" invoiceDate=" + getCXMLDate(true) +">");
+        request.append("<InvoiceDetailRequestHeader invoiceID=\"LDR3496\" purpose=\"standard\" invoiceDate=" + getCXMLDate(true) +" paymentMethodCode=\"F\">");
         request.append("<InvoiceDetailHeaderIndicator/>");
         request.append("<InvoiceDetailLineIndicator/>");
         request.append("<InvoicePartner>");
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/util/TestPaymentRequestPayDateNotPastValidation.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/util/TestPaymentRequestPayDateNotPastValidation.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/util/TestPaymentRequestPayDateNotPastValidation.java	(revision 10217)
@@ -17,9 +17,12 @@
 
 import java.sql.Date;
 
+import org.kuali.kfs.module.purap.PurapConstants;
 import org.kuali.kfs.module.purap.document.PaymentRequestDocument;
 import org.kuali.kfs.module.purap.document.validation.impl.PaymentRequestPayDateNotPastValidation;
 import org.kuali.kfs.module.purap.fixture.PaymentRequestInvoiceTabFixture;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.rice.kns.service.DataDictionaryService;
 
 public class TestPaymentRequestPayDateNotPastValidation extends PaymentRequestPayDateNotPastValidation {
 
@@ -27,7 +30,13 @@
     
     @Override
     protected PaymentRequestDocument retrievePaymentRequestDocumentFromDatabase(PaymentRequestDocument document) {
-        PaymentRequestDocument temp = new PaymentRequestDocument();
+        PaymentRequestDocument temp = null;
+        try {
+            temp = (PaymentRequestDocument)SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT).newInstance();
+        }
+        catch (Exception ex) {
+            ex.printStackTrace();
+        }
         PaymentRequestInvoiceTabFixture.WITH_POID_WITH_DATE_WITH_NUMBER_WITH_AMOUNT.populate(temp);
         temp.setPaymentRequestPayDate(testDate);
         return temp;
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/document/validation/impl/PaymentRequestDocumentRuleTest.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/document/validation/impl/PaymentRequestDocumentRuleTest.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/test/unit/src/org/kuali/kfs/module/purap/document/validation/impl/PaymentRequestDocumentRuleTest.java	(revision 10217)
@@ -41,6 +41,7 @@
 import org.kuali.kfs.sys.suite.RelatesTo.JiraIssue;
 import org.kuali.rice.kew.exception.WorkflowException;
 import org.kuali.rice.kim.bo.Person;
+import org.kuali.rice.kns.service.DataDictionaryService;
 import org.kuali.rice.kns.service.DateTimeService;
 import org.kuali.rice.kns.service.DocumentService;
 import org.kuali.rice.kns.util.ErrorMessage;
@@ -59,7 +60,12 @@
     @Override
     protected void setUp() throws Exception {
         super.setUp();
-        preq = new PaymentRequestDocument();
+        try {
+            preq = (PaymentRequestDocument)SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT).newInstance();
+        }
+        catch (Exception ex) {
+            ex.printStackTrace();
+        }
         validations = SpringContext.getBeansOfType(GenericValidation.class);    
     }
 
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/fp/batch/service/impl/DisbursementVoucherExtractServiceImpl.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/fp/batch/service/impl/DisbursementVoucherExtractServiceImpl.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/fp/batch/service/impl/DisbursementVoucherExtractServiceImpl.java	(revision 10217)
@@ -16,7 +16,6 @@
 package org.kuali.kfs.fp.batch.service.impl;
 
 import java.sql.Timestamp;
-import java.text.ParseException;
 import java.util.ArrayList;
 import java.util.Collection;
 import java.util.Date;
@@ -63,6 +62,7 @@
 import org.kuali.rice.kim.bo.Person;
 import org.kuali.rice.kim.service.PersonService;
 import org.kuali.rice.kns.service.BusinessObjectService;
+import org.kuali.rice.kns.service.DataDictionaryService;
 import org.kuali.rice.kns.service.DateTimeService;
 import org.kuali.rice.kns.service.DocumentService;
 import org.kuali.rice.kns.service.ParameterEvaluator;
@@ -567,7 +567,7 @@
         Collection<DisbursementVoucherDocument> list = new ArrayList<DisbursementVoucherDocument>();
 
         try {
-            Collection<DisbursementVoucherDocument> docs = SpringContext.getBean(FinancialSystemDocumentService.class).findByDocumentHeaderStatusCode(DisbursementVoucherDocument.class, statusCode);
+            Collection<DisbursementVoucherDocument> docs = SpringContext.getBean(FinancialSystemDocumentService.class).findByDocumentHeaderStatusCode(SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName("DV"), statusCode);
             for (DisbursementVoucherDocument element : docs) {
                 String dvdCampusCode = element.getCampusCode();
 
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/fp/dataaccess/impl/DisbursementVoucherDaoOjb.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/fp/dataaccess/impl/DisbursementVoucherDaoOjb.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/fp/dataaccess/impl/DisbursementVoucherDaoOjb.java	(revision 10217)
@@ -22,9 +22,9 @@
 import org.kuali.kfs.fp.dataaccess.DisbursementVoucherDao;
 import org.kuali.kfs.fp.document.DisbursementVoucherConstants;
 import org.kuali.kfs.fp.document.DisbursementVoucherDocument;
-import org.kuali.rice.kim.bo.Person;
-import org.kuali.kfs.vnd.businessobject.VendorDetail;
+import org.kuali.kfs.sys.context.SpringContext;
 import org.kuali.rice.kns.dao.impl.PlatformAwareDaoBaseOjb;
+import org.kuali.rice.kns.service.DataDictionaryService;
 
 public class DisbursementVoucherDaoOjb extends PlatformAwareDaoBaseOjb implements DisbursementVoucherDao {
     private static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(DisbursementVoucherDaoOjb.class);
@@ -44,12 +44,13 @@
         Criteria criteria = new Criteria();
         criteria.addEqualTo("documentNumber", fdocNbr);
 
-        return (DisbursementVoucherDocument) getPersistenceBrokerTemplate().getObjectByQuery(new QueryByCriteria(DisbursementVoucherDocument.class, criteria));
+        return (DisbursementVoucherDocument) getPersistenceBrokerTemplate().getObjectByQuery(new QueryByCriteria(getDisbursementVoucherDocumentClass(), criteria));
     }
 
     /**
      * @see org.kuali.kfs.fp.dataaccess.DisbursementVoucherDao#getDocumentsByHeaderStatus(java.lang.String)
      */
+    @SuppressWarnings("unchecked")
     public Collection getDocumentsByHeaderStatus(String statusCode) {
         LOG.debug("getDocumentsByHeaderStatus() started");
 
@@ -57,7 +58,12 @@
         criteria.addEqualTo("documentHeader.financialDocumentStatusCode", statusCode);
         criteria.addEqualTo("disbVchrPaymentMethodCode", DisbursementVoucherConstants.PAYMENT_METHOD_CHECK);
 
-        return getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(DisbursementVoucherDocument.class, criteria));
+        return getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(getDisbursementVoucherDocumentClass(), criteria));
     }
+    
+    @SuppressWarnings("unchecked")
+    protected Class getDisbursementVoucherDocumentClass() {
+        return SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName("DV");
+    }
 }
 
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/fp/document/validation/impl/DisbursementVoucherBankCodeValidation.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/fp/document/validation/impl/DisbursementVoucherBankCodeValidation.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/fp/document/validation/impl/DisbursementVoucherBankCodeValidation.java	(revision 10217)
@@ -15,6 +15,7 @@
  */
 package org.kuali.kfs.fp.document.validation.impl;
 
+import org.apache.commons.lang.StringUtils;
 import org.kuali.kfs.fp.document.DisbursementVoucherDocument;
 import org.kuali.kfs.sys.KFSPropertyConstants;
 import org.kuali.kfs.sys.document.AccountingDocument;
@@ -35,8 +36,15 @@
         
         DisbursementVoucherDocument dvDocument = (DisbursementVoucherDocument) accountingDocumentForValidation;
         
-        boolean isValid = BankCodeValidation.validate(dvDocument.getDisbVchrBankCode(), KFSPropertyConstants.DISB_VCHR_BANK_CODE, false, true);
-
+        boolean isValid = BankCodeValidation.validate(dvDocument.getDisbVchrBankCode(), "document." + KFSPropertyConstants.DISB_VCHR_BANK_CODE, dvDocument.getDisbVchrPaymentMethodCode(), false, true);
+        if ( isValid ) {
+            // clear out the bank code on the document if not needed (per the message set by the call above)
+            if ( StringUtils.isNotBlank(dvDocument.getDisbVchrBankCode())
+                    && !BankCodeValidation.doesBankCodeNeedToBePopulated(dvDocument.getDisbVchrPaymentMethodCode()) ) {
+                dvDocument.setBank(null);
+                dvDocument.setDisbVchrBankCode(null);                
+            }
+        }
         return isValid;
     }
 
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/cab/batch/service/impl/BatchExtractServiceImpl.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/cab/batch/service/impl/BatchExtractServiceImpl.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/cab/batch/service/impl/BatchExtractServiceImpl.java	(revision 10217)
@@ -76,6 +76,7 @@
 import org.kuali.kfs.sys.service.impl.KfsParameterConstants;
 import org.kuali.rice.kns.bo.Parameter;
 import org.kuali.rice.kns.service.BusinessObjectService;
+import org.kuali.rice.kns.service.DataDictionaryService;
 import org.kuali.rice.kns.service.DateTimeService;
 import org.kuali.rice.kns.service.ParameterService;
 import org.kuali.rice.kns.util.DateUtils;
@@ -204,7 +205,9 @@
         VendorCreditMemoDocument creditMemoDocument = null;
         Map<String, String> keys = new LinkedHashMap<String, String>();
         keys.put(CabPropertyConstants.DOCUMENT_NUMBER, entry.getDocumentNumber());
-        Collection<VendorCreditMemoDocument> matchingCms = businessObjectService.findMatching(VendorCreditMemoDocument.class, keys);
+        Collection<VendorCreditMemoDocument> matchingCms = businessObjectService.findMatching(
+                SpringContext.getBean(DataDictionaryService.class)
+                        .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.CREDIT_MEMO_DOCUMENT), keys);
         if (matchingCms != null && matchingCms.size() == 1) {
             creditMemoDocument = matchingCms.iterator().next();
         }
@@ -238,8 +241,10 @@
     protected PaymentRequestDocument findPaymentRequestDocument(Entry entry) {
         PaymentRequestDocument paymentRequestDocument = null;
         Map<String, String> keys = new LinkedHashMap<String, String>();
-        keys.put(CabPropertyConstants.DOCUMENT_NUMBER, entry.getDocumentNumber());
-        Collection<PaymentRequestDocument> matchingPreqs = businessObjectService.findMatching(PaymentRequestDocument.class, keys);
+        keys.put(CabPropertyConstants.DOCUMENT_NUMBER, entry.getDocumentNumber());        
+        Collection<PaymentRequestDocument> matchingPreqs = businessObjectService.findMatching(
+                SpringContext.getBean(DataDictionaryService.class)
+                        .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), keys);
         if (matchingPreqs != null && matchingPreqs.size() == 1) {
             paymentRequestDocument = matchingPreqs.iterator().next();
         }
@@ -665,7 +670,9 @@
                 Map<String, String> fieldValues = new HashMap<String, String>();
                 fieldValues.put(CabPropertyConstants.GeneralLedgerEntry.DOCUMENT_NUMBER, entry.getDocumentNumber());
                 // check if vendor credit memo, then include as FP line
-                Collection<VendorCreditMemoDocument> matchingCreditMemos = businessObjectService.findMatching(VendorCreditMemoDocument.class, fieldValues);
+                Collection<VendorCreditMemoDocument> matchingCreditMemos = businessObjectService.findMatching(
+                        SpringContext.getBean(DataDictionaryService.class)
+                                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.CREDIT_MEMO_DOCUMENT), fieldValues);
                 for (VendorCreditMemoDocument creditMemoDocument : matchingCreditMemos) {
                     if (creditMemoDocument.getPurchaseOrderIdentifier() == null) {
                         fpLines.add(entry);
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/cab/businessobject/PurchasingAccountsPayableDocument.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/cab/businessobject/PurchasingAccountsPayableDocument.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/cab/businessobject/PurchasingAccountsPayableDocument.java	(revision 10217)
@@ -24,6 +24,7 @@
 import org.apache.commons.lang.StringUtils;
 import org.kuali.kfs.module.cab.CabConstants;
 import org.kuali.kfs.module.cab.CabPropertyConstants;
+import org.kuali.kfs.module.purap.PurapConstants;
 import org.kuali.kfs.module.purap.PurapPropertyConstants;
 import org.kuali.kfs.module.purap.businessobject.CreditMemoStatus;
 import org.kuali.kfs.module.purap.businessobject.PaymentRequestStatus;
@@ -35,6 +36,7 @@
 import org.kuali.rice.kew.service.impl.KEWModuleService;
 import org.kuali.rice.kns.bo.PersistableBusinessObjectBase;
 import org.kuali.rice.kns.service.BusinessObjectService;
+import org.kuali.rice.kns.service.DataDictionaryService;
 import org.kuali.rice.kns.util.ObjectUtils;
 import org.kuali.rice.kns.util.TypedArrayList;
 
@@ -300,7 +302,8 @@
 
             if (CabConstants.PREQ.equals(this.documentTypeCode)) {
 
-                PaymentRequestDocument paymentRequestDocument = (PaymentRequestDocument) SpringContext.getBean(BusinessObjectService.class).findByPrimaryKey(PaymentRequestDocument.class, objectKeys);
+                PaymentRequestDocument paymentRequestDocument = (PaymentRequestDocument) SpringContext.getBean(BusinessObjectService.class).findByPrimaryKey(SpringContext.getBean(DataDictionaryService.class)
+                        .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), objectKeys);
                 if (ObjectUtils.isNotNull(paymentRequestDocument)) {
                     statusCode = paymentRequestDocument.getStatusCode();
 
@@ -313,7 +316,8 @@
                 }
             }
             else {
-                VendorCreditMemoDocument vendorCreditMemoDocument = (VendorCreditMemoDocument) SpringContext.getBean(BusinessObjectService.class).findByPrimaryKey(VendorCreditMemoDocument.class, objectKeys);
+                VendorCreditMemoDocument vendorCreditMemoDocument = (VendorCreditMemoDocument) SpringContext.getBean(BusinessObjectService.class).findByPrimaryKey(SpringContext.getBean(DataDictionaryService.class)
+                        .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.CREDIT_MEMO_DOCUMENT), objectKeys);
                 if (ObjectUtils.isNotNull(vendorCreditMemoDocument)) {
                     statusCode = vendorCreditMemoDocument.getStatusCode();
 
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/dataaccess/impl/ElectronicInvoicingDaoOjb.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/dataaccess/impl/ElectronicInvoicingDaoOjb.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/dataaccess/impl/ElectronicInvoicingDaoOjb.java	(revision 10217)
@@ -17,7 +17,9 @@
 import org.kuali.kfs.module.purap.dataaccess.ElectronicInvoicingDao;
 import org.kuali.kfs.module.purap.document.ElectronicInvoiceRejectDocument;
 import org.kuali.kfs.module.purap.document.PaymentRequestDocument;
+import org.kuali.kfs.sys.context.SpringContext;
 import org.kuali.rice.kns.dao.impl.PlatformAwareDaoBaseOjb;
+import org.kuali.rice.kns.service.DataDictionaryService;
 
 public class ElectronicInvoicingDaoOjb extends PlatformAwareDaoBaseOjb implements ElectronicInvoicingDao {
 
@@ -57,7 +59,8 @@
         Criteria criteria = new Criteria();
         criteria.addEqualTo("status.code", PurapConstants.PaymentRequestStatuses.PENDING_E_INVOICE);
         criteria.addEqualTo("isElectronicInvoice", Boolean.TRUE);
-        List invoices = (List) getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(PaymentRequestDocument.class, criteria));
+        List invoices = (List) getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria));
         for (Iterator iter = invoices.iterator(); iter.hasNext();) {
             PaymentRequestDocument p = (PaymentRequestDocument) iter.next();
         }
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/service/impl/ElectronicInvoiceHelperServiceImpl.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/service/impl/ElectronicInvoiceHelperServiceImpl.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/service/impl/ElectronicInvoiceHelperServiceImpl.java	(revision 10217)
@@ -124,18 +124,18 @@
     protected final String UNKNOWN_DUNS_IDENTIFIER = "Unknown";
     protected final String INVOICE_FILE_MIME_TYPE = "text/xml";  
     
-    private StringBuffer emailTextErrorList;
+    protected StringBuffer emailTextErrorList;
     
-    private ElectronicInvoiceInputFileType electronicInvoiceInputFileType;
-    private MailService mailService;
-    private ElectronicInvoiceMatchingService matchingService; 
-    private ElectronicInvoicingDao electronicInvoicingDao;
-    private BatchInputFileService batchInputFileService;
-    private VendorService vendorService;
-    private PurchaseOrderService purchaseOrderService;
-    private PaymentRequestService paymentRequestService;
-    private KualiConfigurationService kualiConfigurationService;
-    private DateTimeService dateTimeService;
+    protected ElectronicInvoiceInputFileType electronicInvoiceInputFileType;
+    protected MailService mailService;
+    protected ElectronicInvoiceMatchingService matchingService; 
+    protected ElectronicInvoicingDao electronicInvoicingDao;
+    protected BatchInputFileService batchInputFileService;
+    protected VendorService vendorService;
+    protected PurchaseOrderService purchaseOrderService;
+    protected PaymentRequestService paymentRequestService;
+    protected KualiConfigurationService kualiConfigurationService;
+    protected DateTimeService dateTimeService;
     
     public ElectronicInvoiceLoad loadElectronicInvoices() {
 
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/service/impl/PurapGeneralLedgerServiceImpl.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/service/impl/PurapGeneralLedgerServiceImpl.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/service/impl/PurapGeneralLedgerServiceImpl.java	(revision 10217)
@@ -414,9 +414,13 @@
             else if (CANCEL_PAYMENT_REQUEST.equals(processType)) {
                 SpringContext.getBean(PurapAccountRevisionService.class).cancelPaymentRequestAccountRevisions(preq.getItems(), preq.getPostingYearFromPendingGLEntries(), preq.getPostingPeriodCodeFromPendingGLEntries());
             }
+
+            // MOD-PA2000-01 
+            // generate any document level GL entries (offsets or fee charges)
+            // we would only want to do this when booking the actuals (not the encumbrances)
+            preq.generateDocumentGeneralLedgerPendingEntries(sequenceHelper);
         }
 
-
         // Manually save GL entries for Payment Request and encumbrances
         saveGLEntries(preq.getGeneralLedgerPendingEntries());
 
@@ -503,6 +507,11 @@
 
             }
 
+            // MOD-PA2000-01 
+            // generate any document level GL entries (offsets or fee charges)
+            // we would only want to do this when booking the actuals (not the encumbrances)
+            cm.generateDocumentGeneralLedgerPendingEntries(sequenceHelper);
+            
             // manually save cm account change tables (CAMS needs this)
             if (!isCancel) {
                 SpringContext.getBean(PurapAccountRevisionService.class).saveCreditMemoAccountRevisions(cm.getItems(), cm.getPostingYearFromPendingGLEntries(), cm.getPostingPeriodCodeFromPendingGLEntries());
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/document/dataaccess/impl/PaymentRequestDaoOjb.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/document/dataaccess/impl/PaymentRequestDaoOjb.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/document/dataaccess/impl/PaymentRequestDaoOjb.java	(revision 10217)
@@ -41,6 +41,7 @@
 import org.kuali.rice.kew.exception.WorkflowException;
 import org.kuali.rice.kns.dao.impl.PlatformAwareDaoBaseOjb;
 import org.kuali.rice.kns.exception.InfrastructureException;
+import org.kuali.rice.kns.service.DataDictionaryService;
 import org.kuali.rice.kns.service.DateTimeService;
 import org.kuali.rice.kns.service.DocumentService;
 import org.kuali.rice.kns.service.KualiConfigurationService;
@@ -136,7 +137,8 @@
             criteria.addAndCriteria(c1);
         }
 
-        return getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(PaymentRequestDocument.class, criteria));
+        return getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria));
     }
 
     /**
@@ -154,7 +156,8 @@
         criteria.addIsNull("extractedTimestamp");
         criteria.addEqualTo("immediatePaymentIndicator", Boolean.TRUE);
 
-        return getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(PaymentRequestDocument.class, criteria));
+        return getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria));
     }
 
     /**
@@ -192,7 +195,8 @@
         criteria.addEqualTo("vendorHeaderGeneratedIdentifier", vendorHeaderGeneratedIdentifier);
         criteria.addEqualTo("vendorDetailAssignedIdentifier", vendorDetailAssignedIdentifier);
 
-        return getPersistenceBrokerTemplate().getIteratorByQuery(new QueryByCriteria(PaymentRequestDocument.class, criteria));
+        return getPersistenceBrokerTemplate().getIteratorByQuery(new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria));
     }
 
     /**
@@ -226,7 +230,8 @@
         criteria.addEqualTo( "vendorCountryCode", vendor.getVendorCountry() );
         criteria.addLike( "vendorPostalCode", vendor.getVendorPostalCode() + "%" );
 
-        return getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(PaymentRequestDocument.class, criteria));
+        return getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria));
     }
     
     /**
@@ -240,7 +245,8 @@
         criteria.addNotEqualTo("paymentRequestedCancelIndicator", "Y");
         criteria.addIn("status", Arrays.asList(PurapConstants.PaymentRequestStatuses.PREQ_STATUSES_FOR_AUTO_APPROVE));
 
-        Query query = new QueryByCriteria(PaymentRequestDocument.class, criteria);
+        Query query = new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria);
         Iterator<PaymentRequestDocument> documents = (Iterator<PaymentRequestDocument>) getPersistenceBrokerTemplate().getIteratorByQuery(query);
         ArrayList<String> documentHeaderIds = new ArrayList<String>();
         while (documents.hasNext()) {
@@ -250,7 +256,8 @@
 
         if (documentHeaderIds.size() > 0) {
             try {
-                return SpringContext.getBean(DocumentService.class).getDocumentsByListOfDocumentHeaderIds(PaymentRequestDocument.class, documentHeaderIds);
+                return SpringContext.getBean(DocumentService.class).getDocumentsByListOfDocumentHeaderIds(SpringContext.getBean(DataDictionaryService.class)
+                        .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), documentHeaderIds);
             }
             catch (WorkflowException e) {
                 throw new InfrastructureException("unable to retrieve paymentRequestDocuments", e);
@@ -320,7 +327,8 @@
      */
     protected Iterator<Object[]> getDocumentNumbersOfPaymentRequestByCriteria(Criteria criteria, boolean orderByAscending) {
         LOG.debug("getDocumentNumberOfPaymentRequestByCriteria() started");
-        ReportQueryByCriteria rqbc = new ReportQueryByCriteria(PaymentRequestDocument.class, criteria);
+        ReportQueryByCriteria rqbc = new ReportQueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria);
         rqbc.setAttributes(new String[] { KFSPropertyConstants.DOCUMENT_NUMBER });
         if (orderByAscending) {
             rqbc.addOrderByAscending(KFSPropertyConstants.DOCUMENT_NUMBER);
@@ -357,7 +365,8 @@
         criteria.addEqualTo("vendorHeaderGeneratedIdentifier", vendorHeaderGeneratedId);
         criteria.addEqualTo("vendorDetailAssignedIdentifier", vendorDetailAssignedId);
         criteria.addEqualTo("invoiceNumber", invoiceNumber);
-        QueryByCriteria qbc = new QueryByCriteria(PaymentRequestDocument.class, criteria);
+        QueryByCriteria qbc = new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria);
         return this.getPaymentRequestsByQueryByCriteria(qbc);
     }
 
@@ -371,7 +380,8 @@
         criteria.addEqualTo("purchaseOrderIdentifier", poId);
         criteria.addEqualTo("vendorInvoiceAmount", vendorInvoiceAmount);
         criteria.addEqualTo("invoiceDate", invoiceDate);
-        QueryByCriteria qbc = new QueryByCriteria(PaymentRequestDocument.class, criteria);
+        QueryByCriteria qbc = new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria);
         return this.getPaymentRequestsByQueryByCriteria(qbc);
     }
 
@@ -383,7 +393,8 @@
         
         criteria.addEqualTo(PurapPropertyConstants.PURCHASE_ORDER_IDENTIFIER, purchaseOrderId);
         criteria.addIn(PurapPropertyConstants.STATUS_CODE, Arrays.asList(PaymentRequestStatuses.STATUSES_POTENTIALLY_ACTIVE));
-        QueryByCriteria qbc = new QueryByCriteria(PaymentRequestDocument.class, criteria);
+        QueryByCriteria qbc = new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria);
         
         Iterator<Object[]> iter = getDocumentNumbersOfPaymentRequestByCriteria(criteria, false);
         while (iter.hasNext()) {
@@ -399,7 +410,8 @@
         criteria.addNotEqualTo("paymentRequestedCancelIndicator", "Y");
         criteria.addEqualTo("statusCode", PurapConstants.PaymentRequestStatuses.AWAITING_RECEIVING_REVIEW);
 
-        Query query = new QueryByCriteria(PaymentRequestDocument.class, criteria);
+        Query query = new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), criteria);
         Iterator<PaymentRequestDocument> documents = (Iterator<PaymentRequestDocument>) getPersistenceBrokerTemplate().getIteratorByQuery(query);
         ArrayList<String> documentHeaderIds = new ArrayList<String>();
         while (documents.hasNext()) {
@@ -409,7 +421,8 @@
 
         if (documentHeaderIds.size() > 0) {
             try {
-                return SpringContext.getBean(DocumentService.class).getDocumentsByListOfDocumentHeaderIds(PaymentRequestDocument.class, documentHeaderIds);
+                return SpringContext.getBean(DocumentService.class).getDocumentsByListOfDocumentHeaderIds(SpringContext.getBean(DataDictionaryService.class)
+                        .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.PAYMENT_REQUEST_DOCUMENT), documentHeaderIds);
             }
             catch (WorkflowException e) {
                 throw new InfrastructureException("unable to retrieve paymentRequestDocuments", e);
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/document/dataaccess/impl/CreditMemoDaoOjb.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/document/dataaccess/impl/CreditMemoDaoOjb.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/document/dataaccess/impl/CreditMemoDaoOjb.java	(revision 10217)
@@ -34,7 +34,9 @@
 import org.kuali.kfs.module.purap.document.dataaccess.CreditMemoDao;
 import org.kuali.kfs.module.purap.util.VendorGroupingHelper;
 import org.kuali.kfs.sys.KFSPropertyConstants;
+import org.kuali.kfs.sys.context.SpringContext;
 import org.kuali.rice.kns.dao.impl.PlatformAwareDaoBaseOjb;
+import org.kuali.rice.kns.service.DataDictionaryService;
 import org.kuali.rice.kns.util.KualiDecimal;
 import org.kuali.rice.kns.util.TransactionalServiceUtils;
 
@@ -42,7 +44,7 @@
  * OJB Implementation of CreditMemoDao. Provides persistence layer methods for the credit memo document.
  */
 public class CreditMemoDaoOjb extends PlatformAwareDaoBaseOjb implements CreditMemoDao {
-    private static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(CreditMemoDaoOjb.class);
+    private static final org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(CreditMemoDaoOjb.class);
 
     /**
      * @see org.kuali.kfs.module.purap.document.dataaccess.CreditMemoDao#getCreditMemosToExtract(java.lang.String)
@@ -56,7 +58,8 @@
         criteria.addIsNull("extractedTimestamp");
         criteria.addEqualTo("holdIndicator", Boolean.FALSE);
 
-        return getPersistenceBrokerTemplate().getIteratorByQuery(new QueryByCriteria(VendorCreditMemoDocument.class, criteria));
+        return getPersistenceBrokerTemplate().getIteratorByQuery(new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.CREDIT_MEMO_DOCUMENT), criteria));
     }
 
     
@@ -76,7 +79,8 @@
         criteria.addEqualTo( "vendorCountryCode", vendor.getVendorCountry() );
         criteria.addLike( "vendorPostalCode", vendor.getVendorPostalCode() + "%" );
 
-        return getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(VendorCreditMemoDocument.class, criteria));
+        return getPersistenceBrokerTemplate().getCollectionByQuery(new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.CREDIT_MEMO_DOCUMENT), criteria));
     }
 
 
@@ -98,7 +102,8 @@
         // use the criteria to do a Count against the DB, and return the resulting
         // number. Any positive non-zero result means that a potential duplicate
         // exists and we return true, otherwise, return false.
-        int cmCount = getPersistenceBrokerTemplate().getCount(new QueryByCriteria(VendorCreditMemoDocument.class, criteria));
+        int cmCount = getPersistenceBrokerTemplate().getCount(new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.CREDIT_MEMO_DOCUMENT), criteria));
         if (cmCount > 0) {
             return true;
         }
@@ -125,7 +130,8 @@
         // use the criteria to do a Count against the DB, and return the resulting
         // number. Any positive non-zero result means that a potential duplicate
         // exists and we return true, otherwise, return false.
-        int cmCount = getPersistenceBrokerTemplate().getCount(new QueryByCriteria(VendorCreditMemoDocument.class, criteria));
+        int cmCount = getPersistenceBrokerTemplate().getCount(new QueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.CREDIT_MEMO_DOCUMENT), criteria));
         if (cmCount > 0) {
             return true;
         }
@@ -177,7 +183,8 @@
      */
     protected Iterator<Object[]> getDocumentNumbersOfCreditMemoByCriteria(Criteria criteria, boolean orderByAscending) {
         LOG.debug("getDocumentNumberOfCreditMemoByCriteria() started");
-        ReportQueryByCriteria rqbc = new ReportQueryByCriteria(VendorCreditMemoDocument.class, criteria);
+        ReportQueryByCriteria rqbc = new ReportQueryByCriteria(SpringContext.getBean(DataDictionaryService.class)
+                .getDocumentClassByTypeName(PurapConstants.PurapDocTypeCodes.CREDIT_MEMO_DOCUMENT), criteria);
         rqbc.setAttributes(new String[] { KFSPropertyConstants.DOCUMENT_NUMBER });
         if (orderByAscending) {
             rqbc.addOrderByAscending(KFSPropertyConstants.DOCUMENT_NUMBER);
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/document/service/impl/CreditMemoServiceImpl.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/document/service/impl/CreditMemoServiceImpl.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/module/purap/document/service/impl/CreditMemoServiceImpl.java	(revision 10217)
@@ -89,19 +89,19 @@
 public class CreditMemoServiceImpl implements CreditMemoService {
     private static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(CreditMemoServiceImpl.class);
 
-    private AccountsPayableService accountsPayableService;
-    private CreditMemoDao creditMemoDao;
-    private DataDictionaryService dataDictionaryService;
-    private DocumentService documentService;
-    private KualiConfigurationService kualiConfigurationService;
-    private NoteService noteService;
-    private PaymentRequestService paymentRequestService;
-    private PurapAccountingService purapAccountingService;
-    private PurapGeneralLedgerService purapGeneralLedgerService;
-    private PurapService purapService;
-    private PurchaseOrderService purchaseOrderService;
-    private VendorService vendorService;
-    private WorkflowDocumentService workflowDocumentService;
+    protected AccountsPayableService accountsPayableService;
+    protected CreditMemoDao creditMemoDao;
+    protected DataDictionaryService dataDictionaryService;
+    protected DocumentService documentService;
+    protected KualiConfigurationService kualiConfigurationService;
+    protected NoteService noteService;
+    protected PaymentRequestService paymentRequestService;
+    protected PurapAccountingService purapAccountingService;
+    protected PurapGeneralLedgerService purapGeneralLedgerService;
+    protected PurapService purapService;
+    protected PurchaseOrderService purchaseOrderService;
+    protected VendorService vendorService;
+    protected WorkflowDocumentService workflowDocumentService;
     
 
     public void setAccountsPayableService(AccountsPayableService accountsPayableService) {
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/sys/document/validation/impl/BankCodeValidation.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/sys/document/validation/impl/BankCodeValidation.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/org/kuali/kfs/sys/document/validation/impl/BankCodeValidation.java	(revision 10217)
@@ -15,6 +15,8 @@
  */
 package org.kuali.kfs.sys.document.validation.impl;
 
+import java.util.List;
+
 import org.apache.commons.lang.StringUtils;
 import org.kuali.kfs.sys.KFSKeyConstants;
 import org.kuali.kfs.sys.KFSPropertyConstants;
@@ -25,11 +27,20 @@
 import org.kuali.rice.kns.util.GlobalVariables;
 import org.kuali.rice.kns.util.ObjectUtils;
 
+import edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService;
+
 /**
  * Performs bank code validation.
+ * 
+ * Modified for MOD-PA2000-01 (KITT-592) to add conditional validation based on the payment method code
+ * 
  */
 public class BankCodeValidation {
 
+    protected static final String WARNING_BANK_NOT_REQUIRED = "warning.document.disbursementvoucher.bank.not.required";
+    protected static final String ERROR_BANK_REQUIRED_PER_PAYMENT_METHOD = "error.document.disbursementvoucher.bank.required";
+    private static UaPaymentMethodGeneralLedgerPendingEntryService paymentMethodGeneralLedgerPendingEntryService;
+
     /**
      * Performs required, exists, and active validation of bank code. Also validates bank for deposit or disbursement indicator if
      * requested. .
@@ -41,36 +52,56 @@
      * @return true if bank code passes all validations, false if any fail
      */
     public static boolean validate(String bankCode, String bankCodeProperty, boolean requireDeposit, boolean requireDisbursement) {
-        String bankCodeLabel = SpringContext.getBean(DataDictionaryService.class).getAttributeLabel(Bank.class, KFSPropertyConstants.BANK_CODE);
+        return validate(bankCode, bankCodeProperty, null, requireDeposit, requireDisbursement);
+    }
+    
+    /**
+     * Performs required, exists, and active validation of bank code. Also validates bank for deposit or disbursement indicator if
+     * requested. .
+     * 
+     * @param bankCode value to validate
+     * @param bankCodeProperty property to associate errors with
+     * @param required true if the bank code is required
+     * @param requireDeposit true if the bank code should support deposits
+     * @param requireDisbursement true if the bank code should support disbursements
+     * @return true if bank code passes all validations, false if any fail
+     */
+    public static boolean validate(String bankCode, String bankCodeProperty, String paymentMethodCode, boolean requireDeposit, boolean requireDisbursement) {
 
         // if bank specification is not enabled, no need to validate bank code
         if (!SpringContext.getBean(BankService.class).isBankSpecificationEnabled()) {
             return true;
         }
 
+        Bank bank = SpringContext.getBean(BankService.class).getByPrimaryId(bankCode);
         // required check
-        if (StringUtils.isBlank(bankCode)) {
-            GlobalVariables.getMessageMap().putError(bankCodeProperty, KFSKeyConstants.ERROR_REQUIRED, bankCodeLabel);
-
-            return false;
+        // if the payment method code is blank, then revert to the baseline behavior
+        if ( StringUtils.isBlank(paymentMethodCode) ) {
+            if (StringUtils.isBlank(bankCode)) {
+                String bankCodeLabel = SpringContext.getBean(DataDictionaryService.class).getAttributeLabel(Bank.class, KFSPropertyConstants.BANK_CODE);
+                GlobalVariables.getMessageMap().putError(bankCodeProperty, KFSKeyConstants.ERROR_REQUIRED, bankCodeLabel);    
+                return false;
+            }            
+            if (ObjectUtils.isNull(bank)) {
+                GlobalVariables.getMessageMap().putError(bankCodeProperty, KFSKeyConstants.ERROR_DOCUMENT_BANKACCMAINT_INVALID_BANK);
+                return false;
+            }            
+        } else {
+            if ( !checkBankCodePopulation(bankCode, paymentMethodCode, bankCodeProperty, true) ) {
+                return false;
+            }
         }
 
-        Bank bank = SpringContext.getBean(BankService.class).getByPrimaryId(bankCode);
         
-        if (ObjectUtils.isNull(bank)) {
-            GlobalVariables.getMessageMap().putError(bankCodeProperty, KFSKeyConstants.ERROR_DOCUMENT_BANKACCMAINT_INVALID_BANK);
-            return false;
-        }
-        
         // validate deposit
-        if (requireDeposit && !bank.isBankDepositIndicator()) {
+        if (bank != null && requireDeposit && !bank.isBankDepositIndicator()) {
             GlobalVariables.getMessageMap().putError(bankCodeProperty, KFSKeyConstants.Bank.ERROR_DEPOSIT_NOT_SUPPORTED);
 
             return false;
         }
 
         // validate disbursement
-        if (requireDisbursement && !bank.isBankDisbursementIndicator()) {
+        if (bank != null && requireDisbursement && !bank.isBankDisbursementIndicator()) {
             GlobalVariables.getMessageMap().putError(bankCodeProperty, KFSKeyConstants.Bank.ERROR_DISBURSEMENT_NOT_SUPPORTED);
 
             return false;
@@ -79,4 +110,33 @@
         return true;
     }
 
+    public static boolean doesBankCodeNeedToBePopulated( String paymentMethodCode ) {
+        return getPaymentMethodGeneralLedgerPendingEntryService().getBankForPaymentMethod(paymentMethodCode) != null;
+    }
+    
+    public static boolean checkBankCodePopulation( String bankCode, String paymentMethodCode, String bankCodeProperty, boolean addMessages ) {
+        boolean bankCodeNeedsPopulation = doesBankCodeNeedToBePopulated(paymentMethodCode);
+        // if the payment method uses a bank code and none has been filled in (the user blanked it), throw an error
+        if ( bankCodeNeedsPopulation && StringUtils.isBlank( bankCode ) ) {
+            // error
+            if ( addMessages ) {
+                GlobalVariables.getMessageMap().putError( bankCodeProperty, ERROR_BANK_REQUIRED_PER_PAYMENT_METHOD, paymentMethodCode);
+            }
+            return false;
+        } else if ( !bankCodeNeedsPopulation && StringUtils.isNotBlank( bankCode ) ) {
+            // if the bank code on the document is not blank but no bank code is specified for the payment method, blank and warn the user.
+            if ( addMessages ) {
+                GlobalVariables.getMessageMap().putWarning( bankCodeProperty, WARNING_BANK_NOT_REQUIRED, paymentMethodCode);
+            }
+        }
+        return true;
+    }
+
+    protected static UaPaymentMethodGeneralLedgerPendingEntryService getPaymentMethodGeneralLedgerPendingEntryService() {
+        if ( paymentMethodGeneralLedgerPendingEntryService == null ) {
+            paymentMethodGeneralLedgerPendingEntryService = SpringContext.getBean(UaPaymentMethodGeneralLedgerPendingEntryService.class);
+        }
+        return paymentMethodGeneralLedgerPendingEntryService;
+    }
+    
 }
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/arizona-ApplicationResources.properties
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/arizona-ApplicationResources.properties	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/arizona-ApplicationResources.properties	(revision 10217)
@@ -27,6 +27,37 @@
 message.return.noteTextIntro=Return To Reconciler reason -
 error.document.return.reasonRequired=A reason is required in order to return the pCard back to Reconciler.  Click the no button to CANCEL the return to Reconciler action.
 
+# Payment Method Document - KITT-592
+error.document.paymentmethod.effectivedate.inpast=The dates for new charts must be today or later.
+error.document.paymentmethod.fee.chart.required=When the fee indicator is set, the fee income chart is required.
+error.document.paymentmethod.fee.account.required=When the fee indicator is set, the fee income account is required.
+error.document.paymentmethod.fee.incobj.required=When the fee indicator is set, the fee income object is required.
+error.document.paymentmethod.fee.expobj.required=When the fee indicator is set, the fee expense object is required.
+error.document.paymentmethod.fee.amount.required=When the fee indicator is set, the fee amount is required.
+error.document.paymentmethod.clearing.chart.required=When the clearing account indicator is set, the clearing account chart is required.
+error.document.paymentmethod.clearing.account.required=When the clearing account indicator is set, the clearing account is required.
+error.document.paymentmethod.clearing.object.required=When the clearing account indicator is set, the clearing object code is required.
+
+warning.document.paymentmethod.fee.chart.notrequired=When the fee indicator is not set, there is no need to fill in the fee income chart.
+warning.document.paymentmethod.fee.account.notrequired=When the fee indicator is not set, there is no need to fill in the fee income account.
+warning.document.paymentmethod.fee.incobj.notrequired=When the fee indicator is not set, there is no need to fill in the fee income object.
+warning.document.paymentmethod.fee.expobj.notrequired=When the fee indicator is not set, there is no need to fill in the fee expense object.
+warning.document.paymentmethod.fee.amount.notrequired=When the fee indicator is not set, there is no need to fill in the fee amount.
+
+warning.document.paymentmethod.clearing.chart.notrequired=When the clearing indicator is not set, there is no need to fill in the clearing account chart.
+warning.document.paymentmethod.clearing.account.notrequired=When the clearing indicator is not set, there is no need to fill in the clearing account.
+warning.document.paymentmethod.clearing.object.notrequired=When the clearing indicator is not set, there is no need to fill in the clearing object code.
+
+error.document.paymentmethod.flagrequired=At least one of the {0}, {1}, and {2} flags must be checked on a payment method.
+error.document.paymentmethod.not.pdp.and.interdept=A payment method may not be both interdepartmental and processed by PDP.
+error.document.paymentmethod.no.bank.when.interdept=A bank code may not be entered when the payment method is an interdepartmental charge.
+
+# Additional DV document messages - KITT-592
+error.document.disbursementvoucher.bank.required=A bank code is required for payment method {0}.
+warning.document.disbursementvoucher.bank.not.required=Bank codes are not required on payment method {0}, the entered value has been removed.
+
+error.document.creditmemo.paymentmethodcode.mustmatchpreq=When creating a credit memo from a payment request, the payment method codes must match. ({0})
+
 # Prevent Cardholder Self Reconciliation - KITT-909
 warning.document.procurementcardholderdetail.cardholder.last.active=Cardholder is the only active member of the selected PCard Reconciler workgroup.
 
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/service/impl/UaPaymentMethodGeneralLedgerPendingEntryServiceImpl.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/service/impl/UaPaymentMethodGeneralLedgerPendingEntryServiceImpl.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/service/impl/UaPaymentMethodGeneralLedgerPendingEntryServiceImpl.java	(revision 10217)
@@ -0,0 +1,395 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.fp.service.impl;
+
+import static org.kuali.kfs.sys.KFSConstants.GL_CREDIT_CODE;
+import static org.kuali.kfs.sys.KFSConstants.GL_DEBIT_CODE;
+
+import java.util.HashMap;
+import java.util.Map;
+
+import org.apache.commons.lang.StringUtils;
+import org.apache.log4j.Logger;
+import org.kuali.kfs.coa.businessobject.ObjectCode;
+import org.kuali.kfs.coa.service.ObjectCodeService;
+import org.kuali.kfs.fp.businessobject.WireCharge;
+import org.kuali.kfs.sys.KFSConstants;
+import org.kuali.kfs.sys.KFSKeyConstants;
+import org.kuali.kfs.sys.businessobject.Bank;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntry;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntrySequenceHelper;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.kfs.sys.document.AccountingDocument;
+import org.kuali.kfs.sys.document.GeneralLedgerPostingDocument;
+import org.kuali.kfs.sys.document.service.AccountingDocumentRuleHelperService;
+import org.kuali.kfs.sys.document.validation.impl.AccountingDocumentRuleBaseConstants.GENERAL_LEDGER_PENDING_ENTRY_CODE;
+import org.kuali.kfs.sys.service.BankService;
+import org.kuali.kfs.sys.service.GeneralLedgerPendingEntryService;
+import org.kuali.kfs.sys.service.HomeOriginationService;
+import org.kuali.kfs.sys.service.NonTransactional;
+import org.kuali.kfs.sys.service.OptionsService;
+import org.kuali.kfs.sys.service.UniversityDateService;
+import org.kuali.kfs.sys.service.impl.KfsParameterConstants;
+import org.kuali.rice.kns.service.BusinessObjectService;
+import org.kuali.rice.kns.service.ParameterService;
+import org.kuali.rice.kns.util.KualiDecimal;
+import org.kuali.rice.kns.util.spring.CacheNoCopy;
+
+import edu.arizona.kfs.fp.businessobject.PaymentMethod;
+import edu.arizona.kfs.fp.businessobject.PaymentMethodChart;
+import edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService;
+
+/**
+ * 
+ * @author jonathan
+ * @see UaPaymentMethodGeneralLedgerPendingEntryService
+ */
+@NonTransactional
+public class UaPaymentMethodGeneralLedgerPendingEntryServiceImpl implements UaPaymentMethodGeneralLedgerPendingEntryService {
+    private static Logger LOG = Logger.getLogger(UaPaymentMethodGeneralLedgerPendingEntryServiceImpl.class);
+
+    private GeneralLedgerPendingEntryService generalLedgerPendingEntryService;
+    private ObjectCodeService objectCodeService;
+    private ParameterService parameterService;
+    private BusinessObjectService businessObjectService;
+    private BankService bankService;
+    
+
+    /**
+     * @see edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService#isPaymentMethodProcessedUsingPdp(java.lang.String)
+     */
+    @CacheNoCopy
+    public boolean isPaymentMethodProcessedUsingPdp(String paymentMethodCode) {
+        if ( StringUtils.isNotBlank( paymentMethodCode ) ) {
+            PaymentMethod pm = getBusinessObjectService().findBySinglePrimaryKey(PaymentMethod.class, paymentMethodCode);
+            if ( pm != null ) {
+                return pm.isProcessedUsingPdp();
+            }
+        } else {
+            LOG.warn("blank/null payment method code passed into isPaymentMethodProcessedUsingPdp");
+        }
+        return false;
+    }
+    
+    /**
+     * This implementation will also return null if the bank code on the payment method record does not exist in the bank table.
+     * 
+     * @see edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService#getBankForPaymentMethod(java.lang.String)
+     */
+    public Bank getBankForPaymentMethod(String paymentMethodCode) {
+        if ( StringUtils.isNotBlank( paymentMethodCode ) ) {
+            PaymentMethod pm = getBusinessObjectService().findBySinglePrimaryKey(PaymentMethod.class, paymentMethodCode);
+            if ( pm != null ) {
+                // if no bank code, short circuit and return null
+                if ( pm.getBankCode() != null ) {
+                    return pm.getBank();
+                }
+            }
+        } else {
+            LOG.warn("null payment method code passed into getBankForPaymentMethod");
+        }
+        return null;
+    }
+    
+    /**
+     * Generates additional document-level GL entries for the DV, depending on the payment method code. 
+     * 
+     * Return true if GLPE's are generated successfully (i.e. there are either 0 GLPE's or 1 GLPE in disbursement voucher document)
+     * 
+     * @param financialDocument submitted financial document
+     * @param sequenceHelper helper class to keep track of GLPE sequence
+     * @return true if GLPE's are generated successfully
+     */
+    public boolean generatePaymentMethodSpecificDocumentGeneralLedgerPendingEntries(
+            AccountingDocument document, String paymentMethodCode, String bankCode, String bankCodePropertyName, 
+            GeneralLedgerPendingEntry templatePendingEntry, 
+            boolean feesWaived, boolean reverseCharge, GeneralLedgerPendingEntrySequenceHelper sequenceHelper) {
+                 
+        PaymentMethod pm = getBusinessObjectService().findBySinglePrimaryKey(PaymentMethod.class, paymentMethodCode);
+        // no payment method? abort.
+        if ( pm == null ) {
+            return false;
+        }
+        
+        if ( pm.isAssessedFees() ) {
+            if ( !feesWaived ) {
+                generateFeeAssessmentEntries(pm, document, templatePendingEntry, sequenceHelper, reverseCharge);
+            }                        
+        }
+        
+        if ( pm.isOffsetUsingClearingAccount() ) {
+            generateClearingAccountOffsetEntries(pm, document, sequenceHelper);
+        }
+        
+        if ( !pm.isProcessedUsingPdp() && StringUtils.isNotBlank( bankCode ) ) {
+            generateDocumentBankOffsetEntries(document,bankCode,bankCodePropertyName,templatePendingEntry.getFinancialDocumentTypeCode(), sequenceHelper);
+        }
+        
+        return true;
+    }
+    
+    /**
+     * Generates the GL entries to charge the department for the foreign draft and credit the Wire Charge
+     * Fee Account as specified by system parameters.
+     * 
+     * @param document Document into which to add the generated GL Entries.
+     * 
+     * @see edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService#generateForeignDraftChargeEntries(org.kuali.kfs.sys.document.AccountingDocument, org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntrySequenceHelper)
+     */
+    protected boolean generateFeeAssessmentEntries(PaymentMethod pm, AccountingDocument document, GeneralLedgerPendingEntry templatePendingEntry, GeneralLedgerPendingEntrySequenceHelper sequenceHelper, boolean reverseEntries) {
+        LOG.debug("generateForeignDraftChargeEntries started");
+        
+        PaymentMethodChart pmc = pm.getPaymentMethodChartInfo(templatePendingEntry.getChartOfAccountsCode(), new java.sql.Date( document.getDocumentHeader().getWorkflowDocument().getCreateDate().getTime() ) );
+        if ( pmc == null ) {
+            LOG.warn( "No Applicable PaymentMethodChart found for chart: " + templatePendingEntry.getChartOfAccountsCode() + " and date: " + document.getDocumentHeader().getWorkflowDocument().getCreateDate() );
+            return false;
+        }
+        // Get all the parameters which control these entries
+        String feeIncomeChartCode = pmc.getFeeIncomeChartOfAccountsCode();
+        String feeIncomeAccountNumber = pmc.getFeeIncomeAccountNumber();
+        String feeExpenseObjectCode = pmc.getFeeExpenseFinancialObjectCode();
+        String feeIncomeObjectCode = pmc.getFeeIncomeFinancialObjectCode();
+        KualiDecimal feeAmount = pmc.getFeeAmount();
+        
+        // grab the explicit entry for the first accounting line and adjust for the foreign draft fee
+        GeneralLedgerPendingEntry chargeEntry = new GeneralLedgerPendingEntry(document.getGeneralLedgerPendingEntry(0));        
+        chargeEntry.setTransactionLedgerEntrySequenceNumber(sequenceHelper.getSequenceCounter());
+        
+        // change the object code (expense to the department)
+        chargeEntry.setFinancialObjectCode(feeExpenseObjectCode);
+        chargeEntry.setFinancialSubObjectCode(GENERAL_LEDGER_PENDING_ENTRY_CODE.getBlankFinancialSubObjectCode());
+        chargeEntry.setTransactionLedgerEntryDescription( StringUtils.left( "Automatic debit for " + pm.getPaymentMethodName() + " fee", 40 ));
+        chargeEntry.setFinancialBalanceTypeCode(KFSConstants.BALANCE_TYPE_ACTUAL);
+
+        // retrieve object type
+        ObjectCode objectCode = getObjectCodeService().getByPrimaryIdForCurrentYear(chargeEntry.getChartOfAccountsCode(), chargeEntry.getFinancialObjectCode());
+        if ( objectCode == null ) {
+            LOG.fatal("Specified offset object code: " + chargeEntry.getChartOfAccountsCode() + "-" + chargeEntry.getFinancialObjectCode() + " does not exist - failed to generate foreign draft fee entries", new RuntimeException() );
+            return false;
+        }       
+        chargeEntry.setFinancialObjectTypeCode(objectCode.getFinancialObjectTypeCode());
+        
+        // Set the amount from the parameter
+        chargeEntry.setTransactionLedgerEntryAmount(feeAmount);
+        chargeEntry.setTransactionDebitCreditCode(reverseEntries?GL_CREDIT_CODE:GL_DEBIT_CODE);
+
+        document.addPendingEntry(chargeEntry);
+        sequenceHelper.increment();
+
+        // handle the offset entry
+        GeneralLedgerPendingEntry offsetEntry = new GeneralLedgerPendingEntry(chargeEntry);
+        getGeneralLedgerPendingEntryService().populateOffsetGeneralLedgerPendingEntry(document.getPostingYear(), chargeEntry, sequenceHelper, offsetEntry);
+
+        document.addPendingEntry(offsetEntry);
+        sequenceHelper.increment();
+        
+        // Now, create the income entry in the AP Foreign draft fee account
+        
+        GeneralLedgerPendingEntry feeIncomeEntry = new GeneralLedgerPendingEntry(document.getGeneralLedgerPendingEntry(0));
+        feeIncomeEntry.setTransactionLedgerEntrySequenceNumber(sequenceHelper.getSequenceCounter());
+
+        feeIncomeEntry.setChartOfAccountsCode(feeIncomeChartCode);
+        feeIncomeEntry.setAccountNumber(feeIncomeAccountNumber);
+        feeIncomeEntry.setFinancialObjectCode(feeIncomeObjectCode);
+        feeIncomeEntry.setFinancialSubObjectCode(GENERAL_LEDGER_PENDING_ENTRY_CODE.getBlankFinancialSubObjectCode());
+        feeIncomeEntry.setSubAccountNumber(GENERAL_LEDGER_PENDING_ENTRY_CODE.getBlankSubAccountNumber());
+        feeIncomeEntry.setProjectCode(GENERAL_LEDGER_PENDING_ENTRY_CODE.getBlankProjectCode());
+
+        // retrieve object type
+        objectCode = getObjectCodeService().getByPrimaryIdForCurrentYear(feeIncomeChartCode, feeIncomeObjectCode);
+        if ( objectCode == null ) {
+            LOG.fatal("Specified income object code: " + feeIncomeChartCode + "-" + feeIncomeObjectCode + " does not exist - failed to generate foreign draft income entries", new RuntimeException() );
+            return false;
+        }
+        feeIncomeEntry.setFinancialObjectTypeCode(objectCode.getFinancialObjectTypeCode());       
+        feeIncomeEntry.setTransactionLedgerEntryAmount(feeAmount);
+        feeIncomeEntry.setTransactionDebitCreditCode(KFSConstants.GL_CREDIT_CODE);
+        feeIncomeEntry.setFinancialBalanceTypeCode(KFSConstants.BALANCE_TYPE_ACTUAL);
+
+        document.addPendingEntry(feeIncomeEntry);
+        sequenceHelper.increment();
+        
+        // create the offset entry
+        offsetEntry = new GeneralLedgerPendingEntry(feeIncomeEntry);
+        getGeneralLedgerPendingEntryService().populateOffsetGeneralLedgerPendingEntry(document.getPostingYear(), feeIncomeEntry, sequenceHelper, offsetEntry);
+
+        document.addPendingEntry(offsetEntry);
+        sequenceHelper.increment();
+        
+        return true;
+    }
+    
+    /**
+     * Adds up the amounts of all cash to offset GeneralLedgerPendingEntry records on the given AccountingDocument
+     * 
+     * MOD-PA2000-01 : Copied from the GL Pending entry service since that one does not make any distinction between
+     * expense and encumbrance balance types
+     * 
+     * @author jonathan
+     * 
+     * @param glPostingDocument the accounting document total the offset to cash amount for
+     * @return the offset to cash amount, where debited values have been subtracted and credited values have been added
+     */
+    protected Map<String,KualiDecimal> getNonOffsetActualTotalsByChart(GeneralLedgerPostingDocument glPostingDocument) {
+        Map<String,KualiDecimal> totals = new HashMap<String, KualiDecimal>();
+        for (GeneralLedgerPendingEntry glpe : glPostingDocument.getGeneralLedgerPendingEntries()) {
+            if ( KFSConstants.BALANCE_TYPE_ACTUAL.equals(glpe.getFinancialBalanceTypeCode()) ) {
+                if ( !glpe.isTransactionEntryOffsetIndicator() ) {
+                    if ( !totals.containsKey(glpe.getChartOfAccountsCode() ) ) {
+                        totals.put(glpe.getChartOfAccountsCode(), KualiDecimal.ZERO);
+                    }
+                    if (glpe.getTransactionDebitCreditCode().equals(KFSConstants.GL_DEBIT_CODE)) {
+                        totals.put(glpe.getChartOfAccountsCode(),totals.get(glpe.getChartOfAccountsCode()).add(glpe.getTransactionLedgerEntryAmount()));
+                    } else if (glpe.getTransactionDebitCreditCode().equals(KFSConstants.GL_CREDIT_CODE)) {
+                        totals.put(glpe.getChartOfAccountsCode(),totals.get(glpe.getChartOfAccountsCode()).subtract(glpe.getTransactionLedgerEntryAmount()));
+                    }
+                }
+            }
+        }
+        return totals;
+    }    
+
+    /**
+     * When the "A" payment method is used for AP Credit Cards - generate the needed entries in the clearing account.
+     * 
+     * @param document Document into which to add the generated GL Entries.
+     * @param sequenceHelper helper class to keep track of GLPE sequence
+     * 
+     * @see UaPaymentMethodGeneralLedgerPendingEntryService#generateAccountsPayableCreditCardOffsetEntries(AccountingDocument, GeneralLedgerPendingEntrySequenceHelper)
+     */
+    public boolean generateClearingAccountOffsetEntries(PaymentMethod pm, AccountingDocument document, GeneralLedgerPendingEntrySequenceHelper sequenceHelper) {
+        Map<String,KualiDecimal> actualTotalsByChart = getNonOffsetActualTotalsByChart(document);
+
+        for ( String chart : actualTotalsByChart.keySet() ) {
+            KualiDecimal offsetAmount = actualTotalsByChart.get(chart);
+            PaymentMethodChart pmc = pm.getPaymentMethodChartInfo(chart, new java.sql.Date( document.getDocumentHeader().getWorkflowDocument().getCreateDate().getTime() ) );
+            if ( pmc == null ) {
+                LOG.warn( "No Applicable PaymentMethodChart found for chart: " + chart + " and date: " + document.getDocumentHeader().getWorkflowDocument().getCreateDate() );
+                // skip this line - still attempt for other charts
+                continue;
+            }
+            String clearingChartCode = pmc.getClearingChartOfAccountsCode();
+            String clearingAccountNumber = pmc.getClearingAccountNumber();
+            String clearingObjectCode = pmc.getClearingFinancialObjectCode(); // liability object code
+            
+            GeneralLedgerPendingEntry apOffsetEntry = new GeneralLedgerPendingEntry(document.getGeneralLedgerPendingEntry(0));
+            apOffsetEntry.setTransactionLedgerEntrySequenceNumber(new Integer(sequenceHelper.getSequenceCounter()));
+
+            apOffsetEntry.setChartOfAccountsCode(clearingChartCode);
+            apOffsetEntry.setAccountNumber(clearingAccountNumber);
+            apOffsetEntry.setFinancialObjectCode(clearingObjectCode);
+            apOffsetEntry.setFinancialSubObjectCode(GENERAL_LEDGER_PENDING_ENTRY_CODE.getBlankFinancialSubObjectCode());
+            apOffsetEntry.setSubAccountNumber(GENERAL_LEDGER_PENDING_ENTRY_CODE.getBlankSubAccountNumber());
+            apOffsetEntry.setProjectCode(GENERAL_LEDGER_PENDING_ENTRY_CODE.getBlankProjectCode());
+
+            // retrieve object type
+            ObjectCode objectCode = getObjectCodeService().getByPrimaryIdForCurrentYear(clearingChartCode, clearingObjectCode);
+            if ( objectCode == null ) {
+                LOG.fatal("Specified offset object code: " + clearingChartCode + "-" + clearingObjectCode + " does not exist - failed to generate CC offset entries", new RuntimeException() );
+                return false;
+            }
+            apOffsetEntry.setFinancialObjectTypeCode(objectCode.getFinancialObjectTypeCode());       
+            apOffsetEntry.setTransactionLedgerEntryAmount(offsetAmount.abs());
+            apOffsetEntry.setTransactionDebitCreditCode(offsetAmount.isNegative()?KFSConstants.GL_DEBIT_CODE:KFSConstants.GL_CREDIT_CODE);
+            apOffsetEntry.setFinancialBalanceTypeCode(KFSConstants.BALANCE_TYPE_ACTUAL);
+
+            document.addPendingEntry(apOffsetEntry);
+            sequenceHelper.increment();
+            
+            // handle the offset entry
+            GeneralLedgerPendingEntry offsetEntry = new GeneralLedgerPendingEntry(apOffsetEntry);
+            getGeneralLedgerPendingEntryService().populateOffsetGeneralLedgerPendingEntry(document.getPostingYear(), apOffsetEntry, sequenceHelper, offsetEntry);
+
+            document.addPendingEntry(offsetEntry);
+            sequenceHelper.increment();
+        }
+        
+
+        
+
+        return true;
+    }
+
+    /**
+     * If bank specification is enabled generates bank offsetting entries for the document amount
+     * 
+     */
+    public boolean generateDocumentBankOffsetEntries(AccountingDocument document, String bankCode, String bankCodePropertyName, String documentTypeCode, GeneralLedgerPendingEntrySequenceHelper sequenceHelper) {
+        boolean success = true;
+
+        if (!SpringContext.getBean(BankService.class).isBankSpecificationEnabled()) {
+            return success;
+        }
+        Bank bank = getBankService().getByPrimaryId(bankCode);
+        
+        final KualiDecimal bankOffsetAmount = getGeneralLedgerPendingEntryService().getOffsetToCashAmount(document).negated();
+        GeneralLedgerPendingEntry bankOffsetEntry = new GeneralLedgerPendingEntry();
+        success &= getGeneralLedgerPendingEntryService()
+                .populateBankOffsetGeneralLedgerPendingEntry(bank, bankOffsetAmount, document, 
+                        document.getPostingYear(), sequenceHelper, bankOffsetEntry, bankCodePropertyName);
+
+        if (success) {
+            AccountingDocumentRuleHelperService accountingDocumentRuleUtil = SpringContext.getBean(AccountingDocumentRuleHelperService.class);
+            bankOffsetEntry.setTransactionLedgerEntryDescription(accountingDocumentRuleUtil.formatProperty(KFSKeyConstants.Bank.DESCRIPTION_GLPE_BANK_OFFSET));
+            bankOffsetEntry.setFinancialDocumentTypeCode(documentTypeCode);
+            document.addPendingEntry(bankOffsetEntry);
+            sequenceHelper.increment();
+
+            GeneralLedgerPendingEntry offsetEntry = new GeneralLedgerPendingEntry(bankOffsetEntry);
+            success &= getGeneralLedgerPendingEntryService().populateOffsetGeneralLedgerPendingEntry(document.getPostingYear(), bankOffsetEntry, sequenceHelper, offsetEntry);
+            bankOffsetEntry.setFinancialDocumentTypeCode(documentTypeCode);
+            document.addPendingEntry(offsetEntry);
+            sequenceHelper.increment();
+        }
+
+        return success;
+    }
+    
+    protected GeneralLedgerPendingEntryService getGeneralLedgerPendingEntryService() {
+        if ( generalLedgerPendingEntryService == null ) {
+            generalLedgerPendingEntryService = SpringContext.getBean(GeneralLedgerPendingEntryService.class);
+        }
+        return generalLedgerPendingEntryService;
+    }
+    
+    protected ObjectCodeService getObjectCodeService() {
+        if ( objectCodeService == null ) {
+            objectCodeService = SpringContext.getBean(ObjectCodeService.class);
+        }
+        return objectCodeService;
+    }
+    
+    protected ParameterService getParameterService() {
+        if ( parameterService == null ) {
+            parameterService = SpringContext.getBean(ParameterService.class);
+        }
+        return parameterService;
+    }
+
+    protected BusinessObjectService getBusinessObjectService() {
+        if ( businessObjectService == null ) {
+            businessObjectService = SpringContext.getBean(BusinessObjectService.class);
+        }
+        return businessObjectService;
+    }
+    
+    protected BankService getBankService() {
+        if ( bankService == null ) {
+            bankService = SpringContext.getBean(BankService.class);
+        }
+        return bankService;
+    }
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/service/UaPaymentMethodGeneralLedgerPendingEntryService.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/service/UaPaymentMethodGeneralLedgerPendingEntryService.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/service/UaPaymentMethodGeneralLedgerPendingEntryService.java	(revision 10217)
@@ -0,0 +1,72 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.fp.service;
+
+import org.kuali.kfs.sys.businessobject.Bank;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntry;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntrySequenceHelper;
+import org.kuali.kfs.sys.document.AccountingDocument;
+
+/**
+ * Helper service to generate GL entries for FP and PURAP documents which are specific
+ * to certain payment method codes.
+ * 
+ * @author jonathan
+ */
+public interface UaPaymentMethodGeneralLedgerPendingEntryService {
+
+    /**
+     * Get the default bank for the payment method.  Returns null if the payment method code does not use a bank.
+     * 
+     * @param paymentMethodCode
+     * @return Bank from PaymentMethod record. null if paymentMethodCode is null, bankCode is null, or the bank does not exist. 
+     */
+    Bank getBankForPaymentMethod( String paymentMethodCode );
+
+    /**
+     * Generates the appropriate GL pending entries for the given payment method based on the payment method code.
+     * 
+     * @param document
+     * @param paymentMethodCode
+     * @param bankCode
+     * @param bankCodePropertyName
+     * @param documentTypeCode Document type code to use on the GL pending entries.
+     * @param templatePendingEntry
+     * @param feesWaived
+     * @param reverseCharge
+     * @param sequenceHelper
+     * @return
+     */
+    boolean generatePaymentMethodSpecificDocumentGeneralLedgerPendingEntries(
+            AccountingDocument document,
+            String paymentMethodCode,
+            String bankCode, 
+            String bankCodePropertyName, // for error messages
+            GeneralLedgerPendingEntry templatePendingEntry,
+            boolean feesWaived,
+            boolean reverseCharge,
+            GeneralLedgerPendingEntrySequenceHelper sequenceHelper);
+    
+    
+    /**
+     * Returns whether the given payment method should be processed using the PDP component. 
+     * 
+     * @param paymentMethodCode
+     * @return
+     */
+    boolean isPaymentMethodProcessedUsingPdp( String paymentMethodCode );
+    
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/batch/service/impl/UaDisbursementVoucherExtractServiceImpl.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/batch/service/impl/UaDisbursementVoucherExtractServiceImpl.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/batch/service/impl/UaDisbursementVoucherExtractServiceImpl.java	(revision 10217)
@@ -0,0 +1,80 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.fp.batch.service.impl;
+
+import java.util.ArrayList;
+import java.util.Collection;
+
+import org.kuali.kfs.fp.batch.service.impl.DisbursementVoucherExtractServiceImpl;
+import org.kuali.kfs.fp.document.DisbursementVoucherConstants;
+import org.kuali.kfs.fp.document.DisbursementVoucherDocument;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.kfs.sys.document.service.FinancialSystemDocumentService;
+import org.kuali.rice.kew.exception.WorkflowException;
+import org.kuali.rice.kns.service.DataDictionaryService;
+
+import edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService;
+
+/**
+ * Override the extract payments method to use the new payment method table information.
+ * 
+ */
+public class UaDisbursementVoucherExtractServiceImpl extends DisbursementVoucherExtractServiceImpl {
+    private static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(UaDisbursementVoucherExtractServiceImpl.class);
+
+    private UaPaymentMethodGeneralLedgerPendingEntryService paymentMethodGeneralLedgerPendingEntryService;
+    
+    
+    /**
+     * 
+     * @see org.kuali.kfs.fp.batch.service.impl.DisbursementVoucherExtractServiceImpl#getListByDocumentStatusCodeCampus(java.lang.String, java.lang.String)
+     */
+    @Override
+    protected Collection<DisbursementVoucherDocument> getListByDocumentStatusCodeCampus(String statusCode, String campusCode) {        
+        LOG.debug("getListByDocumentStatusCodeCampus() started");
+
+        Collection<DisbursementVoucherDocument> list = new ArrayList<DisbursementVoucherDocument>();
+
+        try {
+            Collection<DisbursementVoucherDocument> docs = SpringContext.getBean(FinancialSystemDocumentService.class).findByDocumentHeaderStatusCode(SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName("DV"), statusCode);
+            for (DisbursementVoucherDocument doc : docs) {
+                String docCampusCode = doc.getCampusCode();
+
+                if (docCampusCode.equals(campusCode) 
+                        && getPaymentMethodGeneralLedgerPendingEntryService().isPaymentMethodProcessedUsingPdp(doc.getDisbVchrPaymentMethodCode())) {
+                    list.add(doc);
+                }
+            }
+        } catch (WorkflowException we) {
+            LOG.error("Could not load Disbursement Voucher Documents with status code = " + statusCode + ": " + we);
+            throw new RuntimeException("Could not load Disbursement Voucher Documents with status code = " + statusCode, we);
+        }
+
+        return list;
+    }
+
+
+    protected UaPaymentMethodGeneralLedgerPendingEntryService getPaymentMethodGeneralLedgerPendingEntryService() {
+        if ( paymentMethodGeneralLedgerPendingEntryService == null ) {
+            paymentMethodGeneralLedgerPendingEntryService = SpringContext.getBean(UaPaymentMethodGeneralLedgerPendingEntryService.class);
+        }
+        return paymentMethodGeneralLedgerPendingEntryService;
+    }
+
+    public void setPaymentMethodGeneralLedgerPendingEntryService(UaPaymentMethodGeneralLedgerPendingEntryService paymentMethodGeneralLedgerPendingEntryService) {
+        this.paymentMethodGeneralLedgerPendingEntryService = paymentMethodGeneralLedgerPendingEntryService;
+    }
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/PaymentMethodChart.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/PaymentMethodChart.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/PaymentMethodChart.java	(revision 10217)
@@ -0,0 +1,265 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.fp.businessobject;
+
+import java.util.LinkedHashMap;
+
+import org.kuali.kfs.coa.businessobject.Account;
+import org.kuali.kfs.coa.businessobject.Chart;
+import org.kuali.kfs.coa.businessobject.ObjectCodeCurrent;
+import org.kuali.rice.kns.bo.Inactivateable;
+import org.kuali.rice.kns.bo.PersistableBusinessObjectBase;
+import org.kuali.rice.kns.util.KualiDecimal;
+
+public class PaymentMethodChart extends PersistableBusinessObjectBase implements Inactivateable {
+
+    protected String paymentMethodCode;
+    protected String chartOfAccountsCode;
+    protected java.sql.Date effectiveDate;
+
+    protected String feeIncomeChartOfAccountsCode;
+    protected String feeIncomeAccountNumber;
+    protected String feeIncomeFinancialObjectCode;
+    protected String feeExpenseFinancialObjectCode;
+    protected KualiDecimal feeAmount;
+
+    protected String clearingChartOfAccountsCode;
+    protected String clearingAccountNumber;
+    protected String clearingFinancialObjectCode;
+
+    protected boolean active = true;    
+
+    protected Chart chartOfAccounts;
+    
+    protected Chart feeIncomeChartOfAccounts;
+    protected Account feeIncomeAccount;
+    protected ObjectCodeCurrent feeIncomeFinancialObject;
+    protected ObjectCodeCurrent feeExpenseFinancialObject;
+    
+    protected Chart clearingChartOfAccounts;
+    protected Account clearingAccount;
+    protected ObjectCodeCurrent clearingFinancialObject;
+    
+    @SuppressWarnings("unchecked")
+    @Override
+    protected LinkedHashMap toStringMapper() {
+        LinkedHashMap<String, Object> lhm = new LinkedHashMap<String, Object>();
+        lhm.put("paymentMethodCode", paymentMethodCode);
+        lhm.put("chartOfAccountsCode", chartOfAccountsCode);
+        lhm.put("effectiveDate", effectiveDate);
+        return lhm;
+    }
+
+
+    public String getPaymentMethodCode() {
+        return paymentMethodCode;
+    }
+
+
+    public void setPaymentMethodCode(String paymentMethodCode) {
+        this.paymentMethodCode = paymentMethodCode;
+    }
+
+
+    public String getChartOfAccountsCode() {
+        return chartOfAccountsCode;
+    }
+
+
+    public void setChartOfAccountsCode(String chartOfAccountsCode) {
+        this.chartOfAccountsCode = chartOfAccountsCode;
+    }
+
+
+    public java.sql.Date getEffectiveDate() {
+        return effectiveDate;
+    }
+
+
+    public void setEffectiveDate(java.sql.Date effectiveDate) {
+        this.effectiveDate = effectiveDate;
+    }
+
+
+    public String getFeeIncomeChartOfAccountsCode() {
+        return feeIncomeChartOfAccountsCode;
+    }
+
+
+    public void setFeeIncomeChartOfAccountsCode(String feeIncomeChartOfAccountsCode) {
+        this.feeIncomeChartOfAccountsCode = feeIncomeChartOfAccountsCode;
+    }
+
+
+    public String getFeeIncomeAccountNumber() {
+        return feeIncomeAccountNumber;
+    }
+
+
+    public void setFeeIncomeAccountNumber(String feeIncomeAccountNumber) {
+        this.feeIncomeAccountNumber = feeIncomeAccountNumber;
+    }
+
+
+    public String getFeeIncomeFinancialObjectCode() {
+        return feeIncomeFinancialObjectCode;
+    }
+
+
+    public void setFeeIncomeFinancialObjectCode(String feeIncomeFinancialObjectCode) {
+        this.feeIncomeFinancialObjectCode = feeIncomeFinancialObjectCode;
+    }
+
+
+    public String getFeeExpenseFinancialObjectCode() {
+        return feeExpenseFinancialObjectCode;
+    }
+
+
+    public void setFeeExpenseFinancialObjectCode(String feeExpenseFinancialObjectCode) {
+        this.feeExpenseFinancialObjectCode = feeExpenseFinancialObjectCode;
+    }
+
+
+    public KualiDecimal getFeeAmount() {
+        return feeAmount;
+    }
+
+
+    public void setFeeAmount(KualiDecimal feeAmount) {
+        this.feeAmount = feeAmount;
+    }
+
+
+    public String getClearingChartOfAccountsCode() {
+        return clearingChartOfAccountsCode;
+    }
+
+
+    public void setClearingChartOfAccountsCode(String clearingChartOfAccountsCode) {
+        this.clearingChartOfAccountsCode = clearingChartOfAccountsCode;
+    }
+
+
+    public String getClearingAccountNumber() {
+        return clearingAccountNumber;
+    }
+
+
+    public void setClearingAccountNumber(String clearingAccountNumber) {
+        this.clearingAccountNumber = clearingAccountNumber;
+    }
+
+
+    public String getClearingFinancialObjectCode() {
+        return clearingFinancialObjectCode;
+    }
+
+
+    public void setClearingFinancialObjectCode(String clearingFinancialObjectCode) {
+        this.clearingFinancialObjectCode = clearingFinancialObjectCode;
+    }
+
+
+    public boolean isActive() {
+        return active;
+    }
+
+
+    public void setActive(boolean active) {
+        this.active = active;
+    }
+
+
+    public Chart getChartOfAccounts() {
+        return chartOfAccounts;
+    }
+
+
+    public void setChartOfAccounts(Chart chartOfAccounts) {
+        this.chartOfAccounts = chartOfAccounts;
+    }
+
+
+    public Chart getFeeIncomeChartOfAccounts() {
+        return feeIncomeChartOfAccounts;
+    }
+
+
+    public void setFeeIncomeChartOfAccounts(Chart feeIncomeChartOfAccounts) {
+        this.feeIncomeChartOfAccounts = feeIncomeChartOfAccounts;
+    }
+
+
+    public Account getFeeIncomeAccount() {
+        return feeIncomeAccount;
+    }
+
+
+    public void setFeeIncomeAccount(Account feeIncomeAccount) {
+        this.feeIncomeAccount = feeIncomeAccount;
+    }
+
+
+    public ObjectCodeCurrent getFeeIncomeFinancialObject() {
+        return feeIncomeFinancialObject;
+    }
+
+
+    public void setFeeIncomeFinancialObject(ObjectCodeCurrent feeIncomeFinancialObject) {
+        this.feeIncomeFinancialObject = feeIncomeFinancialObject;
+    }
+
+
+    public ObjectCodeCurrent getFeeExpenseFinancialObject() {
+        return feeExpenseFinancialObject;
+    }
+
+
+    public void setFeeExpenseFinancialObject(ObjectCodeCurrent feeExpenseFinancialObject) {
+        this.feeExpenseFinancialObject = feeExpenseFinancialObject;
+    }
+
+
+    public Chart getClearingChartOfAccounts() {
+        return clearingChartOfAccounts;
+    }
+
+
+    public void setClearingChartOfAccounts(Chart clearingChartOfAccounts) {
+        this.clearingChartOfAccounts = clearingChartOfAccounts;
+    }
+
+
+    public Account getClearingAccount() {
+        return clearingAccount;
+    }
+
+
+    public void setClearingAccount(Account clearingAccount) {
+        this.clearingAccount = clearingAccount;
+    }
+
+
+    public ObjectCodeCurrent getClearingFinancialObject() {
+        return clearingFinancialObject;
+    }
+
+
+    public void setClearingFinancialObject(ObjectCodeCurrent clearingFinancialObject) {
+        this.clearingFinancialObject = clearingFinancialObject;
+    }
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/options/PaymentMethodValuesFinderNonInterdepartmental.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/options/PaymentMethodValuesFinderNonInterdepartmental.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/options/PaymentMethodValuesFinderNonInterdepartmental.java	(revision 10217)
@@ -0,0 +1,44 @@
+/*
+ * Copyright 2007 The Kuali Foundation
+ * 
+ * Licensed under the Educational Community License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl2.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.fp.businessobject.options;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.rice.core.util.KeyLabelPair;
+import org.kuali.rice.kns.lookup.keyvalues.KeyValuesBase;
+import org.kuali.rice.kns.service.BusinessObjectService;
+
+import edu.arizona.kfs.fp.businessobject.PaymentMethod;
+
+/**
+ * This class returns list of payment method key value pairs.
+ * 
+ * Customization for UA: addition of "A" type for credit card payments.
+ * 
+ * @author jonathan
+ * @see org.kuali.kfs.fp.businessobject.options.PaymentMethodValuesFinder
+ */
+public class PaymentMethodValuesFinderNonInterdepartmental extends PaymentMethodValuesFinder {
+    static {
+        filterCriteria.put("interdepartmentalPayment", "N");
+    }
+    
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/options/PaymentMethodValuesFinder.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/options/PaymentMethodValuesFinder.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/options/PaymentMethodValuesFinder.java	(revision 10217)
@@ -0,0 +1,65 @@
+/*
+ * Copyright 2007 The Kuali Foundation
+ * 
+ * Licensed under the Educational Community License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl2.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.fp.businessobject.options;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.HashMap;
+import java.util.List;
+import java.util.Map;
+
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.rice.core.util.KeyLabelPair;
+import org.kuali.rice.kns.lookup.keyvalues.KeyValuesBase;
+import org.kuali.rice.kns.service.BusinessObjectService;
+
+import edu.arizona.kfs.fp.businessobject.PaymentMethod;
+
+/**
+ * This class returns list of payment method key value pairs.
+ * 
+ * Customization for UA: addition of "A" type for credit card payments.
+ * 
+ * @author jonathan
+ * @see org.kuali.kfs.fp.businessobject.options.PaymentMethodValuesFinder
+ */
+public class PaymentMethodValuesFinder extends KeyValuesBase {
+    static protected Map<String,String> filterCriteria = new HashMap<String, String>();
+    static {
+        filterCriteria.put("active", "Y");
+    }
+    
+    /*
+     * @see org.kuali.keyvalues.KeyValuesFinder#getKeyValues()
+     */
+    public List<KeyLabelPair> getKeyValues() {
+        Collection<PaymentMethod> paymentMethods = getBusinessObjectService().findMatching(PaymentMethod.class, filterCriteria);
+        List<KeyLabelPair> labels = new ArrayList<KeyLabelPair>( paymentMethods.size() );       
+        for ( PaymentMethod pm : paymentMethods ) {
+            labels.add(new KeyLabelPair(pm.getPaymentMethodCode(), pm.getPaymentMethodName()));
+        }
+        return labels;
+    }
+
+    private static BusinessObjectService businessObjectService;
+    protected BusinessObjectService getBusinessObjectService() {
+        if ( businessObjectService == null ) {
+            businessObjectService = SpringContext.getBean(BusinessObjectService.class);
+        }
+        return businessObjectService;
+    }
+    
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/PaymentMethod.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/PaymentMethod.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/PaymentMethod.java	(revision 10217)
@@ -0,0 +1,158 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.fp.businessobject;
+
+import java.util.LinkedHashMap;
+import java.util.List;
+
+import org.kuali.kfs.sys.businessobject.Bank;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.rice.kns.bo.Inactivateable;
+import org.kuali.rice.kns.bo.PersistableBusinessObjectBase;
+import org.kuali.rice.kns.service.DateTimeService;
+import org.kuali.rice.kns.util.ObjectUtils;
+import org.kuali.rice.kns.util.TypedArrayList;
+
+public class PaymentMethod extends PersistableBusinessObjectBase implements Inactivateable {
+
+    protected String paymentMethodCode;
+    protected String paymentMethodName;
+    protected String bankCode;
+    protected boolean assessedFees;
+    protected boolean processedUsingPdp;
+    protected boolean interdepartmentalPayment;
+    protected boolean offsetUsingClearingAccount;
+    protected boolean active = true;
+    
+    protected List<PaymentMethodChart> paymentMethodCharts = new TypedArrayList(PaymentMethodChart.class);
+    
+    protected Bank bank;
+    
+    @SuppressWarnings("unchecked")
+    @Override
+    protected LinkedHashMap toStringMapper() {
+        LinkedHashMap<String, String> lhm = new LinkedHashMap<String, String>();
+        lhm.put("paymentMethodCode", paymentMethodCode);
+        lhm.put("paymentMethodName", paymentMethodName);
+        return lhm;
+    }
+
+    public String getPaymentMethodCode() {
+        return paymentMethodCode;
+    }
+
+    public void setPaymentMethodCode(String paymentMethodCode) {
+        this.paymentMethodCode = paymentMethodCode;
+    }
+
+    public String getPaymentMethodName() {
+        return paymentMethodName;
+    }
+
+    public void setPaymentMethodName(String paymentMethodName) {
+        this.paymentMethodName = paymentMethodName;
+    }
+
+    public String getBankCode() {
+        return bankCode;
+    }
+
+    public void setBankCode(String bankCode) {
+        this.bankCode = bankCode;
+    }
+
+    public boolean isAssessedFees() {
+        return assessedFees;
+    }
+
+    public void setAssessedFees(boolean assesedFees) {
+        this.assessedFees = assesedFees;
+    }
+
+    public boolean isProcessedUsingPdp() {
+        return processedUsingPdp;
+    }
+
+    public void setProcessedUsingPdp(boolean processedUsingPdp) {
+        this.processedUsingPdp = processedUsingPdp;
+    }
+
+    public boolean isInterdepartmentalPayment() {
+        return interdepartmentalPayment;
+    }
+
+    public void setInterdepartmentalPayment(boolean interdepartmentalPayment) {
+        this.interdepartmentalPayment = interdepartmentalPayment;
+    }
+
+    public boolean isOffsetUsingClearingAccount() {
+        return offsetUsingClearingAccount;
+    }
+
+    public void setOffsetUsingClearingAccount(boolean offsetUsingClearingAccount) {
+        this.offsetUsingClearingAccount = offsetUsingClearingAccount;
+    }
+
+    public boolean isActive() {
+        return active;
+    }
+
+    public void setActive(boolean active) {
+        this.active = active;
+    }
+
+    public List<PaymentMethodChart> getPaymentMethodCharts() {
+        return paymentMethodCharts;
+    }
+
+    public void setPaymentMethodCharts(List<PaymentMethodChart> paymentMethodCharts) {
+        this.paymentMethodCharts = paymentMethodCharts;
+    }
+
+    public Bank getBank() {
+        return bank;
+    }
+
+    public void setBank(Bank bank) {
+        this.bank = bank;
+    }
+
+    /**
+     * Returns the PaymentMethodChart record applicable for the given chart and transaction date.
+     * 
+     * @param chartOfAccountsCode
+     * @param transDate The date of the transaction.  Used for comparing to the effective date on the records.  If null, the current date will be pulled from the DateTimeService.
+     * @return Applicable PaymentMethodChart object.  <b>null</b> if none is found.
+     */
+    public PaymentMethodChart getPaymentMethodChartInfo( String chartOfAccountsCode, java.sql.Date transDate ) {
+        if ( transDate == null ) {
+            transDate = SpringContext.getBean(DateTimeService.class).getCurrentSqlDate();
+        }
+        if ( ObjectUtils.isNotNull(getPaymentMethodCharts()) && chartOfAccountsCode != null ) {
+            // pull the first one matching the chart where the date is before/equal to today
+            // the ORM mapping ensures that these are retrieved in reverse date order,
+            // so the first one found will be the effective entry
+            for ( PaymentMethodChart pmc : getPaymentMethodCharts() ) {
+                if ( pmc.getChartOfAccountsCode().equals(chartOfAccountsCode)
+                        && transDate.after(pmc.getEffectiveDate()) ) {
+                    return pmc;
+                }
+            }
+        }
+        return null;
+    }
+    
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/datadictionary/PaymentMethodChart.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/datadictionary/PaymentMethodChart.xml	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/datadictionary/PaymentMethodChart.xml	(revision 10217)
@@ -0,0 +1,113 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+	xmlns:p="http://www.springframework.org/schema/p"
+	xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
+
+	<bean id="PaymentMethodChart" parent="PaymentMethodChart-parentBean" />
+
+	<bean id="PaymentMethodChart-parentBean" abstract="true" parent="BusinessObjectEntry">
+		<property name="businessObjectClass" value="edu.arizona.kfs.fp.businessobject.PaymentMethodChart" />
+		<property name="objectLabel" value="Payment Method" />
+		<property name="attributes">
+			<list>
+				<ref bean="PaymentMethodChart-paymentMethodCode" />
+				<ref bean="PaymentMethodChart-chartOfAccountsCode" />
+				<ref bean="PaymentMethodChart-effectiveDate" />
+				<ref bean="PaymentMethodChart-feeIncomeChartOfAccountsCode" />
+				<ref bean="PaymentMethodChart-feeIncomeAccountNumber" />
+				<ref bean="PaymentMethodChart-feeIncomeFinancialObjectCode" />
+				<ref bean="PaymentMethodChart-feeExpenseFinancialObjectCode" />
+				<ref bean="PaymentMethodChart-feeAmount" />
+				<ref bean="PaymentMethodChart-clearingChartOfAccountsCode" />
+				<ref bean="PaymentMethodChart-clearingAccountNumber" />
+				<ref bean="PaymentMethodChart-clearingFinancialObjectCode" />
+				<ref bean="PaymentMethodChart-active" />
+			</list>
+		</property>
+	</bean>
+
+	<!-- Attribute Definitions -->
+
+	<bean id="PaymentMethodChart-paymentMethodCode" parent="PaymentMethodChart-paymentMethodCode-parentBean" />
+	<bean id="PaymentMethodChart-paymentMethodCode-parentBean" abstract="true" parent="PaymentMethod-paymentMethodCode" />
+
+	<bean id="PaymentMethodChart-chartOfAccountsCode" parent="PaymentMethodChart-chartOfAccountsCode-parentBean" />
+	<bean id="PaymentMethodChart-chartOfAccountsCode-parentBean" abstract="true" parent="Chart-chartOfAccountsCode" />
+
+	<bean id="PaymentMethodChart-effectiveDate" parent="PaymentMethodChart-effectiveDate-parentBean" />
+	<bean id="PaymentMethodChart-effectiveDate-parentBean" abstract="true" parent="GenericAttributes-genericDate">
+		<property name="name" value="effectiveDate" />
+		<property name="label" value="Effective Date" />
+		<property name="shortLabel" value="EffDate" />
+	</bean>
+
+	<bean id="PaymentMethodChart-feeIncomeChartOfAccountsCode" parent="PaymentMethodChart-feeIncomeChartOfAccountsCode-parentBean" />
+	<bean id="PaymentMethodChart-feeIncomeChartOfAccountsCode-parentBean" abstract="true" parent="Chart-chartOfAccountsCode">
+		<property name="name" value="feeIncomeChartOfAccountsCode" />
+		<property name="label" value="Fee Chart Code" />
+		<property name="shortLabel" value="FeeChart" />
+		<property name="required" value="false" />
+	</bean>
+
+	<bean id="PaymentMethodChart-feeIncomeAccountNumber" parent="PaymentMethodChart-feeIncomeAccountNumber-parentBean" />
+	<bean id="PaymentMethodChart-feeIncomeAccountNumber-parentBean" abstract="true" parent="Account-accountNumber">
+		<property name="name" value="feeIncomeAccountNumber" />
+		<property name="label" value="Fee Account Number" />
+		<property name="shortLabel" value="FeeAcct" />
+		<property name="required" value="false" />
+	</bean>
+
+	<bean id="PaymentMethodChart-feeIncomeFinancialObjectCode" parent="PaymentMethodChart-feeIncomeFinancialObjectCode-parentBean" />
+	<bean id="PaymentMethodChart-feeIncomeFinancialObjectCode-parentBean" abstract="true" parent="ObjectCode-financialObjectCode">
+		<property name="name" value="feeIncomeFinancialObjectCode" />
+		<property name="label" value="Fee Income Object Code" />
+		<property name="shortLabel" value="FeeIncObj" />
+		<property name="required" value="false" />
+	</bean>
+
+	<bean id="PaymentMethodChart-feeExpenseFinancialObjectCode" parent="PaymentMethodChart-feeExpenseFinancialObjectCode-parentBean" />
+	<bean id="PaymentMethodChart-feeExpenseFinancialObjectCode-parentBean" abstract="true" parent="ObjectCode-financialObjectCode">
+		<property name="name" value="feeExpenseFinancialObjectCode" />
+		<property name="label" value="Departmental Fee Expense Object Code" />
+		<property name="shortLabel" value="FeeExpObj" />
+		<property name="required" value="false" />
+	</bean>
+
+	<bean id="PaymentMethodChart-feeAmount" parent="PaymentMethodChart-feeAmount-parentBean" />
+	<bean id="PaymentMethodChart-feeAmount-parentBean" abstract="true" parent="GenericAttributes-genericAmount">
+		<property name="name" value="feeAmount" />
+		<property name="label" value="Fee Amount" />
+		<property name="shortLabel" value="FeeAmt" />
+		<property name="required" value="false" />
+	</bean>
+
+	<bean id="PaymentMethodChart-clearingChartOfAccountsCode" parent="PaymentMethodChart-clearingChartOfAccountsCode-parentBean" />
+	<bean id="PaymentMethodChart-clearingChartOfAccountsCode-parentBean" abstract="true" parent="Chart-chartOfAccountsCode">
+		<property name="name" value="clearingChartOfAccountsCode" />
+		<property name="label" value="Clearing Chart Code" />
+		<property name="shortLabel" value="ClrChart" />
+		<property name="required" value="false" />
+	</bean>
+
+	<bean id="PaymentMethodChart-clearingAccountNumber" parent="PaymentMethodChart-clearingAccountNumber-parentBean" />
+	<bean id="PaymentMethodChart-clearingAccountNumber-parentBean" abstract="true" parent="Account-accountNumber">
+		<property name="name" value="clearingAccountNumber" />
+		<property name="label" value="Clearing Account Number" />
+		<property name="shortLabel" value="ClrAcct" />
+		<property name="required" value="false" />
+	</bean>
+
+	<bean id="PaymentMethodChart-clearingFinancialObjectCode" parent="PaymentMethodChart-clearingFinancialObjectCode-parentBean" />
+	<bean id="PaymentMethodChart-clearingFinancialObjectCode-parentBean" abstract="true" parent="ObjectCode-financialObjectCode">
+		<property name="name" value="clearingFinancialObjectCode" />
+		<property name="label" value="Clearing Object Code" />
+		<property name="shortLabel" value="ClrObj" />
+		<property name="required" value="false" />
+	</bean>
+
+	<bean id="PaymentMethodChart-active" parent="PaymentMethodChart-active-parentBean" />
+	<bean id="PaymentMethodChart-active-parentBean" abstract="true" parent="GenericAttributes-activeIndicator">
+		<property name="name" value="active" />
+	</bean>
+
+</beans>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/datadictionary/PaymentMethod.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/datadictionary/PaymentMethod.xml	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/businessobject/datadictionary/PaymentMethod.xml	(revision 10217)
@@ -0,0 +1,207 @@
+<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
+
+  <bean id="PaymentMethod" parent="PaymentMethod-parentBean"/>
+
+  <bean id="PaymentMethod-parentBean" abstract="true" parent="BusinessObjectEntry">
+    <property name="businessObjectClass" value="edu.arizona.kfs.fp.businessobject.PaymentMethod"/>
+    <property name="inquiryDefinition" ref="PaymentMethod-inquiryDefinition" />
+    <property name="lookupDefinition" ref="PaymentMethod-lookupDefinition" />
+    <property name="titleAttribute" value="paymentMethodCode"/>
+    <property name="objectLabel" value="Payment Method"/>
+    <property name="attributes">
+      <list>
+        <ref bean="PaymentMethod-paymentMethodCode"/>
+        <ref bean="PaymentMethod-paymentMethodName"/>
+        <ref bean="PaymentMethod-bankCode"/>
+        <ref bean="PaymentMethod-assessedFees"/>
+        <ref bean="PaymentMethod-processedUsingPdp"/>
+        <ref bean="PaymentMethod-interdepartmentalPayment"/>
+        <ref bean="PaymentMethod-offsetUsingClearingAccount"/>
+        <ref bean="PaymentMethod-active"/>
+      </list>
+    </property>
+  </bean>
+
+<!-- Attribute Definitions -->
+
+	<!--
+		New singleton for the payment method values finder, can be referenced
+		by all uses.
+	-->
+	<bean name="PaymentMethodSelectControl" parent="SelectControlDefinition"
+		p:valuesFinderClass="edu.arizona.kfs.fp.businessobject.options.PaymentMethodValuesFinder" p:includeKeyInLabel="true" />
+		
+	<bean name="PaymentMethodNonInterdepartmentalSelectControl" parent="SelectControlDefinition"
+		p:valuesFinderClass="edu.arizona.kfs.fp.businessobject.options.PaymentMethodValuesFinderNonInterdepartmental" p:includeKeyInLabel="true" />
+
+  <bean id="PaymentMethodAttribute-SelectControl" parent="PaymentMethod-paymentMethodCode" p:control-ref="PaymentMethodSelectControl" />
+  <bean id="PaymentMethodAttribute-NonInterdepartmentalSelectControl" parent="PaymentMethod-paymentMethodCode" p:control-ref="PaymentMethodSelectControl" />
+
+  <bean id="PaymentMethod-paymentMethodCode" parent="PaymentMethod-paymentMethodCode-parentBean"/>
+  <bean id="PaymentMethod-paymentMethodCode-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="paymentMethodCode"/>
+    <property name="forceUppercase" value="true"/>
+    <property name="label" value="Payment Method Code"/>
+    <property name="shortLabel" value="PmtMthCd"/>
+    <property name="maxLength" value="1"/>
+    <property name="required" value="true"/>
+    <property name="validationPattern">
+      <bean parent="AlphaValidationPattern" />
+    </property>
+    <property name="control">
+      <bean parent="TextControlDefinition" p:size="2" />
+    </property>
+  </bean>
+
+  <bean id="PaymentMethod-paymentMethodName" parent="PaymentMethod-paymentMethodName-parentBean"/>
+  <bean id="PaymentMethod-paymentMethodName-parentBean" abstract="true" parent="AttributeDefinition">
+    <property name="name" value="paymentMethodName"/>
+    <property name="forceUppercase" value="false"/>
+    <property name="label" value="Payment Method Description"/>
+    <property name="shortLabel" value="PmtMthDesc"/>
+    <property name="maxLength" value="40"/>
+    <property name="required" value="true"/>
+    <property name="validationPattern">
+      <bean parent="AnyCharacterValidationPattern" p:allowWhitespace="true" />
+    </property>
+    <property name="control">
+      <bean parent="TextControlDefinition" p:size="40" />
+    </property>
+  </bean>
+
+  <bean id="PaymentMethod-bankCode" parent="PaymentMethod-bankCode-parentBean"/>
+  <bean id="PaymentMethod-bankCode-parentBean" abstract="true" parent="Bank-bankCode">
+    <property name="required" value="false"/>
+  </bean>
+
+  <bean id="PaymentMethod-assessedFees" parent="PaymentMethod-assessedFees-parentBean"/>
+  <bean id="PaymentMethod-assessedFees-parentBean" abstract="true" parent="GenericAttributes-genericBoolean">
+    <property name="name" value="assessedFees"/>
+    <property name="label" value="Fee Indicator"/>
+    <property name="shortLabel" value="FeeInd"/>
+  </bean>
+
+  <bean id="PaymentMethod-processedUsingPdp" parent="PaymentMethod-processedUsingPdp-parentBean"/>
+  <bean id="PaymentMethod-processedUsingPdp-parentBean" abstract="true" parent="GenericAttributes-genericBoolean">
+    <property name="name" value="processedUsingPdp"/>
+    <property name="label" value="PDP Indicator"/>
+    <property name="shortLabel" value="PDPInd"/>
+  </bean>
+
+  <bean id="PaymentMethod-interdepartmentalPayment" parent="PaymentMethod-interdepartmentalPayment-parentBean"/>
+  <bean id="PaymentMethod-interdepartmentalPayment-parentBean" abstract="true" parent="GenericAttributes-genericBoolean">
+    <property name="name" value="interdepartmentalPayment"/>
+    <property name="label" value="Interdepartmental Payment Indicator"/>
+    <property name="shortLabel" value="IntDptPmtInd"/>
+  </bean>
+
+  <bean id="PaymentMethod-offsetUsingClearingAccount" parent="PaymentMethod-offsetUsingClearingAccount-parentBean"/>
+  <bean id="PaymentMethod-offsetUsingClearingAccount-parentBean" abstract="true" parent="GenericAttributes-genericBoolean">
+    <property name="name" value="offsetUsingClearingAccount"/>
+    <property name="label" value="Clearing Account Indicator"/>
+    <property name="shortLabel" value="ClrAcctInd"/>
+  </bean>
+
+  <bean id="PaymentMethod-active" parent="PaymentMethod-active-parentBean"/>
+  <bean id="PaymentMethod-active-parentBean" abstract="true" parent="GenericAttributes-activeIndicator">
+    <property name="name" value="active"/>
+  </bean>
+
+  <bean id="PaymentMethod-lookupDefinition" parent="PaymentMethod-lookupDefinition-parentBean"/>
+  <bean id="PaymentMethod-lookupDefinition-parentBean" abstract="true" parent="LookupDefinition">
+    <property name="title" value="Payment Method Lookup"/>    
+    <property name="defaultSort">
+      <bean parent="SortDefinition">
+        <property name="attributeNames">
+          <list>
+            <value>paymentMethodCode</value>
+          </list>
+        </property>
+      </bean>
+    </property>
+    <property name="lookupFields">
+      <list>
+        <bean parent="FieldDefinition" p:attributeName="paymentMethodCode"/>
+        <bean parent="FieldDefinition" p:attributeName="paymentMethodName"/>
+        <bean parent="FieldDefinition" p:attributeName="bankCode"/>
+        <bean parent="FieldDefinition" p:attributeName="assessedFees"/>
+        <bean parent="FieldDefinition" p:attributeName="processedUsingPdp"/>
+        <bean parent="FieldDefinition" p:attributeName="interdepartmentalPayment"/>
+        <bean parent="FieldDefinition" p:attributeName="offsetUsingClearingAccount"/>
+        <bean parent="FieldDefinition" p:attributeName="active"/>
+      </list>
+    </property>
+    <property name="resultFields">
+      <list>
+        <bean parent="FieldDefinition" p:attributeName="paymentMethodCode"/>
+        <bean parent="FieldDefinition" p:attributeName="paymentMethodName"/>
+        <bean parent="FieldDefinition" p:attributeName="bankCode"/>
+        <bean parent="FieldDefinition" p:attributeName="assessedFees"/>
+        <bean parent="FieldDefinition" p:attributeName="processedUsingPdp"/>
+        <bean parent="FieldDefinition" p:attributeName="interdepartmentalPayment"/>
+        <bean parent="FieldDefinition" p:attributeName="offsetUsingClearingAccount"/>
+        <bean parent="FieldDefinition" p:attributeName="active"/>
+      </list>
+    </property>
+  </bean>
+
+  <bean id="PaymentMethod-inquiryDefinition" parent="PaymentMethod-inquiryDefinition-parentBean"/>
+  <bean id="PaymentMethod-inquiryDefinition-parentBean" abstract="true" parent="InquiryDefinition">
+    <property name="title" value="Payment Method Inquiry"/>
+    <property name="inquirySections">
+      <list>
+        <bean parent="InquirySectionDefinition">
+          <property name="title" value="Payment Method"/>
+          <property name="numberOfColumns" value="1"/>
+          <property name="inquiryFields">
+            <list>
+		        <bean parent="FieldDefinition" p:attributeName="paymentMethodCode" p:noInquiry="true" />
+		        <bean parent="FieldDefinition" p:attributeName="paymentMethodName"/>
+		        <bean parent="FieldDefinition" p:attributeName="bankCode"/>
+		        <bean parent="FieldDefinition" p:attributeName="assessedFees"/>
+		        <bean parent="FieldDefinition" p:attributeName="processedUsingPdp"/>
+		        <bean parent="FieldDefinition" p:attributeName="interdepartmentalPayment"/>
+		        <bean parent="FieldDefinition" p:attributeName="offsetUsingClearingAccount"/>
+		        <bean parent="FieldDefinition" p:attributeName="active"/>
+            </list>
+          </property>
+        </bean>
+        <bean parent="InquirySectionDefinition">
+          <property name="title" value="Payment Method Charts"/>
+          <property name="inquiryFields">
+           	<list>
+		        <bean parent="InquiryCollectionDefinition">
+		          <property name="attributeName" value="paymentMethodCharts"/>
+		          <property name="businessObjectClass" value="edu.arizona.kfs.fp.businessobject.PaymentMethodChart"/>
+		          <property name="numberOfColumns" value="1"/>
+                  <property name="summaryTitle" value="Chart/Eff. Date"/>
+		          <property name="summaryFields">
+		            <list>
+		              <bean parent="FieldDefinition" p:attributeName="chartOfAccountsCode"/>
+		              <bean parent="FieldDefinition" p:attributeName="effectiveDate"/>
+		            </list>
+		          </property>
+		          <property name="inquiryFields">
+		            <list>
+		              <bean parent="FieldDefinition" p:attributeName="chartOfAccountsCode"/>
+		              <bean parent="FieldDefinition" p:attributeName="effectiveDate"/>
+		              <bean parent="FieldDefinition" p:attributeName="feeIncomeChartOfAccountsCode"/>
+		              <bean parent="FieldDefinition" p:attributeName="feeIncomeAccountNumber"/>
+		              <bean parent="FieldDefinition" p:attributeName="feeIncomeFinancialObjectCode"/>
+		              <bean parent="FieldDefinition" p:attributeName="feeExpenseFinancialObjectCode"/>
+		              <bean parent="FieldDefinition" p:attributeName="feeAmount"/>
+		              <bean parent="FieldDefinition" p:attributeName="clearingChartOfAccountsCode"/>
+		              <bean parent="FieldDefinition" p:attributeName="clearingAccountNumber"/>
+		              <bean parent="FieldDefinition" p:attributeName="clearingFinancialObjectCode"/>
+		              <bean parent="FieldDefinition" p:attributeName="active"/>
+		            </list>
+		          </property>
+		        </bean>
+	        </list>
+          </property>
+        </bean>
+      </list>
+    </property>
+  </bean>
+
+</beans>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/spring-fp.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/spring-fp.xml	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/spring-fp.xml	(revision 10217)
@@ -1,295 +1,331 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
- Copyright 2005-2007 The Kuali Foundation.
- 
- Licensed under the Educational Community License, Version 1.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
- http://www.opensource.org/licenses/ecl1.php
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-
-<beans xmlns="http://www.springframework.org/schema/beans"
-	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
-	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans
-                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
-                           http://www.springframework.org/schema/tx
-                           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
-                           http://www.springframework.org/schema/aop
-                           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
-
-    <bean id="fpModuleConfiguration" parent="rsmartFpModuleConfiguration-parentBean">	
-    	<property name="namespaceCode" value="KFS-FP" />
-    	
-    	<property name="jobNames">
-			<list merge="true">
-				<value>documentCreationJob</value>
-				<value>procurementCardHolderJob</value>
-			</list>
-		</property>
-    	
-        <property name="packagePrefixes">
-			<list merge="true">
-			    <value>edu.arizona.kfs.fp</value>	   
-			</list>
-		</property>
-		<property name="dataDictionaryPackages">
-		    <list merge="true">
-		    	<value>edu/arizona/kfs/fp/businessobject/datadictionary</value>
-		    	<value>edu/arizona/kfs/fp/document/datadictionary</value>
-            </list>
-		</property>
-		<property name="databaseRepositoryFilePaths">
-			<list merge="true">
-			   <value>edu/arizona/kfs/fp/ojb-fp.xml</value> 
-			</list>
-		</property>
-        <property name="batchFileDirectories">
-          <list merge="true">
-            <value>${reports.directory}/prje</value>
-          </list>
-        </property>
-	</bean>  
-	
-	<!-- validations -->
-	<import resource="document/validation/configuration/GeneralErrorCorrectionValidation.xml" />
-	<import resource="document/validation/configuration/AuxiliaryVoucherValidation.xml" />	
-
-	<bean id="documentCreationJob" parent="scheduledJobDescriptor">
-		<property name="steps">
-			<list>
-				<ref bean="tfileValidationStep" />
-				<ref bean="backupAndConsolidateStep" />
-				<ref bean="documentCreationStep" />
-			</list>
-		</property>
-	</bean>
-
-	<bean id="backupAndConsolidateStep" class="edu.arizona.kfs.fp.batch.BackupAndConsolidateStep" parent="step">
-		<property name="tfileHandler">
-			<ref bean="tfileHandler" />
-		</property>
-	</bean>
-
-	<bean id="tfileValidationStep" class="edu.arizona.kfs.fp.batch.TfileValidationStep" parent="step">
-		<property name="transactionPostingService">
-			<ref bean="transactionPostingService" />
-		</property>
-	</bean>
-
-	<bean id="documentCreationStep" class="edu.arizona.kfs.fp.batch.DocumentCreationStep" parent="step">
-	 	<property name="transactionPostingService">
-			<ref bean="transactionPostingService" />
-		</property>
-	</bean>
-	
-	<bean id="transactionPostingService" class="edu.arizona.kfs.fp.batch.service.impl.TransactionPostingServiceImpl" >
-		<property name="transactionPostingDao">
-			<ref bean="transactionPostingDao" />
-		</property>
-		<property name="tfileHandler">
-			<ref bean="tfileHandler" />
-		</property>
-		<property name="checkReconFileHandler">
-			<ref bean="checkReconFileHandler" />
-		</property>
-		<property name="bankParameterAccessService">
-			<ref bean="bankParameterAccessService" />
-		</property>
-		<property name="workflowDocumentService">
-			<ref bean="workflowDocumentService" />
-		</property>
-		<property name="documentService">
-			<ref bean="documentService" />
-		</property>
-		<property name="serviceMap">
-			<map>
-				<entry key= "CCR" value-ref ="bankCreditCardDocumentService"/>
-				<entry key= "DI" value-ref  ="bankDiDocumentService"/>
-				<entry key= "AD" value-ref  ="bankAdDocumentService"/>
-                <!--Changes to ServiceMap? Don't forget docTypeList also-->
-                </map>
-		</property>
-	</bean>
- 
- <bean id="tfileHandler" class="edu.arizona.kfs.fp.batch.dataaccess.impl.TfileHandlerServiceHelperImpl" scope="prototype">
-  <property name = "batchFileDirectoryName" value="${staging.directory}/fp/bankTransactions"/>
-        <property name="bankParameterAccessService">
-   <ref bean="bankParameterAccessService" />
-     </property>
-   <property name="transactionPostingDao">
-   <ref bean="transactionPostingDao" />
-  </property>
-     <property name="businessObjectService">
-   <ref bean="businessObjectService" />
-  </property>
-  </bean> 
-	
-   <bean id="bankAbstractDocumentService" abstract="true" >
-        <property name="transactionPostingDao">
-			<ref bean="transactionPostingDao" />
-		</property>
-		<property name="documentService">
-			<ref bean="documentService" />
-		</property>
-		<property name="bankParameterAccessService">
-			<ref bean="bankParameterAccessService" />
-		</property>
-	</bean>
-	
-	<bean id="bankCreditCardDocumentService" class="edu.arizona.kfs.fp.batch.service.impl.BankCreditCardDocumentServiceImpl" parent="bankAbstractDocumentService"/>
-	<bean id="bankDiDocumentService" class="edu.arizona.kfs.fp.batch.service.impl.BankDiDocumentServiceImpl"  parent="bankAbstractDocumentService"/>
-	<bean id="bankAdDocumentService" class="edu.arizona.kfs.fp.batch.service.impl.BankAdDocumentServiceImpl"  parent="bankAbstractDocumentService"/>
- 
-	
-	<bean id="bankParameterAccessService" class="edu.arizona.kfs.fp.batch.dataaccess.impl.BankParameterAccessServiceHelperImpl" >
-		<property name="parameterService">
-			<ref bean="parameterService" />
-		</property>
-	</bean>	
-
-	<bean id="checkReconFileHandler" class="edu.arizona.kfs.fp.batch.dataaccess.impl.CheckReconFileHandlerHelperImpl" scope="prototype">
-		<property name="batchFileDirectoryName" value="${staging.directory}/recon" />
-  		<property name="dateTimeService">
-	       <ref bean="dateTimeService"/>
-	    </property>
-	</bean>	
-
-	<bean id="transactionPostingDao" parent="platformAwareDao" class="edu.arizona.kfs.fp.batch.dataaccess.impl.TransactionPostingDaoOjb" />
-
-<bean id="tpBatchInputFileService" class="edu.arizona.kfs.fp.batch.service.impl.TpBatchInputFileServiceImpl"/>
-	<bean id="bankTransactionsInputFileType" class="edu.arizona.kfs.fp.batch.BankTransactionsInputFileType"> 
-	    <property name="directoryPath">
-	       <value>${staging.directory}/fp/bankTransactions</value>
-	    </property>
-	    <property name="fileExtension">
-	       <value>data</value>
-	    </property>
-	    <property name="dateTimeService">
-	       <ref bean="dateTimeService"/>
-	    </property>
-	</bean>
-	
-	<bean id="objectSubTypeCodeRoleTypeService"
-		class="edu.arizona.kfs.coa.identity.ObjectSubTypeCodeRoleTypeServiceImpl" />
-	<bean class="org.kuali.rice.ksb.messaging.KSBExporter">
-		<property name="serviceDefinition">
-			<bean parent="kfsService" p:service-ref="objectSubTypeCodeRoleTypeService"
-				p:localServiceName="objectSubTypeCodeRoleTypeService" />
-		</property>
-	</bean>	
-
-	<bean id="procurementCardHolderJob" parent="scheduledJobDescriptor">
-		<property name="steps">
-			<list>
-				<ref bean="procurementCardHolderLoadStep" />
-				<ref bean="procurementCardHolderUpdateStep" />
-			</list>
-		</property>
-	</bean>
-	
-	<bean id="procurementCardHolderLoadStep" class="edu.arizona.kfs.fp.batch.ProcurementCardHolderLoadStep" parent="step">
-		<property name="procurementCardHolderLoadService">
-			<ref bean="procurementCardHolderLoadService" />
-		</property>
-		<property name="batchInputFileService">
-		    <ref bean="batchInputFileService" />
-		</property>
-		<property name="procurementCardHolderInputFileType">
-		    <ref bean="procurementCardHolderInputFileType" />
-		</property>	
-	</bean>
-	
-	<bean id="procurementCardHolderUpdateStep" class="edu.arizona.kfs.fp.batch.ProcurementCardHolderUpdateStep" parent="step">
-		<property name="procurementCardHolderUpdateService">
-			<ref bean="procurementCardHolderUpdateService" />
-		</property>
-	</bean>
-
-	<bean id="procurementCardHolderLoadService" class="edu.arizona.kfs.fp.batch.service.impl.ProcurementCardHolderLoadServiceImpl">
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>
-		<property name="batchInputFileService">
-			<ref bean="batchInputFileService" />
-		</property>
-		<property name="procurementCardHolderInputFileType">
-			<ref bean="procurementCardHolderInputFileType" />
-		</property>	
-	</bean>
-	
-	<bean id="procurementCardHolderUpdateService" class="edu.arizona.kfs.fp.batch.service.impl.ProcurementCardHolderUpdateServiceImpl">
-		<property name="businessObjectService">
-			<ref bean="businessObjectService" />
-		</property>		
-		<property name="dateTimeService">
-			<ref bean="dateTimeService" />
-		</property>		
-	</bean>
-	
-	<bean id="procurementCardHolderInputFileType" class="edu.arizona.kfs.fp.batch.ProcurementCardHolderInputFileType"> 
-	    <property name="directoryPath">
-	       <value>${staging.directory}/fp/procurementCardHolder</value>
-	    </property>
-	    <property name="fileExtension">
-	       <value>xml</value>
-	    </property>
-	    <property name="digestorRulesFileName">
-	       <value>edu/arizona/kfs/fp/batch/pcdhDigesterRules.xml</value>
-	    </property>
-	    <property name="schemaLocation">
-	       <value>${externalizable.static.content.url}/xsd/fp/procurementCardHolder.xsd</value>
-	    </property>
-	    <property name="dateTimeService">
-	       <ref bean="dateTimeService"/>
-	    </property>
-	</bean>
-	
-	<!-- PCard Reroute to Reconciler - KITT-952 -->	
-	<bean id="procurementCardDocumentJob" parent="scheduledJobDescriptor">
-		<property name="steps">
-			<list>
-				<ref bean="procurementCardLoadStep" />
-				<ref bean="procurementCardCreateDocumentsStep" />
-				<ref bean="procurementCardRouteDocumentsStep" />
-				<ref bean="procurementCardAutoApproveDocumentsStep" />
-				<ref bean="procurementCardRerouteDocumentsStep" />
-			</list>
-		</property>
-	</bean>
-	
-	<bean id="procurementCardRerouteDocumentsStep" class="edu.arizona.kfs.fp.batch.ProcurementCardRerouteDocumentsStep" parent="step">
-		<property name="procurementCardCreateDocumentService">
-			<ref bean="procurementCardCreateDocumentService" />
-		</property>
-	</bean>
-	<!-- PCard Reroute to Reconciler - KITT-952 end -->	
-	
-	<!-- PCard Level 3 - KITT-431 -->	
-	<bean id="procurementCardInputFileType" class="org.kuali.kfs.fp.batch.ProcurementCardInputFileType"> 
-	    <property name="directoryPath">
-	       <value>${staging.directory}/fp/procurementCard</value>
-	    </property>
-	    <property name="fileExtension">
-	       <value>xml</value>
-	    </property>
-	    <property name="digestorRulesFileName">
-	       <value>edu/arizona/kfs/fp/batch/pcdoLevel3DigesterRules.xml</value>
-	    </property>
-	    <property name="schemaLocation">
-	       <value>${externalizable.static.content.url}/xsd/fp/procurementCardLevel3.xsd</value>
-	    </property>
-	    <property name="dateTimeService">
-	       <ref bean="dateTimeService"/>
-	    </property>
-	</bean>
-	<!-- PCard Level 3 - KITT-431 end -->
-	
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Copyright 2005-2007 The Kuali Foundation.
+ 
+ Licensed under the Educational Community License, Version 1.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+ http://www.opensource.org/licenses/ecl1.php
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+<beans xmlns="http://www.springframework.org/schema/beans"
+	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
+	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
+                           http://www.springframework.org/schema/tx
+                           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
+                           http://www.springframework.org/schema/aop
+                           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
+
+    <bean id="fpModuleConfiguration" parent="rsmartFpModuleConfiguration-parentBean">	
+    	<property name="namespaceCode" value="KFS-FP" />
+    	
+    	<property name="jobNames">
+			<list merge="true">
+				<value>documentCreationJob</value>
+				<value>procurementCardHolderJob</value>
+			</list>
+		</property>
+    	
+        <property name="packagePrefixes">
+			<list merge="true">
+			    <value>edu.arizona.kfs.fp</value>	   
+			</list>
+		</property>
+		<property name="dataDictionaryPackages">
+		    <list merge="true">
+		    	<value>edu/arizona/kfs/fp/businessobject/datadictionary</value>
+		    	<value>edu/arizona/kfs/fp/document/datadictionary</value>
+            </list>
+		</property>
+		<property name="databaseRepositoryFilePaths">
+			<list merge="true">
+			   <value>edu/arizona/kfs/fp/ojb-fp.xml</value> 
+			</list>
+		</property>
+		 <!--  MOD-PA2000-01 - Add the new needed DWR configuration -->
+		<property name="scriptConfigurationFilePaths">
+			<list merge="true">
+				<value>edu/arizona/kfs/fp/dwr-fp.xml</value>
+			</list>
+		</property>
+        <property name="batchFileDirectories">
+          <list merge="true">
+            <value>${reports.directory}/prje</value>
+          </list>
+        </property>
+	</bean>  
+	
+	<!-- validations -->
+	<import resource="document/validation/configuration/GeneralErrorCorrectionValidation.xml" />
+	<import resource="document/validation/configuration/AuxiliaryVoucherValidation.xml" />	
+
+	<bean id="documentCreationJob" parent="scheduledJobDescriptor">
+		<property name="steps">
+			<list>
+				<ref bean="tfileValidationStep" />
+				<ref bean="backupAndConsolidateStep" />
+				<ref bean="documentCreationStep" />
+			</list>
+		</property>
+	</bean>
+
+	<bean id="backupAndConsolidateStep" class="edu.arizona.kfs.fp.batch.BackupAndConsolidateStep" parent="step">
+		<property name="tfileHandler">
+			<ref bean="tfileHandler" />
+		</property>
+	</bean>
+
+	<bean id="tfileValidationStep" class="edu.arizona.kfs.fp.batch.TfileValidationStep" parent="step">
+		<property name="transactionPostingService">
+			<ref bean="transactionPostingService" />
+		</property>
+	</bean>
+
+	<bean id="documentCreationStep" class="edu.arizona.kfs.fp.batch.DocumentCreationStep" parent="step">
+	 	<property name="transactionPostingService">
+			<ref bean="transactionPostingService" />
+		</property>
+	</bean>
+	
+	<bean id="transactionPostingService" class="edu.arizona.kfs.fp.batch.service.impl.TransactionPostingServiceImpl" >
+		<property name="transactionPostingDao">
+			<ref bean="transactionPostingDao" />
+		</property>
+		<property name="tfileHandler">
+			<ref bean="tfileHandler" />
+		</property>
+		<property name="checkReconFileHandler">
+			<ref bean="checkReconFileHandler" />
+		</property>
+		<property name="bankParameterAccessService">
+			<ref bean="bankParameterAccessService" />
+		</property>
+		<property name="workflowDocumentService">
+			<ref bean="workflowDocumentService" />
+		</property>
+		<property name="documentService">
+			<ref bean="documentService" />
+		</property>
+		<property name="serviceMap">
+			<map>
+				<entry key= "CCR" value-ref ="bankCreditCardDocumentService"/>
+				<entry key= "DI" value-ref  ="bankDiDocumentService"/>
+				<entry key= "AD" value-ref  ="bankAdDocumentService"/>
+                <!--Changes to ServiceMap? Don't forget docTypeList also-->
+                </map>
+		</property>
+	</bean>
+ 
+ <bean id="tfileHandler" class="edu.arizona.kfs.fp.batch.dataaccess.impl.TfileHandlerServiceHelperImpl" scope="prototype">
+  <property name = "batchFileDirectoryName" value="${staging.directory}/fp/bankTransactions"/>
+        <property name="bankParameterAccessService">
+   <ref bean="bankParameterAccessService" />
+     </property>
+   <property name="transactionPostingDao">
+   <ref bean="transactionPostingDao" />
+  </property>
+     <property name="businessObjectService">
+   <ref bean="businessObjectService" />
+  </property>
+  </bean> 
+	
+   <bean id="bankAbstractDocumentService" abstract="true" >
+        <property name="transactionPostingDao">
+			<ref bean="transactionPostingDao" />
+		</property>
+		<property name="documentService">
+			<ref bean="documentService" />
+		</property>
+		<property name="bankParameterAccessService">
+			<ref bean="bankParameterAccessService" />
+		</property>
+	</bean>
+	
+	<bean id="bankCreditCardDocumentService" class="edu.arizona.kfs.fp.batch.service.impl.BankCreditCardDocumentServiceImpl" parent="bankAbstractDocumentService"/>
+	<bean id="bankDiDocumentService" class="edu.arizona.kfs.fp.batch.service.impl.BankDiDocumentServiceImpl"  parent="bankAbstractDocumentService"/>
+	<bean id="bankAdDocumentService" class="edu.arizona.kfs.fp.batch.service.impl.BankAdDocumentServiceImpl"  parent="bankAbstractDocumentService"/>
+ 
+	
+	<bean id="bankParameterAccessService" class="edu.arizona.kfs.fp.batch.dataaccess.impl.BankParameterAccessServiceHelperImpl" >
+		<property name="parameterService">
+			<ref bean="parameterService" />
+		</property>
+	</bean>	
+
+	<bean id="checkReconFileHandler" class="edu.arizona.kfs.fp.batch.dataaccess.impl.CheckReconFileHandlerHelperImpl" scope="prototype">
+		<property name="batchFileDirectoryName" value="${staging.directory}/recon" />
+  		<property name="dateTimeService">
+	       <ref bean="dateTimeService"/>
+	    </property>
+	</bean>	
+
+	<bean id="transactionPostingDao" parent="platformAwareDao" class="edu.arizona.kfs.fp.batch.dataaccess.impl.TransactionPostingDaoOjb" />
+
+<bean id="tpBatchInputFileService" class="edu.arizona.kfs.fp.batch.service.impl.TpBatchInputFileServiceImpl"/>
+	<bean id="bankTransactionsInputFileType" class="edu.arizona.kfs.fp.batch.BankTransactionsInputFileType"> 
+	    <property name="directoryPath">
+	       <value>${staging.directory}/fp/bankTransactions</value>
+	    </property>
+	    <property name="fileExtension">
+	       <value>data</value>
+	    </property>
+	    <property name="dateTimeService">
+	       <ref bean="dateTimeService"/>
+	    </property>
+	</bean>
+	
+	<bean id="objectSubTypeCodeRoleTypeService"
+		class="edu.arizona.kfs.coa.identity.ObjectSubTypeCodeRoleTypeServiceImpl" />
+	<bean class="org.kuali.rice.ksb.messaging.KSBExporter">
+		<property name="serviceDefinition">
+			<bean parent="kfsService" p:service-ref="objectSubTypeCodeRoleTypeService"
+				p:localServiceName="objectSubTypeCodeRoleTypeService" />
+		</property>
+	</bean>	
+	
+	<bean id="uaPaymentMethodGeneralLedgerPendingEntryService" class="edu.arizona.kfs.fp.service.impl.UaPaymentMethodGeneralLedgerPendingEntryServiceImpl" />
+	
+	<bean id="disbursementVoucherExtractService" class="edu.arizona.kfs.fp.batch.service.impl.UaDisbursementVoucherExtractServiceImpl">
+		<property name="parameterService">
+			<ref bean="parameterService"/>
+		</property>
+		<property name="disbursementVoucherDao">
+			<ref bean="disbursementVoucherDao"/>
+		</property>
+		<property name="dateTimeService">
+			<ref bean="dateTimeService"/>
+		</property>
+		<property name="customerProfileService">
+			<ref bean="pdpCustomerProfileService"/>
+		</property>
+		<property name="paymentFileService">
+			<ref bean="paymentFileService"/>
+		</property>
+		<property name="paymentGroupService">
+			<ref bean="pdpPaymentGroupService"/>
+		</property>
+		<property name="businessObjectService">
+			<ref bean="businessObjectService"/>
+		</property>
+		<property name="paymentFileEmailService">
+			<ref bean="pdpEmailService"/>
+		</property>
+	</bean>
+	
+
+	<bean id="procurementCardHolderJob" parent="scheduledJobDescriptor">
+		<property name="steps">
+			<list>
+				<ref bean="procurementCardHolderLoadStep" />
+				<ref bean="procurementCardHolderUpdateStep" />
+			</list>
+		</property>
+	</bean>
+	
+	<bean id="procurementCardHolderLoadStep" class="edu.arizona.kfs.fp.batch.ProcurementCardHolderLoadStep" parent="step">
+		<property name="procurementCardHolderLoadService">
+			<ref bean="procurementCardHolderLoadService" />
+		</property>
+		<property name="batchInputFileService">
+		    <ref bean="batchInputFileService" />
+		</property>
+		<property name="procurementCardHolderInputFileType">
+		    <ref bean="procurementCardHolderInputFileType" />
+		</property>	
+	</bean>
+	
+	<bean id="procurementCardHolderUpdateStep" class="edu.arizona.kfs.fp.batch.ProcurementCardHolderUpdateStep" parent="step">
+		<property name="procurementCardHolderUpdateService">
+			<ref bean="procurementCardHolderUpdateService" />
+		</property>
+	</bean>
+
+	<bean id="procurementCardHolderLoadService" class="edu.arizona.kfs.fp.batch.service.impl.ProcurementCardHolderLoadServiceImpl">
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>
+		<property name="batchInputFileService">
+			<ref bean="batchInputFileService" />
+		</property>
+		<property name="procurementCardHolderInputFileType">
+			<ref bean="procurementCardHolderInputFileType" />
+		</property>	
+	</bean>
+	
+	<bean id="procurementCardHolderUpdateService" class="edu.arizona.kfs.fp.batch.service.impl.ProcurementCardHolderUpdateServiceImpl">
+		<property name="businessObjectService">
+			<ref bean="businessObjectService" />
+		</property>		
+		<property name="dateTimeService">
+			<ref bean="dateTimeService" />
+		</property>		
+	</bean>
+	
+	<bean id="procurementCardHolderInputFileType" class="edu.arizona.kfs.fp.batch.ProcurementCardHolderInputFileType"> 
+	    <property name="directoryPath">
+	       <value>${staging.directory}/fp/procurementCardHolder</value>
+	    </property>
+	    <property name="fileExtension">
+	       <value>xml</value>
+	    </property>
+	    <property name="digestorRulesFileName">
+	       <value>edu/arizona/kfs/fp/batch/pcdhDigesterRules.xml</value>
+	    </property>
+	    <property name="schemaLocation">
+	       <value>${externalizable.static.content.url}/xsd/fp/procurementCardHolder.xsd</value>
+	    </property>
+	    <property name="dateTimeService">
+	       <ref bean="dateTimeService"/>
+	    </property>
+	</bean>
+	
+	<!-- PCard Reroute to Reconciler - KITT-952 -->	
+	<bean id="procurementCardDocumentJob" parent="scheduledJobDescriptor">
+		<property name="steps">
+			<list>
+				<ref bean="procurementCardLoadStep" />
+				<ref bean="procurementCardCreateDocumentsStep" />
+				<ref bean="procurementCardRouteDocumentsStep" />
+				<ref bean="procurementCardAutoApproveDocumentsStep" />
+				<ref bean="procurementCardRerouteDocumentsStep" />
+			</list>
+		</property>
+	</bean>
+	
+	<bean id="procurementCardRerouteDocumentsStep" class="edu.arizona.kfs.fp.batch.ProcurementCardRerouteDocumentsStep" parent="step">
+		<property name="procurementCardCreateDocumentService">
+			<ref bean="procurementCardCreateDocumentService" />
+		</property>
+	</bean>
+	<!-- PCard Reroute to Reconciler - KITT-952 end -->	
+	
+	<!-- PCard Level 3 - KITT-431 -->	
+	<bean id="procurementCardInputFileType" class="org.kuali.kfs.fp.batch.ProcurementCardInputFileType"> 
+	    <property name="directoryPath">
+	       <value>${staging.directory}/fp/procurementCard</value>
+	    </property>
+	    <property name="fileExtension">
+	       <value>xml</value>
+	    </property>
+	    <property name="digestorRulesFileName">
+	       <value>edu/arizona/kfs/fp/batch/pcdoLevel3DigesterRules.xml</value>
+	    </property>
+	    <property name="schemaLocation">
+	       <value>${externalizable.static.content.url}/xsd/fp/procurementCardLevel3.xsd</value>
+	    </property>
+	    <property name="dateTimeService">
+	       <ref bean="dateTimeService"/>
+	    </property>
+	</bean>
+	<!-- PCard Level 3 - KITT-431 end -->
+	
+</beans>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/ojb-fp.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/ojb-fp.xml	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/ojb-fp.xml	(revision 10217)
@@ -594,6 +594,153 @@
     <field-descriptor name="itemTotal" column="ITEM_TOTAL" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion" />        
 </class-descriptor>
 
+<!-- Payment Method Descriptors - MOD-PA2000-01 -->
+<class-descriptor class="edu.arizona.kfs.fp.businessobject.PaymentMethod" table="FP_PMT_MTHD_T">
+    <field-descriptor name="paymentMethodCode"          column="PMT_MTHD_CD" jdbc-type="VARCHAR" primarykey="true" index="true" />
+    <field-descriptor name="objectId"                   column="OBJ_ID" jdbc-type="VARCHAR" index="true" />
+    <field-descriptor name="versionNumber"              column="VER_NBR" jdbc-type="BIGINT" locking="true" />
+    <field-descriptor name="paymentMethodName"          column="pmt_mthd_nm" jdbc-type="VARCHAR" />
+    <field-descriptor name="bankCode"                   column="bnk_cd" jdbc-type="VARCHAR" />
+    <field-descriptor name="assessedFees"               column="fee_ind" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="processedUsingPdp"          column="pdp_ind" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="interdepartmentalPayment"   column="interdept_ind" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="offsetUsingClearingAccount" column="clr_acct_ind" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="active"                     column="active_ind" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <reference-descriptor name="bank" class-ref="org.kuali.kfs.sys.businessobject.Bank" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="bankCode" />
+    </reference-descriptor>
+    <collection-descriptor name="paymentMethodCharts" proxy="true" element-class-ref="edu.arizona.kfs.fp.businessobject.PaymentMethodChart" 
+    		collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="object" auto-delete="object">
+        <orderby name="effectiveDate" sort="DESC" />
+        <inverse-foreignkey field-ref="paymentMethodCode" />
+    </collection-descriptor>   
+</class-descriptor>
+
+<class-descriptor class="edu.arizona.kfs.fp.businessobject.PaymentMethodChart" table="FP_PMT_MTHD_CHART_T">
+    <field-descriptor name="paymentMethodCode"             column="PMT_MTHD_CD" jdbc-type="VARCHAR" primarykey="true" />
+    <field-descriptor name="chartOfAccountsCode"           column="fin_coa_cd" jdbc-type="VARCHAR" primarykey="true" />
+    <field-descriptor name="effectiveDate"                 column="eff_dt" jdbc-type="DATE" primarykey="true" />
+    <field-descriptor name="objectId"                      column="OBJ_ID" jdbc-type="VARCHAR" index="true" />
+    <field-descriptor name="versionNumber"                 column="VER_NBR" jdbc-type="BIGINT" locking="true" />
+    <field-descriptor name="feeIncomeChartOfAccountsCode"  column="fee_inc_fin_coa_cd" jdbc-type="VARCHAR" />
+    <field-descriptor name="feeIncomeAccountNumber"        column="fee_inc_account_nbr" jdbc-type="VARCHAR" />
+    <field-descriptor name="feeIncomeFinancialObjectCode"  column="fee_inc_obj_cd" jdbc-type="VARCHAR" />
+    <field-descriptor name="feeExpenseFinancialObjectCode" column="fee_exp_obj_cd" jdbc-type="VARCHAR" />
+    <field-descriptor name="feeAmount"                     column="fee_amt" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion" />
+    <field-descriptor name="clearingChartOfAccountsCode"   column="clr_fin_coa_cd" jdbc-type="VARCHAR" />
+    <field-descriptor name="clearingAccountNumber"         column="clr_account_nbr" jdbc-type="VARCHAR" />
+    <field-descriptor name="clearingFinancialObjectCode"   column="clr_obj_cd" jdbc-type="VARCHAR" />
+    <field-descriptor name="active"                        column="active_ind" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <reference-descriptor name="chartOfAccounts" class-ref="org.kuali.kfs.coa.businessobject.Chart" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="chartOfAccountsCode" />
+    </reference-descriptor>
+    <reference-descriptor name="feeIncomeChartOfAccounts" class-ref="org.kuali.kfs.coa.businessobject.Chart" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="feeIncomeChartOfAccountsCode" />
+    </reference-descriptor>
+    <reference-descriptor name="feeExpenseFinancialObject" class-ref="org.kuali.kfs.coa.businessobject.ObjectCodeCurrent" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="chartOfAccountsCode" />
+        <foreignkey field-ref="feeExpenseFinancialObjectCode" />
+    </reference-descriptor>
+    <reference-descriptor name="feeIncomeFinancialObject" class-ref="org.kuali.kfs.coa.businessobject.ObjectCodeCurrent" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="feeIncomeChartOfAccountsCode" />
+        <foreignkey field-ref="feeIncomeFinancialObjectCode" />
+    </reference-descriptor>
+    <reference-descriptor name="feeIncomeAccount" class-ref="org.kuali.kfs.coa.businessobject.Account" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="feeIncomeChartOfAccountsCode" />
+        <foreignkey field-ref="feeIncomeAccountNumber" />
+    </reference-descriptor>
+    <reference-descriptor name="clearingChartOfAccounts" class-ref="org.kuali.kfs.coa.businessobject.Chart" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="clearingChartOfAccountsCode" />
+    </reference-descriptor>
+    <reference-descriptor name="clearingAccount" class-ref="org.kuali.kfs.coa.businessobject.Account" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="clearingChartOfAccountsCode" />
+        <foreignkey field-ref="clearingAccountNumber" />
+    </reference-descriptor>
+    <reference-descriptor name="clearingFinancialObject" class-ref="org.kuali.kfs.coa.businessobject.ObjectCodeCurrent" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="clearingChartOfAccountsCode" />
+        <foreignkey field-ref="clearingFinancialObjectCode" />
+    </reference-descriptor>
+</class-descriptor>
+
+<class-descriptor class="edu.arizona.kfs.fp.document.UaDisbursementVoucherDocument" table="FP_DV_DOC_T">
+    <field-descriptor name="documentNumber" column="FDOC_NBR" jdbc-type="VARCHAR" primarykey="true" />
+    <field-descriptor name="versionNumber" column="VER_NBR" jdbc-type="BIGINT" locking="true" />
+    <field-descriptor name="objectId" column="OBJ_ID" jdbc-type="VARCHAR" index="true" />
+    <field-descriptor name="nextSourceLineNumber" column="FDOC_NXT_LINE_NBR" jdbc-type="INTEGER" />
+    <field-descriptor name="finDocNextRegistrantLineNbr" column="FDOC_NXT_REG_NBR" jdbc-type="INTEGER" />
+    <field-descriptor name="disbVchrContactPersonName" column="DV_CNTCT_PRSN_NM" jdbc-type="VARCHAR" />
+    <field-descriptor name="disbVchrContactPhoneNumber" column="DV_CNTCT_PHN_NBR" jdbc-type="VARCHAR" />
+    <field-descriptor name="disbVchrContactEmailId" column="DV_CNTCT_EMAIL_ID" jdbc-type="VARCHAR" />
+    <field-descriptor name="postingYear" column="FDOC_POST_YR" jdbc-type="INTEGER" />
+    <field-descriptor name="postingPeriodCode" column="FDOC_POST_PRD_CD" jdbc-type="VARCHAR" />
+    <field-descriptor name="disbursementVoucherDueDate" column="DV_DUE_DT" jdbc-type="DATE" />
+    <field-descriptor name="disbVchrAttachmentCode" column="DV_ATTCH_IND" jdbc-type="CHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="disbVchrSpecialHandlingCode" column="DV_SPCL_HANDLG_IND" jdbc-type="CHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="disbVchrCheckTotalAmount" column="DV_CHK_TOT_AMT" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion" />
+    <field-descriptor name="disbVchrForeignCurrencyInd" column="DV_FRGN_CRNCY_IND" jdbc-type="CHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="disbursementVoucherDocumentationLocationCode" column="DV_DOC_LOC_CD" jdbc-type="VARCHAR" />
+    <field-descriptor name="disbVchrCheckStubText" column="DV_CHK_STUB_TXT" jdbc-type="VARCHAR" />
+    <field-descriptor name="dvCheckStubOverflowCode" column="DV_CHKSTUBOVFL_IND" jdbc-type="CHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="campusCode" column="CAMPUS_CD" jdbc-type="VARCHAR" />
+    <field-descriptor name="disbVchrPayeeTaxControlCode" column="DV_PAYEE_TXCTRL_CD" jdbc-type="VARCHAR" />
+    <field-descriptor name="disbVchrPayeeChangedInd" column="DV_PAYEE_CHG_IND" jdbc-type="CHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="disbursementVoucherCheckNbr" column="DV_CHK_NBR" jdbc-type="VARCHAR" />
+    <field-descriptor name="disbursementVoucherCheckDate" column="DV_CHK_DT" jdbc-type="TIMESTAMP" />
+    <field-descriptor name="disbVchrPayeeW9CompleteCode" column="DV_W9_CMPLT_IND" jdbc-type="CHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="disbVchrPaymentMethodCode" column="DV_PMT_MTHD_CD" jdbc-type="VARCHAR" />
+    <field-descriptor name="disbVchrBankCode" column="DV_BNK_CD" jdbc-type="VARCHAR" />   
+    <field-descriptor name="extractDate" column="DV_EXTRT_DT" jdbc-type="DATE" />
+    <field-descriptor name="paidDate" column="DV_PD_DT" jdbc-type="DATE" />
+    <field-descriptor name="cancelDate" column="DV_CNCL_DT" jdbc-type="DATE" />
+    <field-descriptor name="disbVchrPdpBankCode" column="DV_PDP_BNK_CD" jdbc-type="VARCHAR" />   
+    
+    <reference-descriptor name="documentHeader" class-ref="org.kuali.kfs.sys.businessobject.FinancialSystemDocumentHeader" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="documentNumber" />
+    </reference-descriptor>
+
+    <reference-descriptor name="disbVchrDocumentationLoc" class-ref="org.kuali.kfs.fp.businessobject.DisbursementVoucherDocumentationLocation" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="disbursementVoucherDocumentationLocationCode" />
+    </reference-descriptor>
+
+    <reference-descriptor name="dvNonEmployeeTravel" class-ref="org.kuali.kfs.fp.businessobject.DisbursementVoucherNonEmployeeTravel" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="documentNumber" />
+    </reference-descriptor>
+
+    <reference-descriptor name="dvNonResidentAlienTax" class-ref="org.kuali.kfs.fp.businessobject.DisbursementVoucherNonResidentAlienTax" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="documentNumber" />
+    </reference-descriptor>
+
+    <reference-descriptor name="dvPayeeDetail" class-ref="org.kuali.kfs.fp.businessobject.DisbursementVoucherPayeeDetail" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="documentNumber" />
+    </reference-descriptor>
+
+    <reference-descriptor name="dvPreConferenceDetail" class-ref="org.kuali.kfs.fp.businessobject.DisbursementVoucherPreConferenceDetail" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="documentNumber" />
+    </reference-descriptor>
+
+    <reference-descriptor name="dvWireTransfer" class-ref="org.kuali.kfs.fp.businessobject.DisbursementVoucherWireTransfer" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="documentNumber" />
+    </reference-descriptor>
+    
+    <reference-descriptor name="bank" class-ref="org.kuali.kfs.sys.businessobject.Bank" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="disbVchrBankCode" />
+    </reference-descriptor>   
+
+    <collection-descriptor name="sourceAccountingLines" proxy="true" element-class-ref="org.kuali.kfs.sys.businessobject.SourceAccountingLine" collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="object" auto-delete="object">
+        <orderby name="sequenceNumber" sort="ASC" />
+        <inverse-foreignkey field-ref="documentNumber" />
+				<query-customizer class="org.kuali.kfs.sys.dataaccess.impl.OjbQueryCustomizer">
+						<attribute attribute-name="financialDocumentLineTypeCode" attribute-value="F" />
+				</query-customizer>
+    </collection-descriptor>
+
+    <collection-descriptor name="generalLedgerPendingEntries" proxy="true" element-class-ref="org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntry" collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="object" auto-delete="object">
+        <orderby name="transactionLedgerEntrySequenceNumber" sort="ASC" />
+        <inverse-foreignkey field-ref="documentNumber" />
+    </collection-descriptor>
+</class-descriptor>
+
+
 <class-descriptor class="edu.arizona.kfs.fp.businessobject.ProcurementCardTranShipSvc" table="FP_PRCRMNT_TRN_SHIP_T">
     <field-descriptor name="transactionSequenceRowNumber" column="TRN_SEQ_ROW_NBR" jdbc-type="INTEGER" primarykey="true" index="true" />
     <field-descriptor name="sequenceRowNumber" column="SEQ_ROW_NBR" jdbc-type="INTEGER" primarykey="true" index="true" autoincrement="true" sequence-name="FP_PRCRMNT_TRN_SHIP_SEQ" />
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/datadictionary/PaymentMethodMaintenanceDocument.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/datadictionary/PaymentMethodMaintenanceDocument.xml	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/datadictionary/PaymentMethodMaintenanceDocument.xml	(revision 10217)
@@ -0,0 +1,129 @@
+<?xml version="1.0" encoding="UTF-8"?><beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:dd="http://rice.kuali.org/dd" xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-2.0.xsd         http://rice.kuali.org/dd         http://rice.kuali.org/dd/dd.xsd">
+<!--
+ Copyright 2007-2009 The Kuali Foundation
+ 
+ Licensed under the Educational Community License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+ http://www.opensource.org/licenses/ecl2.php
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+
+  <bean id="PaymentMethodMaintenanceDocument" parent="PaymentMethodMaintenanceDocument-parentBean"/>
+  <bean id="PaymentMethodMaintenanceDocument-parentBean" abstract="true" parent="MaintenanceDocumentEntry">
+    <property name="businessObjectClass" value="edu.arizona.kfs.fp.businessobject.PaymentMethod"/>
+    <property name="maintainableClass" value="org.kuali.kfs.sys.document.FinancialSystemMaintainable"/>
+    <property name="maintainableSections">
+      <list>
+        <ref bean="PaymentMethodMaintenanceDocument-Main"/>
+        <ref bean="PaymentMethodMaintenanceDocument-Charts"/>
+      </list>
+    </property>
+    <property name="lockingKeys">
+      <list>
+        <value>paymentMethodCode</value>
+      </list>
+    </property>
+    <property name="documentTypeName" value="PMCD"/>
+    <property name="defaultExistenceChecks">
+      <list>
+        <bean parent="ReferenceDefinition" p:attributeName="bank" p:attributeToHighlightOnFail="bankCode"/>
+        <bean parent="ReferenceDefinition" p:collection="paymentMethodCharts" p:attributeName="chartOfAccounts" p:attributeToHighlightOnFail="chartOfAccountsCode"/>
+        <bean parent="ReferenceDefinition" p:collection="paymentMethodCharts" p:attributeName="feeIncomeChartOfAccounts" p:attributeToHighlightOnFail="feeIncomeChartOfAccountsCode"/>
+        <bean parent="ReferenceDefinition" p:collection="paymentMethodCharts" p:attributeName="feeIncomeAccount" p:attributeToHighlightOnFail="feeIncomeAccountNumber"/>
+        <bean parent="ReferenceDefinition" p:collection="paymentMethodCharts" p:attributeName="feeIncomeFinancialObject" p:attributeToHighlightOnFail="feeIncomeFinancialObjectCode"/>
+        <bean parent="ReferenceDefinition" p:collection="paymentMethodCharts" p:attributeName="feeExpenseFinancialObject" p:attributeToHighlightOnFail="feeExpenseFinancialObjectCode"/>
+        <bean parent="ReferenceDefinition" p:collection="paymentMethodCharts" p:attributeName="clearingChartOfAccounts" p:attributeToHighlightOnFail="clearingChartOfAccountsCode"/>
+        <bean parent="ReferenceDefinition" p:collection="paymentMethodCharts" p:attributeName="clearingAccount" p:attributeToHighlightOnFail="clearingAccountNumber"/>
+        <bean parent="ReferenceDefinition" p:collection="paymentMethodCharts" p:attributeName="clearingFinancialObject" p:attributeToHighlightOnFail="clearingFinancialObjectCode"/>
+      </list>
+    </property>
+    <property name="documentAuthorizerClass" value="org.kuali.kfs.sys.document.authorization.FinancialSystemMaintenanceDocumentAuthorizerBase"/>
+    <property name="businessRulesClass" value="edu.arizona.kfs.fp.document.validation.impl.PaymentMethodRule"/>
+    <!-- 
+    <property name="documentPresentationControllerClass" value=""/>
+    <property name="promptBeforeValidationClass" value="edu.arizona.kfs.fp.document.validation.impl.PaymentMethodPromptBeforeValidation"/>
+     -->
+    <property name="workflowAttributes">
+    	<ref bean="PaymentMethodMaintenanceDocument-workflowAttributes"/>
+    </property>
+    
+  </bean>
+
+<!-- Maintenance Section Definitions -->
+
+
+  <bean id="PaymentMethodMaintenanceDocument-Main" parent="PaymentMethodMaintenanceDocument-Main-parentBean"/>
+  <bean id="PaymentMethodMaintenanceDocument-Main-parentBean" abstract="true" parent="MaintainableSectionDefinition">
+    <property name="id" value="Main"/>
+    <property name="title" value="Payment Method"/>
+    <property name="maintainableItems">
+      <list>
+        <bean parent="MaintainableFieldDefinition" p:name="paymentMethodCode"/>
+        <bean parent="MaintainableFieldDefinition" p:name="paymentMethodName"/>
+        <bean parent="MaintainableFieldDefinition" p:name="bankCode"/>
+        <bean parent="MaintainableFieldDefinition" p:name="assessedFees"/>
+        <bean parent="MaintainableFieldDefinition" p:name="processedUsingPdp"/>
+        <bean parent="MaintainableFieldDefinition" p:name="interdepartmentalPayment"/>
+        <bean parent="MaintainableFieldDefinition" p:name="offsetUsingClearingAccount"/>
+        <!-- 
+        <bean parent="MaintainableFieldDefinition" p:name="active"/>
+         -->
+      </list>
+    </property>
+  </bean>
+  
+  <bean id="PaymentMethodMaintenanceDocument-Charts" parent="PaymentMethodMaintenanceDocument-Charts-parentBean"/>
+  <bean id="PaymentMethodMaintenanceDocument-Charts-parentBean" abstract="true" parent="MaintainableSectionDefinition">
+    <property name="id" value="Charts"/>
+    <property name="title" value="Payment Method Chart Information"/>
+    <property name="maintainableItems">
+      <list>
+        <bean parent="MaintainableCollectionDefinition">
+          <property name="name" value="paymentMethodCharts"/>
+          <property name="businessObjectClass" value="edu.arizona.kfs.fp.businessobject.PaymentMethodChart"/>
+          <property name="summaryTitle" value="Chart/Eff. Date"/>
+          <property name="summaryFields">
+            <list>
+              <bean parent="MaintainableFieldDefinition" p:name="chartOfAccountsCode"/>
+              <bean parent="MaintainableFieldDefinition" p:name="effectiveDate" />
+            </list>
+          </property>
+          <property name="maintainableFields">
+            <list>
+              <bean parent="MaintainableFieldDefinition" p:name="chartOfAccountsCode" p:required="true"/>
+              <bean parent="MaintainableFieldDefinition" p:name="effectiveDate" p:required="true"/>
+              <!-- 
+              <bean parent="MaintainableFieldDefinition" p:name="active"/>
+               -->
+              <!-- 
+	          <bean parent="MaintainableSubSectionHeaderDefinition" p:name="Payment Method Fee Information"/>
+	           -->
+              <bean parent="MaintainableFieldDefinition" p:name="feeIncomeChartOfAccountsCode" p:readOnlyAfterAdd="true" />
+              <bean parent="MaintainableFieldDefinition" p:name="feeIncomeAccountNumber" p:readOnlyAfterAdd="true" />
+              <bean parent="MaintainableFieldDefinition" p:name="feeIncomeFinancialObjectCode" p:readOnlyAfterAdd="true" />
+              <bean parent="MaintainableFieldDefinition" p:name="feeExpenseFinancialObjectCode" p:readOnlyAfterAdd="true" />
+              <bean parent="MaintainableFieldDefinition" p:name="feeAmount" p:readOnlyAfterAdd="true" />
+              <!-- 
+	          <bean parent="MaintainableSubSectionHeaderDefinition" p:name="Clearing Account"/>
+	           -->
+              <bean parent="MaintainableFieldDefinition" p:name="clearingChartOfAccountsCode" p:readOnlyAfterAdd="true" />
+              <bean parent="MaintainableFieldDefinition" p:name="clearingAccountNumber" p:readOnlyAfterAdd="true" />
+              <bean parent="MaintainableFieldDefinition" p:name="clearingFinancialObjectCode" p:readOnlyAfterAdd="true" />
+            </list>
+          </property>
+        </bean>
+      </list>
+    </property>
+  </bean>
+
+    <!-- workflow attributes for routing -->
+    <bean id="PaymentMethodMaintenanceDocument-workflowAttributes" parent="WorkflowAttributes"/>
+    	  	  
+</beans>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/datadictionary/DisbursementVoucherDocument.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/datadictionary/DisbursementVoucherDocument.xml	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/datadictionary/DisbursementVoucherDocument.xml	(revision 10217)
@@ -5,10 +5,28 @@
 xsi:schemaLocation="http://www.springframework.org/schema/beans         
 http://www.springframework.org/schema/beans/spring-beans-2.0.xsd">
 
-  <bean id="DisbursementVoucherDocument" parent="DisbursementVoucherDocument-parentBean">
-    <property name="documentPresentationControllerClass" value="edu.arizona.kfs.fp.document.authorization.DocuwareDisbursementVoucherDocumentPresentationController"/>    
-  </bean>
+    <bean id="DisbursementVoucherDocument" parent="DisbursementVoucherDocument-parentBean">
+		<!--
+			MOD-PA2000-01 Override the document data dictionary entry to add
+			the bank setting in prepareForSave.
+		-->
+		<property name="documentClass" value="edu.arizona.kfs.fp.document.UaDisbursementVoucherDocument" />
+		<property name="baseDocumentClass" value="org.kuali.kfs.fp.document.DisbursementVoucherDocument" />
+
+	    <property name="documentPresentationControllerClass" value="edu.arizona.kfs.fp.document.authorization.DocuwareDisbursementVoucherDocumentPresentationController"/>    
+    </bean>
+	<!--
+		MOD-PA2000-01: Redefine the payment method attribute to use the new control. 
+	 -->
+	<bean id="DisbursementVoucherDocument-disbVchrPaymentMethodCode" parent="DisbursementVoucherDocument-disbVchrPaymentMethodCode-parentBean">
+		<property name="control" ref="PaymentMethodNonInterdepartmentalSelectControl" />
+	</bean>
   
+    <!-- bank code is now optional -->
+    <bean id="DisbursementVoucherDocument-disbVchrBankCode" parent="DisbursementVoucherDocument-disbVchrBankCode-parentBean">
+  		<property name="required" value="false" />
+ 	</bean>
+  
   <!-- workflow attributes for routing -->
   <bean id="DisbursementVoucherDocument-workflowAttributes" parent="DisbursementVoucherDocument-workflowAttributes-parentBean">
   	<property name="routingTypeDefinitions">
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/UaDisbursementVoucherDocument.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/UaDisbursementVoucherDocument.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/UaDisbursementVoucherDocument.java	(revision 10217)
@@ -0,0 +1,145 @@
+/*
+ * Copyright 2009 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.fp.document;
+
+import org.apache.log4j.Logger;
+import org.kuali.kfs.fp.document.DisbursementVoucherConstants;
+import org.kuali.kfs.fp.document.DisbursementVoucherDocument;
+import org.kuali.kfs.sys.KFSConstants;
+import org.kuali.kfs.sys.KFSPropertyConstants;
+import org.kuali.kfs.sys.businessobject.Bank;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntry;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntrySequenceHelper;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntrySourceDetail;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.rice.kew.util.KEWConstants;
+import org.kuali.rice.kns.document.authorization.DocumentAuthorizer;
+import org.kuali.rice.kns.service.DocumentHelperService;
+import org.kuali.rice.kns.service.ParameterConstants.COMPONENT;
+import org.kuali.rice.kns.util.GlobalVariables;
+import org.kuali.rice.kns.util.KNSConstants;
+import org.kuali.rice.kns.util.ObjectUtils;
+
+import edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService;
+
+/**
+ * Document class override to ensure that the bank code is synchronized with the
+ * payment method code.
+ * 
+ * @author jonathan
+ */
+// This annotation is needed to make parameter lookups work properly
+@COMPONENT( component = "DisbursementVoucher" )
+public class UaDisbursementVoucherDocument extends DisbursementVoucherDocument {
+    private static Logger LOG = Logger.getLogger(UaDisbursementVoucherDocument.class);
+
+    public static final String DOCUMENT_TYPE_DV_NON_CHECK = "DVNC";
+    
+    private static UaPaymentMethodGeneralLedgerPendingEntryService paymentMethodGeneralLedgerPendingEntryService;
+
+    @Override
+    public void prepareForSave() {
+        super.prepareForSave();
+
+        // First, only do this if the document is in initiated status - after that, we don't want to 
+        // accidentally reset the bank code
+        if ( KEWConstants.ROUTE_HEADER_INITIATED_CD.equals( getDocumentHeader().getWorkflowDocument().getRouteHeader().getDocRouteStatus() )
+                || KEWConstants.ROUTE_HEADER_SAVED_CD.equals( getDocumentHeader().getWorkflowDocument().getRouteHeader().getDocRouteStatus() ) ) {
+            // need to check whether the user has the permission to edit the bank code
+            // if so, don't synchronize since we can't tell whether the value coming in
+            // was entered by the user or not.        
+            DocumentAuthorizer docAuth = SpringContext.getBean(DocumentHelperService.class).getDocumentAuthorizer(this);
+            if ( !docAuth.isAuthorizedByTemplate(this, 
+                    KFSConstants.ParameterNamespaces.KFS, 
+                    KFSConstants.PermissionTemplate.EDIT_BANK_CODE.name, 
+                    GlobalVariables.getUserSession().getPrincipalId()  ) ) {
+                synchronizeBankCodeWithPaymentMethod();        
+            }
+            refreshReferenceObject( "bank" );
+        }        
+    }
+
+    protected void synchronizeBankCodeWithPaymentMethod() {
+        Bank bank = getPaymentMethodGeneralLedgerPendingEntryService().getBankForPaymentMethod( getDisbVchrPaymentMethodCode() );
+        if ( bank != null ) {
+            setDisbVchrBankCode(bank.getBankCode());
+        } else {
+            // no bank code, no bank needed
+            setDisbVchrBankCode(null);
+            setBank(null);
+        }
+    }
+    
+    /**
+     * Override to change the doc type based on payment method. This is needed to pick up different offset definitions.
+     * 
+     * MOD-PA2000-01
+     * Replacing baseline method completely since has an else clause which needs to be replaced.
+     * 
+     * @param financialDocument submitted accounting document
+     * @param accountingLine accounting line in submitted accounting document
+     * @param explicitEntry explicit GLPE
+     * @see org.kuali.module.financial.rules.FinancialDocumentRuleBase#customizeExplicitGeneralLedgerPendingEntry(org.kuali.rice.kns.document.FinancialDocument,
+     *      org.kuali.rice.kns.bo.AccountingLine, org.kuali.module.gl.bo.GeneralLedgerPendingEntry)
+     */
+    @Override
+    public void customizeExplicitGeneralLedgerPendingEntry(GeneralLedgerPendingEntrySourceDetail accountingLine, GeneralLedgerPendingEntry explicitEntry) {
+
+        /* change document type based on payment method to pick up different offsets */
+        if ( getPaymentMethodGeneralLedgerPendingEntryService().isPaymentMethodProcessedUsingPdp(getDisbVchrPaymentMethodCode())) {
+            explicitEntry.setFinancialDocumentTypeCode(DisbursementVoucherConstants.DOCUMENT_TYPE_CHECKACH);
+        } else { // wire transfer or foreign draft
+            explicitEntry.setFinancialDocumentTypeCode(DOCUMENT_TYPE_DV_NON_CHECK);
+        }
+        if ( LOG.isDebugEnabled() ) {
+            LOG.debug("changed doc type on pending entry " + explicitEntry.getTransactionLedgerEntrySequenceNumber() + " to " + explicitEntry.getFinancialDocumentTypeCode() );
+        }
+    }
+
+    
+    /**
+     * Generates additional document-level GL entries for the DV, depending on the payment method code. 
+     * 
+     * Return true if GLPE's are generated successfully (i.e. there are either 0 GLPE's or 1 GLPE in disbursement voucher document)
+     * 
+     * @param financialDocument submitted financial document
+     * @param sequenceHelper helper class to keep track of GLPE sequence
+     * @return true if GLPE's are generated successfully
+     * @see org.kuali.rice.kns.rule.GenerateGeneralLedgerDocumentPendingEntriesRule#processGenerateDocumentGeneralLedgerPendingEntries(org.kuali.rice.kns.document.FinancialDocument,org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntrySequenceHelper)
+     */
+    @Override
+    public boolean generateDocumentGeneralLedgerPendingEntries(GeneralLedgerPendingEntrySequenceHelper sequenceHelper) {
+        if (getGeneralLedgerPendingEntries() == null || getGeneralLedgerPendingEntries().size() < 2) {
+            LOG.warn("No gl entries for accounting lines.");
+            return true;
+        }
+        // waive any fees only for wire charges when the waiver flag is set
+        boolean feesWaived = DisbursementVoucherConstants.PAYMENT_METHOD_WIRE.equals(getDisbVchrPaymentMethodCode()) 
+                && getDvWireTransfer().isDisbursementVoucherWireTransferFeeWaiverIndicator();
+
+        getPaymentMethodGeneralLedgerPendingEntryService().generatePaymentMethodSpecificDocumentGeneralLedgerPendingEntries(this,getDisbVchrPaymentMethodCode(), getDisbVchrBankCode(),KNSConstants.DOCUMENT_PROPERTY_NAME + "." + KFSPropertyConstants.DISB_VCHR_BANK_CODE, getGeneralLedgerPendingEntry(0), feesWaived, false, sequenceHelper);
+        
+        return true;
+    }
+    
+    protected UaPaymentMethodGeneralLedgerPendingEntryService getPaymentMethodGeneralLedgerPendingEntryService() {
+        if ( paymentMethodGeneralLedgerPendingEntryService == null ) {
+            paymentMethodGeneralLedgerPendingEntryService = SpringContext.getBean(UaPaymentMethodGeneralLedgerPendingEntryService.class);
+        }
+        return paymentMethodGeneralLedgerPendingEntryService;
+    }
+
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/validation/impl/PaymentMethodRule.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/validation/impl/PaymentMethodRule.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/validation/impl/PaymentMethodRule.java	(revision 10217)
@@ -0,0 +1,204 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.fp.document.validation.impl;
+
+import org.apache.commons.lang.StringUtils;
+import org.kuali.kfs.sys.KFSConstants;
+import org.kuali.kfs.sys.document.validation.impl.KfsMaintenanceDocumentRuleBase;
+import org.kuali.rice.kns.bo.PersistableBusinessObject;
+import org.kuali.rice.kns.document.MaintenanceDocument;
+import org.kuali.rice.kns.util.GlobalVariables;
+
+import edu.arizona.kfs.fp.businessobject.PaymentMethod;
+import edu.arizona.kfs.fp.businessobject.PaymentMethodChart;
+
+public class PaymentMethodRule extends KfsMaintenanceDocumentRuleBase {
+
+    protected static final String ERROR_NO_BANK_WHEN_INTERDEPT = "error.document.paymentmethod.no.bank.when.interdept";
+    protected static final String ERROR_NOT_PDP_AND_INTERDEPT = "error.document.paymentmethod.not.pdp.and.interdept";
+    protected static final String ERROR_FLAGREQUIRED = "error.document.paymentmethod.flagrequired";
+    protected static final String WARNING_CLEARING_OBJECT_NOTREQUIRED = "warning.document.paymentmethod.clearing.object.notrequired";
+    protected static final String WARNING_CLEARING_ACCOUNT_NOTREQUIRED = "warning.document.paymentmethod.clearing.account.notrequired";
+    protected static final String WARNING_CLEARING_CHART_NOTREQUIRED = "warning.document.paymentmethod.clearing.chart.notrequired";
+    protected static final String ERROR_CLEARING_OBJECT_REQUIRED = "error.document.paymentmethod.clearing.object.required";
+    protected static final String ERROR_CLEARING_ACCOUNT_REQUIRED = "error.document.paymentmethod.clearing.account.required";
+    protected static final String ERROR_CLEARING_CHART_REQUIRED = "error.document.paymentmethod.clearing.chart.required";
+    protected static final String ERROR_EFFECTIVEDATE_INPAST = "error.document.paymentmethod.effectivedate.inpast";
+    protected static final String WARNING_FEE_AMOUNT_NOTREQUIRED = "warning.document.paymentmethod.fee.amount.notrequired";
+    protected static final String WARNING_FEE_EXPOBJ_NOTREQUIRED = "warning.document.paymentmethod.fee.expobj.notrequired";
+    protected static final String WARNING_FEE_INCOBJ_NOTREQUIRED = "warning.document.paymentmethod.fee.incobj.notrequired";
+    protected static final String WARNING_FEE_ACCOUNT_NOTREQUIRED = "warning.document.paymentmethod.fee.account.notrequired";
+    protected static final String WARNING_FEE_CHART_NOTREQUIRED = "warning.document.paymentmethod.fee.chart.notrequired";
+    protected static final String ERROR_FEE_AMOUNT_REQUIRED = "error.document.paymentmethod.fee.amount.required";
+    protected static final String ERROR_FEE_EXPOBJ_REQUIRED = "error.document.paymentmethod.fee.expobj.required";
+    protected static final String ERROR_FEE_INCOBJ_REQUIRED = "error.document.paymentmethod.fee.incobj.required";
+    protected static final String ERROR_FEE_ACCOUNT_REQUIRED = "error.document.paymentmethod.fee.account.required";
+    protected static final String ERROR_FEE_CHART_REQUIRED = "error.document.paymentmethod.fee.chart.required";
+
+    @Override
+    protected boolean processCustomRouteDocumentBusinessRules(MaintenanceDocument document) {
+        boolean continueRouting = super.processCustomRouteDocumentBusinessRules(document);
+        PaymentMethod paymentMethod = (PaymentMethod)document.getNewMaintainableObject().getBusinessObject();
+        // checks on the main record
+        GlobalVariables.getMessageMap().clearErrorPath();
+        GlobalVariables.getMessageMap().addToErrorPath("document.newMaintainableObject");
+        
+        continueRouting &= sanityCheckFlags( paymentMethod );
+        continueRouting &= checkNeedForBankCode(paymentMethod);
+        
+        // checks on the chart records
+        for ( int i = 0; i < paymentMethod.getPaymentMethodCharts().size(); i++ ) {
+            GlobalVariables.getMessageMap().addToErrorPath("paymentMethodCharts["+i+"]");
+            PaymentMethodChart paymentMethodChart = paymentMethod.getPaymentMethodCharts().get(i);
+            if ( paymentMethodChart.isNewCollectionRecord() ) {
+                continueRouting &= isNewEffectiveDateInFuture( paymentMethod.getPaymentMethodCharts().get(i) );
+                continueRouting &= checkFeeInformation( paymentMethod, paymentMethod.getPaymentMethodCharts().get(i) );
+                continueRouting &= checkClearingAccountInformation( paymentMethod, paymentMethod.getPaymentMethodCharts().get(i) );
+            }
+            
+            GlobalVariables.getMessageMap().removeFromErrorPath("paymentMethodCharts["+i+"]");
+        }
+        GlobalVariables.getMessageMap().removeFromErrorPath("document.newMaintainableObject");
+        
+        return continueRouting;
+    }
+    
+    protected boolean isNewEffectiveDateInFuture( PaymentMethodChart paymentMethodChart ) {        
+        // check if new, if so, they must have a future date
+        if ( paymentMethodChart.getEffectiveDate().before( getDateTimeService().getCurrentDate() ) ) {
+            GlobalVariables.getMessageMap().putError("effectiveDate", ERROR_EFFECTIVEDATE_INPAST, (String[])null);            
+            return false;
+        }
+        return true;
+    }
+    
+    protected boolean checkFeeInformation( PaymentMethod paymentMethod, PaymentMethodChart paymentMethodChart ) {
+        boolean continueRouting = true;
+        if ( paymentMethod.isAssessedFees() ) {
+            if ( StringUtils.isEmpty( paymentMethodChart.getFeeIncomeChartOfAccountsCode() ) ) {
+                GlobalVariables.getMessageMap().putError("feeIncomeChartOfAccountsCode", ERROR_FEE_CHART_REQUIRED, (String[])null);
+                continueRouting = false;
+            }
+            if ( StringUtils.isEmpty( paymentMethodChart.getFeeIncomeAccountNumber() ) ) {
+                GlobalVariables.getMessageMap().putError("feeIncomeAccountNumber", ERROR_FEE_ACCOUNT_REQUIRED, (String[])null);
+                continueRouting = false;
+            }
+            if ( StringUtils.isEmpty( paymentMethodChart.getFeeIncomeFinancialObjectCode() ) ) {
+                GlobalVariables.getMessageMap().putError("feeIncomeFinancialObjectCode", ERROR_FEE_INCOBJ_REQUIRED, (String[])null);
+                continueRouting = false;
+            }
+            if ( StringUtils.isEmpty( paymentMethodChart.getFeeExpenseFinancialObjectCode() ) ) {
+                GlobalVariables.getMessageMap().putError("feeExpenseFinancialObjectCode", ERROR_FEE_EXPOBJ_REQUIRED, (String[])null);
+                continueRouting = false;
+            }
+            if ( StringUtils.isEmpty( paymentMethodChart.getFeeIncomeChartOfAccountsCode() ) ) {
+                GlobalVariables.getMessageMap().putError("feeAmount", ERROR_FEE_AMOUNT_REQUIRED, (String[])null);
+                continueRouting = false;
+            }
+        } else {
+            if ( StringUtils.isNotEmpty( paymentMethodChart.getFeeIncomeChartOfAccountsCode() ) ) {
+                GlobalVariables.getMessageMap().putWarning("feeIncomeChartOfAccountsCode", WARNING_FEE_CHART_NOTREQUIRED, (String[])null);
+            }
+            if ( StringUtils.isNotEmpty( paymentMethodChart.getFeeIncomeAccountNumber() ) ) {
+                GlobalVariables.getMessageMap().putWarning("feeIncomeAccountNumber", WARNING_FEE_ACCOUNT_NOTREQUIRED, (String[])null);
+            }
+            if ( StringUtils.isNotEmpty( paymentMethodChart.getFeeIncomeFinancialObjectCode() ) ) {
+                GlobalVariables.getMessageMap().putWarning("feeIncomeFinancialObjectCode", WARNING_FEE_INCOBJ_NOTREQUIRED, (String[])null);
+            }
+            if ( StringUtils.isNotEmpty( paymentMethodChart.getFeeExpenseFinancialObjectCode() ) ) {
+                GlobalVariables.getMessageMap().putWarning("feeExpenseFinancialObjectCode", WARNING_FEE_EXPOBJ_NOTREQUIRED, (String[])null);
+            }
+            if ( StringUtils.isNotEmpty( paymentMethodChart.getFeeIncomeChartOfAccountsCode() ) ) {
+                GlobalVariables.getMessageMap().putWarning("feeAmount", WARNING_FEE_AMOUNT_NOTREQUIRED, (String[])null);
+            }
+        }        
+        return continueRouting;
+    }
+
+    protected boolean checkClearingAccountInformation( PaymentMethod paymentMethod, PaymentMethodChart paymentMethodChart ) {
+        boolean continueRouting = true;
+        if ( paymentMethod.isOffsetUsingClearingAccount() ) {
+            if ( StringUtils.isEmpty( paymentMethodChart.getClearingChartOfAccountsCode() ) ) {
+                GlobalVariables.getMessageMap().putError("clearingChartOfAccountsCode", ERROR_CLEARING_CHART_REQUIRED, (String[])null);
+                continueRouting = false;
+            }
+            if ( StringUtils.isEmpty( paymentMethodChart.getClearingAccountNumber() ) ) {
+                GlobalVariables.getMessageMap().putError("clearingAccountNumber", ERROR_CLEARING_ACCOUNT_REQUIRED, (String[])null);
+                continueRouting = false;
+            }
+            if ( StringUtils.isEmpty( paymentMethodChart.getClearingFinancialObjectCode() ) ) {
+                GlobalVariables.getMessageMap().putError("clearingFinancialObjectCode", ERROR_CLEARING_OBJECT_REQUIRED, (String[])null);
+                continueRouting = false;
+            }
+        } else {
+            if ( StringUtils.isNotEmpty( paymentMethodChart.getClearingChartOfAccountsCode() ) ) {
+                GlobalVariables.getMessageMap().putWarning("clearingChartOfAccountsCode", WARNING_CLEARING_CHART_NOTREQUIRED, (String[])null);
+            }
+            if ( StringUtils.isNotEmpty( paymentMethodChart.getClearingAccountNumber() ) ) {
+                GlobalVariables.getMessageMap().putWarning("clearingAccountNumber", WARNING_CLEARING_ACCOUNT_NOTREQUIRED, (String[])null);
+            }
+            if ( StringUtils.isNotEmpty( paymentMethodChart.getClearingFinancialObjectCode() ) ) {
+                GlobalVariables.getMessageMap().putWarning("clearingFinancialObjectCode", WARNING_CLEARING_OBJECT_NOTREQUIRED, (String[])null);
+            }
+        }        
+        return continueRouting;
+    }
+    
+    @Override
+    public boolean processCustomAddCollectionLineBusinessRules(MaintenanceDocument document, String collectionName, PersistableBusinessObject line) {
+        boolean continueAddingLine = true;
+        GlobalVariables.getMessageMap().clearErrorPath();
+        GlobalVariables.getMessageMap().addToErrorPath("document.newMaintainableObject");
+        if ( line instanceof PaymentMethodChart ) {
+            GlobalVariables.getMessageMap().addToErrorPath(KFSConstants.MAINTENANCE_ADD_PREFIX + collectionName );
+            
+            continueAddingLine &= isNewEffectiveDateInFuture( ((PaymentMethodChart)line) );
+            continueAddingLine &= checkFeeInformation( (PaymentMethod)document.getNewMaintainableObject().getBusinessObject(), (PaymentMethodChart)line );
+            continueAddingLine &= checkClearingAccountInformation( (PaymentMethod)document.getNewMaintainableObject().getBusinessObject(), (PaymentMethodChart)line );
+            
+            GlobalVariables.getMessageMap().removeFromErrorPath(KFSConstants.MAINTENANCE_ADD_PREFIX + collectionName );
+        }
+        GlobalVariables.getMessageMap().removeFromErrorPath("document.newMaintainableObject");
+        return continueAddingLine;
+    }
+    
+    protected boolean sanityCheckFlags( PaymentMethod paymentMethod ) {
+        // ensure at least one of the following flags is set
+        if ( !paymentMethod.isProcessedUsingPdp() 
+                && !paymentMethod.isInterdepartmentalPayment()
+                && !paymentMethod.isOffsetUsingClearingAccount() ) {
+            GlobalVariables.getMessageMap().putError("processedUsingPdp",ERROR_FLAGREQUIRED,
+                    getDdService().getAttributeLabel(PaymentMethod.class, "processedUsingPdp"),
+                    getDdService().getAttributeLabel(PaymentMethod.class, "interdepartmentalPayment"),
+                    getDdService().getAttributeLabel(PaymentMethod.class, "offsetUsingClearingAccount"));
+            return false;
+        // the PDP and interdepartmental flags can not both be set
+        } else if ( paymentMethod.isProcessedUsingPdp() && paymentMethod.isInterdepartmentalPayment() ) {
+            GlobalVariables.getMessageMap().putError("processedUsingPdp",ERROR_NOT_PDP_AND_INTERDEPT,(String[])null);
+            return false;
+        }
+        return true;
+    }
+    
+    protected boolean checkNeedForBankCode( PaymentMethod paymentMethod ) {
+        // when interdepartmental, it doesn't make sense to have a bank code
+        if ( paymentMethod.isInterdepartmentalPayment() && StringUtils.isNotBlank(paymentMethod.getBankCode()) ) {
+            GlobalVariables.getMessageMap().putError("bankCode",ERROR_NO_BANK_WHEN_INTERDEPT,(String[])null);
+            return false;
+        }
+        return true;
+    }
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/workflow/PaymentMethodMaintenanceDocument.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/workflow/PaymentMethodMaintenanceDocument.xml	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/workflow/PaymentMethodMaintenanceDocument.xml	(revision 10217)
@@ -0,0 +1,26 @@
+<?xml version='1.0' encoding='UTF-8'?> 
+<!--
+ Copyright 2008-2009 The Kuali Foundation
+ 
+ Licensed under the Educational Community License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+ http://www.opensource.org/licenses/ecl2.php
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<data xmlns="ns:workflow" xmlns:fo="http://www.w3.org/1999/XSL/Format" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
+  <documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
+    <documentType>
+      <name>PMCD</name>
+      <label>Payment Method</label>
+      <parent>FPSM</parent>
+      <active>true</active>
+    </documentType>
+  </documentTypes>
+</data>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/workflow/DisbursementVoucherNonCheck.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/workflow/DisbursementVoucherNonCheck.xml	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/workflow/DisbursementVoucherNonCheck.xml	(revision 10217)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
+  <documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
+    <documentType>
+      <name>DVNC</name>
+      <parent>FSLO</parent>
+      <label>Disbursement Voucher - Non-Check</label>
+      <active>true</active>
+      <routingVersion>2</routingVersion>
+      <routePaths />
+    </documentType>
+  </documentTypes>
+</data>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/web/struts/DisbursementVoucherForm.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/web/struts/DisbursementVoucherForm.java	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/document/web/struts/DisbursementVoucherForm.java	(revision 10217)
@@ -1,46 +1,55 @@
-/*
- * Copyright 2009 The Kuali Foundation.
- * 
- * Licensed under the Educational Community License, Version 1.0 (the "License");
- * you may not use this file except in compliance with the License.
- * You may obtain a copy of the License at
- * 
- * http://www.opensource.org/licenses/ecl1.php
- * 
- * Unless required by applicable law or agreed to in writing, software
- * distributed under the License is distributed on an "AS IS" BASIS,
- * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- * See the License for the specific language governing permissions and
- * limitations under the License.
- */
-package edu.arizona.kfs.fp.document.web.struts;
-
-import org.kuali.kfs.fp.document.DisbursementVoucherDocument;
-import org.kuali.kfs.sys.context.SpringContext;
-import org.kuali.rice.kns.service.ParameterService;
-import org.kuali.rice.kns.web.format.SimpleBooleanFormatter;
-
-import edu.arizona.kfs.sys.AZKFSConstants;
-
-public class DisbursementVoucherForm extends org.kuali.kfs.fp.document.web.struts.DisbursementVoucherForm {
-    protected static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(DisbursementVoucherForm.class);
-
-    private String docuwareTableParam;
-
-    /**
-     * Constructs a DisbursementVoucherForm.java.
-     */
-    public DisbursementVoucherForm() {
-        super();
-    }
-
-    /**
-     * Gets the docuwareTableParam attribute.
-     *   
-     * @return Returns the docuwareTableParam.
-     */
-    public String getDocuwareTableParam() {
-        return SpringContext.getBean(ParameterService.class).getParameterValue(DisbursementVoucherDocument.class, AZKFSConstants.DOCUWARE_TABLE_PARAMETER);
-    }
-
-}
+/*
+ * Copyright 2009 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.fp.document.web.struts;
+
+import org.kuali.kfs.fp.document.DisbursementVoucherDocument;
+import org.kuali.kfs.module.purap.PurapConstants;
+import org.kuali.kfs.module.purap.document.PaymentRequestDocument;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.rice.kns.service.DataDictionaryService;
+import org.kuali.rice.kns.service.ParameterService;
+import org.kuali.rice.kns.web.format.SimpleBooleanFormatter;
+
+import edu.arizona.kfs.sys.AZKFSConstants;
+
+public class DisbursementVoucherForm extends org.kuali.kfs.fp.document.web.struts.DisbursementVoucherForm {
+    protected static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(DisbursementVoucherForm.class);
+
+    private String docuwareTableParam;
+
+    /**
+     * Constructs a DisbursementVoucherForm.java.
+     */
+    public DisbursementVoucherForm() {
+        super();
+        try {
+            setDocument( (DisbursementVoucherDocument)SpringContext.getBean(DataDictionaryService.class).getDocumentClassByTypeName(getDefaultDocumentTypeName()).newInstance() );
+        }
+        catch (Exception ex) {
+            ex.printStackTrace();
+        }
+    }
+
+    /**
+     * Gets the docuwareTableParam attribute.
+     *   
+     * @return Returns the docuwareTableParam.
+     */
+    public String getDocuwareTableParam() {
+        return SpringContext.getBean(ParameterService.class).getParameterValue(DisbursementVoucherDocument.class, AZKFSConstants.DOCUWARE_TABLE_PARAMETER);
+    }
+
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/dwr-fp.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/dwr-fp.xml	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/fp/dwr-fp.xml	(revision 10217)
@@ -0,0 +1,16 @@
+<!DOCTYPE dwr PUBLIC "-//GetAhead Limited//DTD Direct Web Remoting 1.0//EN" "http://www.getahead.ltd.uk/dwr/dwr10.dtd">
+
+<dwr>
+
+	<init>
+		<creator id="spring"
+			class="org.kuali.rice.kns.web.servlet.dwr.GlobalResourceDelegatingSpringCreator" />
+	</init>
+	<allow>
+		<create creator="spring" javascript="UaPaymentMethodGeneralLedgerPendingEntryService">
+			<param name="beanName" value="uaPaymentMethodGeneralLedgerPendingEntryService" />
+			<include method="getBankForPaymentMethod" />
+		</create>
+	</allow>
+
+</dwr>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/service/impl/UaElectronicInvoiceHelperServiceImpl.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/service/impl/UaElectronicInvoiceHelperServiceImpl.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/service/impl/UaElectronicInvoiceHelperServiceImpl.java	(revision 10217)
@@ -0,0 +1,223 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.module.purap.service.impl;
+
+import java.util.HashMap;
+
+import org.apache.log4j.Logger;
+import org.kuali.kfs.module.purap.PurapConstants;
+import org.kuali.kfs.module.purap.businessobject.ElectronicInvoiceRejectReason;
+import org.kuali.kfs.module.purap.document.PaymentRequestDocument;
+import org.kuali.kfs.module.purap.document.PurchaseOrderDocument;
+import org.kuali.kfs.module.purap.document.RequisitionDocument;
+import org.kuali.kfs.module.purap.document.service.AccountsPayableService;
+import org.kuali.kfs.module.purap.document.service.PaymentRequestService;
+import org.kuali.kfs.module.purap.document.service.RequisitionService;
+import org.kuali.kfs.module.purap.document.validation.event.AttributedCalculateAccountsPayableEvent;
+import org.kuali.kfs.module.purap.document.validation.event.AttributedPaymentRequestForEInvoiceEvent;
+import org.kuali.kfs.module.purap.service.impl.ElectronicInvoiceHelperServiceImpl;
+import org.kuali.kfs.module.purap.service.impl.ElectronicInvoiceOrderHolder;
+import org.kuali.kfs.module.purap.util.ExpiredOrClosedAccountEntry;
+import org.kuali.kfs.sys.businessobject.Bank;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.kfs.sys.service.BankService;
+import org.kuali.rice.kew.exception.WorkflowException;
+import org.kuali.rice.kim.bo.Person;
+import org.kuali.rice.kim.service.PersonService;
+import org.kuali.rice.kns.exception.ValidationException;
+import org.kuali.rice.kns.service.DocumentService;
+import org.kuali.rice.kns.service.KualiRuleService;
+import org.kuali.rice.kns.util.GlobalVariables;
+import org.kuali.rice.kns.util.KualiDecimal;
+
+import edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService;
+import edu.arizona.kfs.module.purap.businessobject.UaElectronicInvoiceDetailRequestHeader;
+import edu.arizona.kfs.module.purap.document.UaPaymentRequestDocument;
+
+public class UaElectronicInvoiceHelperServiceImpl extends ElectronicInvoiceHelperServiceImpl {
+    protected static final String DEFAULT_EINVOICE_PAYMENT_METHOD_CODE = "H";
+    private static final Logger LOG = Logger.getLogger(ElectronicInvoiceHelperServiceImpl.class);
+
+    @Override
+    protected PaymentRequestDocument createPaymentRequest(ElectronicInvoiceOrderHolder orderHolder) {
+        
+        if (LOG.isInfoEnabled()){
+            LOG.info("Creating Payment Request document");
+        }
+        
+        GlobalVariables.getMessageList().clear();
+        
+        validateInvoiceOrderValidForPREQCreation(orderHolder);
+        
+        if (LOG.isInfoEnabled()){
+            if (orderHolder.isInvoiceRejected()){
+                LOG.info("Not possible to convert einvoice details into payment request");
+            }else{
+                LOG.info("Payment request document creation validation succeeded");
+            }
+        }
+        
+        if (orderHolder.isInvoiceRejected()){
+            return null;
+        }
+        
+        PaymentRequestDocument preqDoc = null;
+        try {
+            preqDoc = (PaymentRequestDocument) SpringContext.getBean(DocumentService.class).getNewDocument("PREQ");
+        } catch (WorkflowException e) {
+            String extraDescription = "Error=" + e.getMessage();
+            ElectronicInvoiceRejectReason rejectReason = matchingService.createRejectReason(PurapConstants.ElectronicInvoice.PREQ_WORKLOW_EXCEPTION,          
+                                                                                            extraDescription, 
+                                                                                            orderHolder.getFileName());
+            orderHolder.addInvoiceOrderRejectReason(rejectReason);
+            LOG.error("Error creating Payment request document - " + e.getMessage());
+            return null;
+        }
+        
+        PurchaseOrderDocument poDoc = orderHolder.getPurchaseOrderDocument();
+        if (poDoc == null){
+            throw new RuntimeException("Purchase Order document (POId=" + orderHolder.getInvoicePurchaseOrderID() + ") does not exist in the system");
+        }
+        
+        preqDoc.getDocumentHeader().setDocumentDescription(generatePREQDocumentDescription(poDoc));        
+        preqDoc.setStatusCode(PurapConstants.PaymentRequestStatuses.IN_PROCESS);
+        preqDoc.setInvoiceDate(orderHolder.getInvoiceDate());
+        preqDoc.setInvoiceNumber(orderHolder.getInvoiceNumber());
+        preqDoc.setVendorInvoiceAmount(new KualiDecimal(orderHolder.getInvoiceNetAmount()));
+        preqDoc.setAccountsPayableProcessorIdentifier("E-Invoice");
+        preqDoc.setVendorCustomerNumber(orderHolder.getCustomerNumber());
+        preqDoc.setPaymentRequestElectronicInvoiceIndicator(true);
+        
+        if (orderHolder.getAccountsPayablePurchasingDocumentLinkIdentifier() != null){
+            preqDoc.setAccountsPayablePurchasingDocumentLinkIdentifier(orderHolder.getAccountsPayablePurchasingDocumentLinkIdentifier());
+        }
+        
+        // KITT-592 - updated to copy the payment method code from the holder classes
+        // and default the bank in based on that
+        boolean hasPaymentMethodCode = false;
+        if ( preqDoc instanceof UaPaymentRequestDocument ) {
+            if ( orderHolder.getElectronicInvoice().getInvoiceDetailRequestHeader() instanceof UaElectronicInvoiceDetailRequestHeader ) {
+                String paymentMethodCode = ((UaElectronicInvoiceDetailRequestHeader)orderHolder.getElectronicInvoice().getInvoiceDetailRequestHeader()).getPaymentMethodCode();
+                if ( paymentMethodCode == null ) {
+                    paymentMethodCode = DEFAULT_EINVOICE_PAYMENT_METHOD_CODE;
+                }
+                ((UaPaymentRequestDocument)preqDoc).setPaymentMethodCode(paymentMethodCode);
+                hasPaymentMethodCode = true;
+            }
+        }
+        Bank defaultBank = null;
+        if ( hasPaymentMethodCode ) {
+            defaultBank = SpringContext.getBean(UaPaymentMethodGeneralLedgerPendingEntryService.class).getBankForPaymentMethod( ((UaPaymentRequestDocument)preqDoc).getPaymentMethodCode() );
+        } else { // default to baseline behavior - extended documents not in use
+            //Copied from PaymentRequestServiceImpl.populatePaymentRequest()
+            //set bank code to default bank code in the system parameter
+            defaultBank = SpringContext.getBean(BankService.class).getDefaultBankByDocType(PaymentRequestDocument.class);
+        }
+        if (defaultBank != null) {
+            preqDoc.setBankCode(defaultBank.getBankCode());
+            preqDoc.setBank(defaultBank);
+        }
+        
+        RequisitionDocument reqDoc = SpringContext.getBean(RequisitionService.class).getRequisitionById(poDoc.getRequisitionIdentifier());
+        String reqDocInitiator = reqDoc.getDocumentHeader().getWorkflowDocument().getInitiatorPrincipalId();
+        try {
+            Person user = SpringContext.getBean(PersonService.class).getPerson(reqDocInitiator);
+            preqDoc.setProcessingCampusCode(user.getCampusCode());
+        }catch(Exception e){
+            String extraDescription = "Error setting processing campus code - " + e.getMessage();
+            ElectronicInvoiceRejectReason rejectReason = matchingService.createRejectReason(PurapConstants.ElectronicInvoice.PREQ_ROUTING_VALIDATION_ERROR, extraDescription, orderHolder.getFileName());
+            orderHolder.addInvoiceOrderRejectReason(rejectReason);
+            return null;
+        }
+        
+        HashMap<String, ExpiredOrClosedAccountEntry> expiredOrClosedAccountList = SpringContext.getBean(AccountsPayableService.class).expiredOrClosedAccountsList(poDoc);
+        if (expiredOrClosedAccountList == null){
+            expiredOrClosedAccountList = new HashMap<String, ExpiredOrClosedAccountEntry>(0);
+        }
+        
+        if (LOG.isInfoEnabled()){
+             LOG.info(expiredOrClosedAccountList.size() + " accounts have been found as Expired or Closed");
+        }
+        
+        preqDoc.populatePaymentRequestFromPurchaseOrder(orderHolder.getPurchaseOrderDocument(),expiredOrClosedAccountList);
+        
+        populateItemDetails(preqDoc,orderHolder);
+        
+        /*
+         * Validate totals,paydate
+         */
+        //PaymentRequestDocumentRule.processCalculateAccountsPayableBusinessRules
+        SpringContext.getBean(KualiRuleService.class).applyRules(new AttributedCalculateAccountsPayableEvent(preqDoc));
+        
+        SpringContext.getBean(PaymentRequestService.class).calculatePaymentRequest(preqDoc,true);
+        
+        processItemsForDiscount(preqDoc,orderHolder);
+        
+        if (orderHolder.isInvoiceRejected()){
+            return null;
+        }
+        
+        SpringContext.getBean(PaymentRequestService.class).calculatePaymentRequest(preqDoc,false);
+        /*
+         * PaymentRequestReview 
+         */
+        //PaymentRequestDocumentRule.processRouteDocumentBusinessRules
+        SpringContext.getBean(KualiRuleService.class).applyRules(new AttributedPaymentRequestForEInvoiceEvent(preqDoc));
+        
+        if(GlobalVariables.getMessageMap().hasErrors()){
+            if (LOG.isInfoEnabled()){
+                LOG.info("***************Error in rules processing - " + GlobalVariables.getMessageMap());
+            }
+            ElectronicInvoiceRejectReason rejectReason = matchingService.createRejectReason(PurapConstants.ElectronicInvoice.PREQ_ROUTING_VALIDATION_ERROR, GlobalVariables.getMessageMap().toString(), orderHolder.getFileName());
+            orderHolder.addInvoiceOrderRejectReason(rejectReason);
+            return null;
+        }
+        
+        if(GlobalVariables.getMessageList().size() > 0){
+            if (LOG.isInfoEnabled()){
+                LOG.info("Payment request contains " + GlobalVariables.getMessageList().size() + " warning message(s)");
+                for (int i = 0; i < GlobalVariables.getMessageList().size(); i++) {
+                    LOG.info("Warning " + i + "  - " +GlobalVariables.getMessageList().get(i));
+                }
+            }
+        }
+        
+        addShipToNotes(preqDoc,orderHolder);
+        
+        String routingAnnotation = null;
+        if (!orderHolder.isRejectDocumentHolder()){
+            routingAnnotation = "Routed by electronic invoice batch job";
+        }
+        
+        try {
+            SpringContext.getBean(DocumentService.class).routeDocument(preqDoc,routingAnnotation, null);
+        }
+        catch (WorkflowException e) {
+            e.printStackTrace();
+            ElectronicInvoiceRejectReason rejectReason = matchingService.createRejectReason(PurapConstants.ElectronicInvoice.PREQ_ROUTING_FAILURE, e.getMessage(), orderHolder.getFileName());
+            orderHolder.addInvoiceOrderRejectReason(rejectReason);
+            return null;
+        }catch(ValidationException e){
+            String extraDescription = GlobalVariables.getMessageMap().toString();
+            ElectronicInvoiceRejectReason rejectReason = matchingService.createRejectReason(PurapConstants.ElectronicInvoice.PREQ_ROUTING_VALIDATION_ERROR, extraDescription, orderHolder.getFileName());
+            orderHolder.addInvoiceOrderRejectReason(rejectReason);
+            return null;
+        }
+        
+        return preqDoc;
+    }
+    
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/batch/electronicInvoiceDigesterRules.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/batch/electronicInvoiceDigesterRules.xml	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/batch/electronicInvoiceDigesterRules.xml	(revision 10217)
@@ -0,0 +1,662 @@
+<?xml version="1.0"?>
+<!--
+ Copyright 2007-2008 The Kuali Foundation
+ 
+ Licensed under the Educational Community License, Version 2.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+ http://www.opensource.org/licenses/ecl2.php
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<!DOCTYPE digester-rules 
+    PUBLIC "-//Jakarta Apache //DTD digester-rules XML V1.0//EN" 
+    "http://jakarta.apache.org/commons/digester/dtds/digester-rules.dtd">
+
+<digester-rules>
+
+    <pattern value="cXML">
+        <object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoice" />
+		
+		<set-properties-rule>
+      		<alias attr-name="version" prop-name="version" />
+      		<alias attr-name="timestamp" prop-name="timestamp" />
+      		<alias attr-name="payloadID" prop-name="payloadID" />
+      		<alias attr-name="xml:lang" prop-name="locale" />
+	    </set-properties-rule>
+	   
+	   <!-- HEADER -->
+	   <pattern value="Header">
+		    <object-create-rule classname="org.kuali.kfs.module.purap.util.cxml.CxmlHeader" />
+		    
+		    <!-- FROM -->
+		    <set-properties-rule pattern="From/Credential">
+			   <alias attr-name="domain" prop-name="fromDomain" />
+		    </set-properties-rule>
+		    
+		    <call-method-rule pattern="From/Credential/Identity" methodname="setFromIdentity" paramcount="0" />
+		    <call-method-rule pattern="From/Credential/SharedSecret" methodname="setFromSharedSecret" paramcount="0" />
+		    
+		    <!-- TO -->
+		    <set-properties-rule pattern="To/Credential">
+			   <alias attr-name="domain" prop-name="toDomain" />
+		    </set-properties-rule>
+		    
+		    <call-method-rule pattern="To/Credential/Identity" methodname="setToIdentity" paramcount="0" />
+ 		    <call-method-rule pattern="To/Credential/SharedSecret" methodname="setToSharedSecret" paramcount="0" />
+ 		    
+		   <!-- SENDER -->
+		   <set-properties-rule pattern="Sender/Credential">
+			   <alias attr-name="domain" prop-name="senderDomain" />
+		   </set-properties-rule>
+		    
+		   <call-method-rule pattern="Sender/Credential/Identity" methodname="setSenderIdentity" paramcount="0" />
+		   <call-method-rule pattern="Sender/Credential/SharedSecret" methodname="setSenderSharedSecret" paramcount="0" />
+		   <call-method-rule pattern="Sender/UserAgent" methodname="setSenderUserAgent" paramcount="0" />
+		    
+		   <set-next-rule methodname="setCxmlHeader" />
+		    
+	   </pattern> <!-- Header -->
+	   
+	   <!-- REQUEST -->
+	   <pattern value="Request">
+	   		<set-properties-rule>
+			   <alias attr-name="deploymentMode" prop-name="deploymentMode"/>
+		   </set-properties-rule>
+	   </pattern>
+	   
+	   <pattern value="Request/InvoiceDetailRequest/InvoiceDetailRequestHeader">
+	   
+		   <object-create-rule classname="edu.arizona.kfs.module.purap.businessobject.UaElectronicInvoiceDetailRequestHeader" />
+		   
+	   		<set-properties-rule>
+	      		<alias attr-name="invoiceID" prop-name="invoiceId"/>
+	      		<alias attr-name="purpose" prop-name="purpose"/>
+	      		<alias attr-name="operation" prop-name="operation"/>
+	      		<alias attr-name="invoiceDate" prop-name="invoiceDateString"/>
+	      		<alias attr-name="isInformationOnly" prop-name="buyerInformationOnlyIndicator"/>
+	      		<alias attr-name="paymentMethodCode" prop-name="paymentMethodCode"/>
+		    </set-properties-rule>
+		    
+		    <pattern value="InvoiceDetailHeaderIndicator">
+			    <set-properties-rule>
+		      		<alias attr-name="isHeaderInvoice" prop-name="headerInvoiceInd"/>
+			    </set-properties-rule>
+		    </pattern>
+		    
+		    <pattern value="InvoiceDetailLineIndicator">
+			    <set-properties-rule>
+				    <alias attr-name="isTaxInLine" prop-name="taxInfoProvidedIndicator"/>
+		      		<alias attr-name="isSpecialHandlingInLine" prop-name="specialHandlingInfoProvidedIndicator"/>
+		      		<alias attr-name="isShippingInLine" prop-name="shippingInfoProvidedIndicator"/>
+		      		<alias attr-name="isDiscountInLine" prop-name="discountInfoProvidedIndicator"/>
+		      		<alias attr-name="isAccountingInLine" prop-name="accountingInfoProvidedIndicator"/>
+			    </set-properties-rule>
+		    </pattern>
+		    
+	   		<!-- INVOICE PARTNER -->
+	   		<pattern value="InvoicePartner">
+	   			<set-properties-rule pattern="IdReference">
+		      		<alias attr-name="domain" prop-name="idReferenceDomain" />
+		      		<alias attr-name="identifier" prop-name="idReferenceIdentifier" />
+	      		</set-properties-rule>
+
+	      		<call-method-rule pattern="IdReference/Creator" methodname="setIdReferenceCreator" paramcount="0" />
+	      		<call-method-rule pattern="IdReference/Description" methodname="setIdReferenceDescription" paramcount="0" />
+	      		
+	      		<pattern value="Contact">
+
+		      		<object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoiceContact" />
+
+		      		<set-properties-rule>
+			      		<alias attr-name="role" prop-name="role" />
+			      		<alias attr-name="addressID" prop-name="addressID" />
+		      		</set-properties-rule>
+
+					<call-method-rule pattern="Name" methodname="setName" paramcount="0" />			      		
+					
+	      			<pattern value="PostalAddress">
+	      			
+	      				<object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoicePostalAddress" />
+	      				
+	      				<set-properties-rule>
+			      			<alias attr-name="name" prop-name="type" />
+		      			</set-properties-rule>
+		      		
+	      				<call-method-rule pattern="DeliverTo" methodname="addName" paramcount="0" />
+	      				
+	      				<!-- Have to find a better way of handling this element -->
+	      				<call-method-rule pattern="Street" methodname="addStreet" paramcount="0" />
+	      				
+	      				<call-method-rule pattern="City" methodname="setCityName" paramcount="0" />
+	      				<call-method-rule pattern="State" methodname="setStateCode" paramcount="0" />
+	      				<call-method-rule pattern="PostalCode" methodname="setPostalCode" paramcount="0" />
+	      				<call-method-rule pattern="Country" methodname="setCountryName" paramcount="0" />
+	      				
+	      				<pattern value="Country">
+	      					<set-properties-rule>
+				      			<alias attr-name="isoCountryCode" prop-name="countryCode" />
+			      			</set-properties-rule>
+	      				</pattern>
+	      				
+	      				<set-next-rule methodname="addPostalAddress" />
+	      				
+	      			</pattern> <!-- PostalAddress -->
+	      			
+	      			<pattern value="Email">
+	                    <call-method-rule methodname="addEmailAddress" paramcount="2" />
+	                    <call-param-rule attrname="name" paramnumber="0"/>
+	                    <call-param-rule paramnumber="1"/>
+                	</pattern>
+                
+                	<pattern value="Phone">
+	                    <call-method-rule methodname="addPhoneNumber" paramcount="4" />
+	                    <call-param-rule attrname="name" paramnumber="0"/>
+	                    <call-param-rule pattern="TelephoneNumber/CountryCode" paramnumber="1"/>
+	                    <call-param-rule pattern="TelephoneNumber/AreaOrCityCode" paramnumber="2"/>
+	                    <call-param-rule pattern="TelephoneNumber/Number" paramnumber="3"/>
+                	</pattern>
+                	
+                    <pattern value="Fax">
+	                    <call-method-rule methodname="addFaxNumber" paramcount="4" />
+	                    <call-param-rule attrname="name" paramnumber="0"/>
+	                    <call-param-rule pattern="TelephoneNumber/CountryCode" paramnumber="1"/>
+	                    <call-param-rule pattern="TelephoneNumber/AreaOrCityCode" paramnumber="2"/>
+	                    <call-param-rule pattern="TelephoneNumber/Number" paramnumber="3"/>
+                	</pattern>
+                    
+                    <call-method-rule pattern="URL" methodname="addWebAddress" paramcount="0" />
+                    
+	      			<set-next-rule methodname="addInvoicePartnerContact" />
+	      			
+	      		</pattern> <!-- InvoicePartner/Contacts -->
+	      		
+	   		</pattern> <!-- InvoicePartner -->
+	   		
+	   		<!-- SHIPPING DETAILS -->
+	   		<pattern value="InvoiceDetailShipping">
+	   			<set-properties-rule>
+	      			<alias attr-name="shippingDate" prop-name="shippingDateString" />
+      			</set-properties-rule>
+      			
+      			<!-- CONTACTS -->
+	      		<pattern value="Contact">
+      				
+      				<object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoiceContact" />
+      				
+      				<set-properties-rule>
+			      		<alias attr-name="role" prop-name="role" />
+			      		<alias attr-name="addressID" prop-name="addressID" />
+		      		</set-properties-rule>
+
+					<call-method-rule pattern="Name" methodname="setName" paramcount="0" />			      		
+					
+	      			<pattern value="PostalAddress">
+	      			
+	      				<object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoicePostalAddress" />
+	      				
+	      				<set-properties-rule>
+			      			<alias attr-name="name" prop-name="type" />
+		      			</set-properties-rule>
+		      		
+	      				<call-method-rule pattern="DeliverTo" methodname="addName" paramcount="0" />
+	      				
+	      				<!-- FIXME: Have to find a better way of handling this element -->
+	      				<call-method-rule pattern="Street" methodname="addStreet" paramcount="0" />
+	      				
+	      				
+	      				<call-method-rule pattern="City" methodname="setCityName" paramcount="0" />
+	      				<call-method-rule pattern="State" methodname="setStateCode" paramcount="0" />
+	      				<call-method-rule pattern="PostalCode" methodname="setPostalCode" paramcount="0" />
+	      				<call-method-rule pattern="Country" methodname="setCountryName" paramcount="0" />
+	      				
+	      				<pattern value="Country">
+	      					<set-properties-rule>
+				      			<alias attr-name="isoCountryCode" prop-name="countryCode" />
+			      			</set-properties-rule>
+	      				</pattern>
+	      				
+	      				<set-next-rule methodname="addPostalAddress" />
+	      				
+	      			</pattern> <!-- PostalAddress -->
+	      			
+	      			<pattern value="Email">
+	                    <call-method-rule methodname="addEmailAddress" paramcount="2" />
+	                    <call-param-rule attrname="name" paramnumber="0"/>
+	                    <call-param-rule paramnumber="1"/>
+                	</pattern>
+                	
+                	<pattern value="Phone">
+	                    <call-method-rule methodname="addPhoneNumber" paramcount="4" />
+	                    <call-param-rule attrname="name" paramnumber="0"/>
+	                    <call-param-rule pattern="TelephoneNumber/CountryCode" paramnumber="1"/>
+	                    <call-param-rule pattern="TelephoneNumber/AreaOrCityCode" paramnumber="2"/>
+	                    <call-param-rule pattern="TelephoneNumber/Number" paramnumber="3"/>
+                	</pattern>
+                	
+                    <pattern value="Fax">
+	                    <call-method-rule methodname="addFaxNumber" paramcount="4" />
+	                    <call-param-rule attrname="name" paramnumber="0"/>
+	                    <call-param-rule pattern="TelephoneNumber/CountryCode" paramnumber="1"/>
+	                    <call-param-rule pattern="TelephoneNumber/AreaOrCityCode" paramnumber="2"/>
+	                    <call-param-rule pattern="TelephoneNumber/Number" paramnumber="3"/>
+                	</pattern>
+                    
+                    <call-method-rule pattern="URL" methodname="addWebAddress" paramcount="0" />
+                    
+	      			<set-next-rule methodname="addInvoiceShippingContacts" />
+	      			
+      			</pattern> <!-- InvoiceDetailShipping/Contact -->
+      			
+      			<!-- INFO: Skipping CarrierIdentifier,ShipmentIdentifier,DocumentReference since these are not handled currently -->
+      			
+	   		</pattern> <!-- InvoiceDetailShipping -->
+	   		
+	   		<!-- The next two elements were not used currently -->
+	   		<set-properties-rule pattern="InvoiceDetailPaymentTerm">
+   				<alias attr-name="payInNumberOfDays" prop-name="payInNumberOfDays" paramtype="java.lang.Integer"/>
+   				<alias attr-name="percentageRate" prop-name="percentageRate"/>
+   			</set-properties-rule>
+   			
+	   		<set-properties-rule pattern="PaymentTerm">
+   				<alias attr-name="payInNumberOfDays" prop-name="payInNumberOfDays" paramtype="java.lang.Integer"/>
+   			</set-properties-rule>
+
+			<!-- INFO: Comments element not handled currently -->    			
+			
+	   		<pattern value="Extrinsic">
+	   			<object-create-rule classname="org.kuali.kfs.module.purap.util.cxml.CxmlExtrinsic" />
+	   			
+	   			<call-method-rule methodname="setValue" paramcount="0" />
+    			<set-properties-rule>
+    				<alias attr-name="name" prop-name="name" />
+    			</set-properties-rule>
+    			
+	   			<set-next-rule methodname="addExtrinsic" />
+	   		</pattern> <!--  Extrinsic -->
+	   		
+	   		<set-next-rule methodname="setInvoiceDetailRequestHeader" />
+		   
+	   </pattern> <!--  Request -->
+		   
+	   <!-- INVOICE ORDER -->
+	   <pattern value="Request/InvoiceDetailRequest/InvoiceDetailOrder">
+	   
+		   <object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoiceOrder" />
+		   
+		   <set-properties-rule pattern="InvoiceDetailOrderInfo/OrderReference">
+      			<alias attr-name="orderID" prop-name="orderReferenceOrderID" />
+      			<alias attr-name="orderDate" prop-name="orderReferenceOrderDateString" />
+     	   </set-properties-rule>
+     		   
+     	   <set-properties-rule pattern="InvoiceDetailOrderInfo/OrderReference/DocumentReference">
+      			<alias attr-name="payloadID" prop-name="orderReferenceDocumentRefPayloadID" />
+     	   </set-properties-rule>
+     			
+		   <call-method-rule pattern="InvoiceDetailOrderInfo/OrderReference/DocumentReference" methodname="setOrderReferenceDocumentRef" paramcount="0" />
+		   
+		   <set-properties-rule pattern="InvoiceDetailOrderInfo/MasterAgreementReference">
+		  	   <alias attr-name="agreementID" prop-name="masterAgreementReferenceID" />
+     		   <alias attr-name="agreementDate" prop-name="masterAgreementReferenceDateString" />
+    	   </set-properties-rule>
+    		   
+    	   <set-properties-rule pattern="InvoiceDetailOrderInfo/MasterAgreementIDInfo">
+      		   <alias attr-name="agreementID" prop-name="masterAgreementIDInfoID" />
+      		   <alias attr-name="agreementDate" prop-name="masterAgreementIDInfoDateString" />
+   		   </set-properties-rule>
+    		   
+    	   <set-properties-rule pattern="InvoiceDetailOrderInfo/OrderIDInfo">
+    		   <alias attr-name="orderID" prop-name="orderIDInfoID" />
+     		   <alias attr-name="orderDate" prop-name="orderIDInfoDateString" />
+    	   </set-properties-rule>
+    		   
+    	   <set-properties-rule pattern="InvoiceDetailOrderInfo/SupplierOrderInfo">
+    		   <alias attr-name="orderID" prop-name="supplierOrderInfoID" />
+    	   </set-properties-rule>
+     	
+     	
+     	   <!-- INVOICE ITEM -->
+	   	   <pattern value="InvoiceDetailItem">	   
+	   			<object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoiceItem" />
+	   			
+	   			<set-properties-rule>
+    				<alias attr-name="invoiceLineNumber" prop-name="invoiceLineNumber" />
+     				<alias attr-name="quantity" prop-name="quantity" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="UnitOfMeasure" methodname="setUnitOfMeasure" paramcount="0" />
+    			
+    			<call-method-rule pattern="UnitPrice/Money" methodname="setUnitPrice" paramcount="0" />
+    			<set-properties-rule pattern="UnitPrice/Money">
+    				<alias attr-name="currency" prop-name="unitPriceCurrency" />
+    			</set-properties-rule>
+    			
+    			<!-- Currently, the element name is SubTotalAmount instead of SubtotalAmount (case problem - total/Total) I think we're not using this element-->
+    			<call-method-rule pattern="SubtotalAmount/Money" methodname="setSubTotalAmount" paramcount="0" />
+    			<set-properties-rule pattern="SubtotalAmount/Money">
+    				<alias attr-name="currency" prop-name="subTotalAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="Tax/Money" methodname="setTaxAmount" paramcount="0" />
+    			<set-properties-rule pattern="Tax/Money">
+    				<alias attr-name="currency" prop-name="taxAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<!-- Parser is just trying to read the value of Tax element and setting it as description. (I think it's not possible....)
+    			But there is a seperate element available for description in xsd/dtd, 
+    			HAVE TO DECIDE BASED ON MORE SAMPLE DATA FILES -->
+    			<call-method-rule pattern="Tax/Description" methodname="setTaxDescription" paramcount="0" />
+    			
+    			<call-method-rule pattern="InvoiceDetailLineSpecialHandling/Money" methodname="setInvoiceLineSpecialHandlingAmount" paramcount="0" />
+    			<set-properties-rule pattern="InvoiceDetailLineSpecialHandling/Money">
+    				<alias attr-name="currency" prop-name="invoiceLineSpecialHandlingAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="InvoiceDetailLineShipping/Money" methodname="setInvoiceLineShippingAmount" paramcount="0" />
+    			<set-properties-rule pattern="InvoiceDetailLineShipping/Money">
+    				<alias attr-name="currency" prop-name="invoiceLineShippingAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<set-properties-rule pattern="InvoiceDetailLineShipping/InvoiceDetailShipping">
+    				<alias attr-name="shippingDate" prop-name="shippingDateString" />
+    			</set-properties-rule>
+    			
+    			<pattern value="InvoiceDetailLineShipping/InvoiceDetailShipping/Contact">
+	
+		      		<object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoiceContact" />
+
+		      		<set-properties-rule>
+			      		<alias attr-name="role" prop-name="role" />
+			      		<alias attr-name="addressID" prop-name="addressID" />
+		      		</set-properties-rule>
+
+					<call-method-rule pattern="Name" methodname="setName" paramcount="0" />			      		
+					
+	      			<pattern value="PostalAddress">
+	      			
+	      				<object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoicePostalAddress" />
+	      				
+	      				<set-properties-rule>
+			      			<alias attr-name="name" prop-name="type" />
+		      			</set-properties-rule>
+		      		
+	      				<call-method-rule pattern="DeliverTo" methodname="addName" paramcount="0" />
+	      				
+	      				<!-- Have to find a better way of handling this element -->
+	      				<call-method-rule pattern="Street" methodname="addStreet" paramcount="0" />
+	      				
+	      				
+	      				<call-method-rule pattern="City" methodname="setCityName" paramcount="0" />
+	      				<call-method-rule pattern="State" methodname="setStateCode" paramcount="0" />
+	      				<call-method-rule pattern="PostalCode" methodname="setPostalCode" paramcount="0" />
+	      				<call-method-rule pattern="Country" methodname="setCountryName" paramcount="0" />
+	      				
+	      				<pattern value="Country">
+	      					<set-properties-rule>
+				      			<alias attr-name="isoCountryCode" prop-name="countryCode" />
+			      			</set-properties-rule>
+	      				</pattern>
+	      				
+	      				<set-next-rule methodname="addPostalAddress" />
+	      				
+	      			</pattern> <!-- PostalAddress -->
+	      			
+	      			<pattern value="Email">
+	                    <call-method-rule methodname="addEmailAddress" paramcount="2" />
+	                    <call-param-rule attrname="name" paramnumber="0"/>
+	                    <call-param-rule paramnumber="1"/>
+                	</pattern>
+                
+                	<pattern value="Phone">
+	                    <call-method-rule methodname="addPhoneNumber" paramcount="4" />
+	                    <call-param-rule attrname="name" paramnumber="0"/>
+	                    <call-param-rule pattern="TelephoneNumber/CountryCode" paramnumber="1"/>
+	                    <call-param-rule pattern="TelephoneNumber/AreaOrCityCode" paramnumber="2"/>
+	                    <call-param-rule pattern="TelephoneNumber/Number" paramnumber="3"/>
+                	</pattern>
+                	
+                    <pattern value="Fax">
+	                    <call-method-rule methodname="addFaxNumber" paramcount="4" />
+	                    <call-param-rule attrname="name" paramnumber="0"/>
+	                    <call-param-rule pattern="TelephoneNumber/CountryCode" paramnumber="1"/>
+	                    <call-param-rule pattern="TelephoneNumber/AreaOrCityCode" paramnumber="2"/>
+	                    <call-param-rule pattern="TelephoneNumber/Number" paramnumber="3"/>
+                	</pattern>
+                    
+                    <call-method-rule pattern="URL" methodname="addWebAddress" paramcount="0" />
+                    
+	      			<set-next-rule methodname="addInvoiceShippingContacts" />
+	      			
+	      		</pattern> <!-- InvoiceDetailLineShipping/InvoiceDetailShipping/Contact -->
+		      		
+    			<call-method-rule pattern="GrossAmount/Money" methodname="setInvoiceLineGrossAmount" paramcount="0" />
+    			<set-properties-rule pattern="GrossAmount/Money">
+    				<alias attr-name="currency" prop-name="invoiceLineGrossAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="InvoiceDetailDiscount/Money" methodname="setInvoiceLineDiscountAmount" paramcount="0" />
+    			<set-properties-rule pattern="InvoiceDetailDiscount/Money">
+    				<alias attr-name="currency" prop-name="invoiceLineDiscountAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<!-- Not handled currently, but this is there in Barnes&Noble's xml file,
+    			but contains ZERO!!! -->
+    			<set-properties-rule pattern="Money">
+    				<alias attr-name="percentageRate" prop-name="invoiceLineDiscountPercentageRate" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="NetAmount/Money" methodname="setInvoiceLineNetAmount" paramcount="0" />
+    			<set-properties-rule pattern="NetAmount/Money">
+    				<alias attr-name="currency" prop-name="invoiceLineNetAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="InvoiceDetailItemReference/Country" methodname="setReferenceCountryName" paramcount="0" />
+    			<set-properties-rule pattern="InvoiceDetailItemReference/Country">
+    				<alias attr-name="isoCountryCode" prop-name="referenceCountryCode" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="InvoiceDetailItemReference/Description" methodname="setReferenceDescription" paramcount="0" />
+    			<call-method-rule pattern="InvoiceDetailItemReference/ItemID/SupplierPartAuxiliaryID" methodname="setReferenceItemIDSupplierPartAuxID" paramcount="0" />
+    			<call-method-rule pattern="InvoiceDetailItemReference/ItemID/SupplierPartID" methodname="setReferenceItemIDSupplierPartID" paramcount="0" />
+    			
+    			<set-properties-rule pattern="InvoiceDetailItemReference">
+    				<alias attr-name="lineNumber" prop-name="referenceLineNumber" />
+     				<alias attr-name="serialNumber" prop-name="referenceSerialNumber" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="InvoiceDetailItemReference/ManufacturerName" methodname="setReferenceManufacturerName" paramcount="0" />
+    			<call-method-rule pattern="InvoiceDetailItemReference/ManufacturerPartID" methodname="setReferenceManufacturerPartID" paramcount="0" />
+    			
+    			<call-method-rule pattern="InvoiceDetailItemReference/SerialNumber" methodname="addReferenceSerialNumber" paramcount="0" />
+    			
+    			<call-method-rule pattern="Comments" methodname="addComments" paramcount="0" />
+    			
+    			<pattern value="Extrinsic">
+		   			<object-create-rule classname="org.kuali.kfs.module.purap.util.cxml.CxmlExtrinsic" />
+		   			
+		   			<call-method-rule methodname="setValue" paramcount="0" />
+	    			<set-properties-rule>
+	    				<alias attr-name="name" prop-name="name" />
+	    			</set-properties-rule>
+	    			
+		   			<set-next-rule methodname="addExtrinsic" />
+	   			</pattern> <!--  Extrinsic -->
+    			
+		   		<set-next-rule methodname="addInvoiceItem" />
+		   		
+		   </pattern> 	<!-- InvoiceDetailItem -->  
+		   
+		   <!-- InvoiceDetailServiceItem -->
+	   	   <pattern value="InvoiceDetailServiceItem">	   
+	   			<object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoiceItem" />
+	   			
+	   			<set-properties-rule>
+    				<alias attr-name="invoiceLineNumber" prop-name="invoiceLineNumber" />
+     				<alias attr-name="quantity" prop-name="quantity" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="UnitOfMeasure" methodname="setUnitOfMeasure" paramcount="0" />
+    			
+    			<call-method-rule pattern="UnitPrice/Money" methodname="setUnitPrice" paramcount="0" />
+    			<set-properties-rule pattern="UnitPrice/Money">
+    				<alias attr-name="currency" prop-name="unitPriceCurrency" />
+    			</set-properties-rule>
+    			
+    			<!--  FIXME : These two values should be set only if UnitPrice not available. Have to do some R&D -->
+    			<call-method-rule pattern="UnitRate/UnitOfMeasure" methodname="setUnitOfMeasure" paramcount="0" />
+    			<call-method-rule pattern="UnitRate/Money" methodname="setUnitPrice" paramcount="0" />
+    			
+    			<!-- This is not handled currently, but it is needed if there is no UnitPrice/Money element-->
+    			<set-properties-rule pattern="UnitRate/Money">
+    				<alias attr-name="currency" prop-name="unitPriceCurrency" />
+    			</set-properties-rule>
+    			
+    			<!-- In parser, the element name is SubTotalAmount instead of SubtotalAmount (case problem - total/Total)
+    			I think we're not using this element-->
+    			<call-method-rule pattern="SubtotalAmount/Money" methodname="setSubTotalAmount" paramcount="0" />
+    			<set-properties-rule pattern="SubtotalAmount/Money">
+    				<alias attr-name="currency" prop-name="subTotalAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="Tax/Money" methodname="setTaxAmount" paramcount="0" />
+    			<set-properties-rule pattern="Tax/Money">
+    				<alias attr-name="currency" prop-name="taxAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<!-- Parser is just trying to read the value of Tax element and setting it as description. (I think it's not possible....)
+    			But there is a seperate element available for description in xsd/dtd, 
+    			HAVE TO DECIDE BASED ON MORE SAMPLE DATA FILES -->
+    			<call-method-rule pattern="Tax/Description" methodname="setTaxDescription" paramcount="0" />
+    			
+    			<call-method-rule pattern="GrossAmount/Money" methodname="setInvoiceLineGrossAmount" paramcount="0" />
+    			<set-properties-rule pattern="GrossAmount/Money">
+    				<alias attr-name="currency" prop-name="invoiceLineGrossAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="InvoiceDetailDiscount/Money" methodname="setInvoiceLineDiscountAmount" paramcount="0" />
+    			<set-properties-rule pattern="InvoiceDetailDiscount/Money">
+    				<alias attr-name="currency" prop-name="invoiceLineDiscountAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<!-- Not handled currently, but this is there in Barnes&Noble's xml file,
+    			but contains ZERO!!! -->
+    			<set-properties-rule pattern="Money">
+    				<alias attr-name="percentageRate" prop-name="invoiceLineDiscountPercentageRate" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="NetAmount/Money" methodname="setInvoiceLineNetAmount" paramcount="0" />
+    			<set-properties-rule pattern="NetAmount/Money">
+    				<alias attr-name="currency" prop-name="invoiceLineNetAmountCurrency" />
+    			</set-properties-rule>
+    			
+    			<call-method-rule pattern="InvoiceDetailServiceItemReference/Description" methodname="setReferenceDescription" paramcount="0" />
+    			<call-method-rule pattern="InvoiceDetailServiceItemReference/ItemID/SupplierPartAuxiliaryID" methodname="setReferenceItemIDSupplierPartAuxID" paramcount="0" />
+    			<call-method-rule pattern="InvoiceDetailServiceItemReference/ItemID/SupplierPartID" methodname="setReferenceItemIDSupplierPartID" paramcount="0" />
+    			
+    			<set-properties-rule pattern="InvoiceDetailServiceItemReference">
+    				<alias attr-name="lineNumber" prop-name="referenceLineNumber" />
+    			</set-properties-rule>
+
+	   			<call-method-rule pattern="Comments" methodname="addComments" paramcount="0" />
+	   			    			
+    			<pattern value="Extrinsic">
+		   			<object-create-rule classname="org.kuali.kfs.module.purap.util.cxml.CxmlExtrinsic" />
+		   			
+		   			<call-method-rule methodname="setValue" paramcount="0" />
+	    			<set-properties-rule>
+	    				<alias attr-name="name" prop-name="name" />
+	    			</set-properties-rule>
+	    			
+		   			<set-next-rule methodname="addExtrinsic" />
+	   			</pattern> <!--  Extrinsic -->
+	   			
+		   		<set-next-rule methodname="addInvoiceItem" />
+		   		
+		   </pattern> 	<!-- InvoiceDetailServiceItem --> 
+	   
+     	   <set-next-rule methodname="addInvoiceDetailOrder" />
+     		   
+	   </pattern> <!-- Request/InvoiceDetailRequest/InvoiceDetailOrder -->
+	   
+	    <!-- InvoiceDetailSummary -->
+	   <pattern value="Request/InvoiceDetailRequest/InvoiceDetailSummary">
+		   <object-create-rule classname="org.kuali.kfs.module.purap.businessobject.ElectronicInvoiceDetailRequestSummary" />
+		   
+		   <call-method-rule pattern="Tax/Money" methodname="setTaxAmount" paramcount="0" />
+   		   <set-properties-rule pattern="Tax/Money">
+   				<alias attr-name="currency" prop-name="taxAmountCurrency" />
+   	   	   </set-properties-rule>
+		   
+		   <call-method-rule pattern="Tax/Description" methodname="setTaxDescription" paramcount="0" />
+		   
+		   <!-- FIXME: If the above desc is empty, have to get the desc from TaxDetail... Have to do this check-->
+		   <call-method-rule pattern="Tax/TaxDetail/Description" methodname="setTaxDescription" paramcount="0" />
+		   
+		   <set-properties-rule pattern="Tax/TaxDetail">
+   				<alias attr-name="category" prop-name="taxCategory" />
+   				<alias attr-name="purpose" prop-name="taxPurpose" />
+   				<alias attr-name="percentageRate" prop-name="taxPercentageRate" />
+   	   	   </set-properties-rule>
+   	   	   
+		   <call-method-rule pattern="SpecialHandlingAmount/Money" methodname="setSpecialHandlingAmount" paramcount="0" />
+   		   <set-properties-rule pattern="SpecialHandlingAmount/Money">
+   				<alias attr-name="currency" prop-name="specialHandlingAmountCurrency" />
+   	   	   </set-properties-rule>
+		   
+		   <call-method-rule pattern="SpecialHandlingAmount/Description" methodname="setSpecialHandlingAmountDescription" paramcount="0" />
+		   
+		   <!-- In parser, the element name is SubTotalAmount instead of SubtotalAmount (case problem - total/Total)
+   			I think we're not using this element-->
+   			<call-method-rule pattern="SubtotalAmount/Money" methodname="setSubTotalAmount" paramcount="0" />
+   			<set-properties-rule pattern="SubtotalAmount/Money">
+   				<alias attr-name="currency" prop-name="subTotalAmountCurrency" />
+   			</set-properties-rule>
+		   
+		    <call-method-rule pattern="ShippingAmount/Money" methodname="setShippingAmount" paramcount="0" />
+   			<set-properties-rule pattern="ShippingAmount/Money">
+   				<alias attr-name="currency" prop-name="shippingAmountCurrency" />
+   			</set-properties-rule>
+		   
+		    <call-method-rule pattern="GrossAmount/Money" methodname="setGrossAmount" paramcount="0" />
+    		<set-properties-rule pattern="GrossAmount/Money">
+    			<alias attr-name="currency" prop-name="grossAmountCurrency" />
+    		</set-properties-rule>
+		   
+		    <call-method-rule pattern="InvoiceDetailDiscount/Money" methodname="setDiscountAmount" paramcount="0" />
+    		<set-properties-rule pattern="InvoiceDetailDiscount/Money">
+    			<alias attr-name="currency" prop-name="discountAmountCurrency" />
+    		</set-properties-rule>
+		   
+		    <!-- Not handled currently, but this is there in Barnes&Noble's xml file,
+    			 but contains ZERO!!! -->
+    		<set-properties-rule pattern="Money">
+    			<alias attr-name="percentageRate" prop-name="invoiceLineDiscountPercentageRate" />
+    		</set-properties-rule>
+    			
+		    <call-method-rule pattern="NetAmount/Money" methodname="setNetAmount" paramcount="0" />
+    		<set-properties-rule pattern="NetAmount/Money">
+    			<alias attr-name="currency" prop-name="netAmountCurrency" />
+    		</set-properties-rule>
+    		
+    		<call-method-rule pattern="DepositAmount/Money" methodname="setDepositAmount" paramcount="0" />
+    		<set-properties-rule pattern="DepositAmount/Money">
+    			<alias attr-name="currency" prop-name="depositAmountCurrency" />
+    		</set-properties-rule>
+    		
+    		<call-method-rule pattern="DueAmount/Money" methodname="setDueAmount" paramcount="0" />
+    		<set-properties-rule pattern="DueAmount/Money">
+    			<alias attr-name="currency" prop-name="dueAmountCurrency" />
+    		</set-properties-rule>
+		   
+		   <set-next-rule methodname="setInvoiceDetailRequestSummary" />
+		   
+	   </pattern> <!-- Request/InvoiceDetailRequest/InvoiceDetailSummary -->
+		
+    </pattern> <!-- cXML -->
+    
+</digester-rules>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/businessobject/UaElectronicInvoiceDetailRequestHeader.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/businessobject/UaElectronicInvoiceDetailRequestHeader.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/businessobject/UaElectronicInvoiceDetailRequestHeader.java	(revision 10217)
@@ -0,0 +1,31 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.module.purap.businessobject;
+
+import org.kuali.kfs.module.purap.businessobject.ElectronicInvoiceDetailRequestHeader;
+
+public class UaElectronicInvoiceDetailRequestHeader extends ElectronicInvoiceDetailRequestHeader {
+
+    private String paymentMethodCode;
+
+    public String getPaymentMethodCode() {
+        return paymentMethodCode;
+    }
+
+    public void setPaymentMethodCode(String paymentMethodCode) {
+        this.paymentMethodCode = paymentMethodCode;
+    }
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/spring-purap.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/spring-purap.xml	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/spring-purap.xml	(revision 10217)
@@ -1,96 +1,101 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<!--
- Copyright 2006-2007 The Kuali Foundation.
- 
- Licensed under the Educational Community License, Version 1.0 (the "License");
- you may not use this file except in compliance with the License.
- You may obtain a copy of the License at
- 
- http://www.opensource.org/licenses/ecl1.php
- 
- Unless required by applicable law or agreed to in writing, software
- distributed under the License is distributed on an "AS IS" BASIS,
- WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
- See the License for the specific language governing permissions and
- limitations under the License.
--->
-<beans xmlns="http://www.springframework.org/schema/beans"
-       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
-       xmlns:p="http://www.springframework.org/schema/p"
-       xmlns:aop="http://www.springframework.org/schema/aop"
-       xmlns:tx="http://www.springframework.org/schema/tx"
-       xsi:schemaLocation="http://www.springframework.org/schema/beans
-                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
-                           http://www.springframework.org/schema/tx
-                           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
-                           http://www.springframework.org/schema/aop
-                           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
-                           
-    <bean id="purapModuleExtensionConfiguration" parent="rsmartPurapModuleConfiguration-parentBean" >
-		<property name="initializeDataDictionary" value="true" />
-		<property name="dataDictionaryPackages">
-			<list merge="true">
-                <value>edu/arizona/kfs/module/purap/document/datadictionary</value>
-			</list>
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Copyright 2006-2007 The Kuali Foundation.
+ 
+ Licensed under the Educational Community License, Version 1.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+ http://www.opensource.org/licenses/ecl1.php
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:aop="http://www.springframework.org/schema/aop"
+       xmlns:tx="http://www.springframework.org/schema/tx"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
+                           http://www.springframework.org/schema/tx
+                           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
+                           http://www.springframework.org/schema/aop
+                           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
+                           
+    <bean id="purapModuleConfiguration" parent="rsmartPurapModuleConfiguration-parentBean" >
+		<property name="initializeDataDictionary" value="true" />
+        <property name="packagePrefixes">
+            <list merge="true">
+                <value>edu.arizona.kfs.module.purap</value>
+            </list>
+        </property>
+		<property name="dataDictionaryPackages">
+			<list merge="true">
+                <value>edu/arizona/kfs/module/purap/document/datadictionary</value>
+			</list>
 		</property>
         <!-- jhkeller - added missing property needed when BOs/docs
-             are defined in an institution module -->
+             are defined in an institution module -->
         <property name="packagePrefixes">
           <list merge="true">
             <value>edu.arizona.kfs.module.purap</value>
           </list>
         </property>
-		<property name="databaseRepositoryFilePaths">
-			<list merge="true">
-				<value>edu/arizona/kfs/module/purap/ojb-purap.xml</value>
-			</list>
-		</property>
-	</bean>
-	
-    <bean id="b2bPurchaseOrderService" class="edu.arizona.kfs.module.purap.document.service.impl.B2BPurchaseOrderAZSciquestServiceImpl">
-        <property name="b2bDao" ref="b2bDao"/>
-        <property name="requisitionService" ref="requisitionService"/>
-        <property name="parameterService" ref="parameterService"/>
-        <property name="b2bEnvironment">
-        	<value>${b2b.environment}</value>
-        </property>
-        <property name="b2bPunchoutURL">
-        	<value>${b2b.punch.out.url}</value>
-        </property>
-        <property name="b2bPunchbackURL">
-        	<value>${b2b.punch.back.url}</value>
-        </property>
-        <property name="b2bUserAgent">
-        	<value>${b2b.user.agent}</value>
-        </property>
-        <property name="b2bShoppingPassword">
-        	<value>${b2b.shopping.password}</value>
-        </property>
-        <property name="b2bPurchaseOrderURL">
-        	<value>${b2b.purchase.order.url}</value>
-        </property>
-        <property name="b2bPurchaseOrderPassword">
-        	<value>${b2b.purchase.order.password}</value>
-        </property>
-    </bean>
-
-	<bean id="electronicInvoiceInputFileType" class="edu.arizona.kfs.module.purap.batch.ElectronicInvoiceInputFileType">
-    	<property name="directoryPath">
-	       <value>${staging.directory}/purap/electronicInvoice</value>
-	    </property>
-	    <property name="fileExtension">
-	       <value>xml</value>
-	    </property>
-	    <property name="digestorRulesFileName">
-	       <value>org/kuali/kfs/module/purap/batch/electronicInvoiceDigesterRules.xml</value>
-	    </property>
-	    <property name="schemaLocation">
-	       <value>${externalizable.static.content.url}/xsd/purap/electronicInvoice.xsd</value>
-	    </property>
-	</bean>
-	
-    <bean id="b2bDao" class="edu.arizona.kfs.module.purap.dataaccess.impl.B2BDaoImpl"/>
+		<property name="databaseRepositoryFilePaths">
+			<list merge="true">
+				<value>edu/arizona/kfs/module/purap/ojb-purap.xml</value>
+			</list>
+		</property>
+	</bean>
+	
+    <bean id="b2bPurchaseOrderService" class="edu.arizona.kfs.module.purap.document.service.impl.B2BPurchaseOrderAZSciquestServiceImpl">
+        <property name="b2bDao" ref="b2bDao"/>
+        <property name="requisitionService" ref="requisitionService"/>
+        <property name="parameterService" ref="parameterService"/>
+        <property name="b2bEnvironment">
+        	<value>${b2b.environment}</value>
+        </property>
+        <property name="b2bPunchoutURL">
+        	<value>${b2b.punch.out.url}</value>
+        </property>
+        <property name="b2bPunchbackURL">
+        	<value>${b2b.punch.back.url}</value>
+        </property>
+        <property name="b2bUserAgent">
+        	<value>${b2b.user.agent}</value>
+        </property>
+        <property name="b2bShoppingPassword">
+        	<value>${b2b.shopping.password}</value>
+        </property>
+        <property name="b2bPurchaseOrderURL">
+        	<value>${b2b.purchase.order.url}</value>
+        </property>
+        <property name="b2bPurchaseOrderPassword">
+        	<value>${b2b.purchase.order.password}</value>
+        </property>
+    </bean>
 
+	<bean id="electronicInvoiceInputFileType" class="edu.arizona.kfs.module.purap.batch.ElectronicInvoiceInputFileType">
+    	<property name="directoryPath">
+	       <value>${staging.directory}/purap/electronicInvoice</value>
+	    </property>
+	    <property name="fileExtension">
+	       <value>xml</value>
+	    </property>
+	    <property name="digestorRulesFileName">
+	       <value>org/kuali/kfs/module/purap/batch/electronicInvoiceDigesterRules.xml</value>
+	    </property>
+	    <property name="schemaLocation">
+	       <value>${externalizable.static.content.url}/xsd/purap/electronicInvoice.xsd</value>
+	    </property>
+	</bean>
+	
+    <bean id="b2bDao" class="edu.arizona.kfs.module.purap.dataaccess.impl.B2BDaoImpl"/>
+
   <!-- MOD-PA1031-04 - Buyways Receiving Address Lockdown -->
   <bean name="purchaseOrderService" class="edu.arizona.kfs.module.purap.service.impl.UaPurchaseOrderServiceImpl">
     <property name="b2bPurchaseOrderService" ref="b2bPurchaseOrderService" />
@@ -111,6 +116,76 @@
     <property name="mailService" ref="mailService" />
     <property name="printService" ref="printService" />
   </bean>  
-
-</beans>
-
+
+	<!-- KITT-592 - replace the payment request service with one which uses the new payment method-based GL entry generator  -->
+    <bean id="paymentRequestService" class="edu.arizona.kfs.module.purap.document.service.impl.UaPaymentRequestServiceImpl">
+		<property name="dateTimeService" ref="dateTimeService" />
+		<property name="paymentRequestDao" ref="paymentRequestDao" />
+        <property name="documentService" ref="documentService" />
+        <property name="purapService" ref="purapService" />
+        <property name="noteService" ref="noteService" />
+        <property name="parameterService" ref="parameterService" />
+        <property name="configurationService" ref="kualiConfigurationService" />
+        <property name="negativePaymentRequestApprovalLimitService" ref="negativePaymentRequestApprovalLimitService" />
+        <property name="purapAccountingService" ref="purapAccountingService" />
+        <property name="businessObjectService" ref="businessObjectService" />
+        <property name="purapWorkflowIntegrationService" ref="purapWorkflowIntegrationService" />
+        <property name="workflowDocumentService" ref="workflowDocumentService" />
+        <property name="vendorService" ref="vendorService" />
+        <property name="dataDictionaryService" ref="dataDictionaryService" />
+        <property name="universityDateService" ref="universityDateService"/>
+        <property name="paymentMethodGeneralLedgerPendingEntryService" ref="uaPaymentMethodGeneralLedgerPendingEntryService" />
+    </bean>
+
+	<!-- KITT-592 - replace the credit memo service with one which uses the new payment method-based GL entry generator  -->
+	<bean id="creditMemoService" class="edu.arizona.kfs.module.purap.document.service.impl.UaCreditMemoServiceImpl">
+        <property name="accountsPayableService" ref="accountsPayableService" />
+		<property name="creditMemoDao" ref="creditMemoDao" />
+        <property name="dataDictionaryService" ref="dataDictionaryService" />
+        <property name="documentService" ref="documentService" />
+        <property name="kualiConfigurationService" ref="kualiConfigurationService" />
+        <property name="noteService" ref="noteService" />
+        <property name="paymentRequestService" ref="paymentRequestService" />
+        <property name="purapAccountingService" ref="purapAccountingService" />
+        <property name="purapGeneralLedgerService" ref="purapGeneralLedgerService" />
+        <property name="purapService" ref="purapService" />
+        <property name="purchaseOrderService" ref="purchaseOrderService" />
+        <property name="vendorService" ref="vendorService" />
+        <property name="workflowDocumentService" ref="workflowDocumentService" />
+        <property name="paymentMethodGeneralLedgerPendingEntryService" ref="uaPaymentMethodGeneralLedgerPendingEntryService" />
+    </bean>
+
+	<!-- KITT-592 : updated E-Invoice processing to handle payment method -->
+	<bean id="electronicInvoiceHelperService" class="edu.arizona.kfs.module.purap.service.impl.UaElectronicInvoiceHelperServiceImpl">
+		<property name="electronicInvoicingDao" ref="electronicInvoicingDao" />
+        <property name="electronicInvoiceInputFileType" ref="electronicInvoiceInputFileType" />
+		<property name="electronicInvoiceMatchingService" ref="electronicInvoiceMatchingService"/>
+		<property name="mailService" ref="mailService"/>
+		<property name="batchInputFileService" ref="batchInputFileService" />
+		<property name="vendorService" ref="vendorService"/>
+		<property name="purchaseOrderService" ref="purchaseOrderService" />
+        <property name="paymentRequestService" ref="paymentRequestService" />
+        <property name="kualiConfigurationService" ref="kualiConfigurationService"/>
+        <property name="dateTimeService" ref="dateTimeService" />
+	</bean>
+
+	<bean id="electronicInvoiceInputFileType" class="org.kuali.kfs.module.purap.batch.ElectronicInvoiceInputFileType">
+    	<property name="directoryPath">
+	       <value>${staging.directory}/purap/electronicInvoice</value>
+	    </property>
+	    <property name="fileExtension">
+	       <value>xml</value>
+	    </property>
+	    <property name="digestorRulesFileName">
+	       <value>edu/arizona/kfs/module/purap/batch/electronicInvoiceDigesterRules.xml</value>
+	    </property>
+	    <property name="schemaLocation">
+	       <value>${externalizable.static.content.url}/xsd/purap/uaElectronicInvoice.xsd</value>
+	    </property>
+	</bean>
+
+
+	<import resource="document/validation/configuration/PurapValidatorOverrides.xml" />
+
+</beans>
+
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/datadictionary/PaymentRequestDocument.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/datadictionary/PaymentRequestDocument.xml	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/datadictionary/PaymentRequestDocument.xml	(revision 10217)
@@ -2,8 +2,26 @@
 <beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:dd="http://rice.kuali.org/dd" xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-2.0.xsd         http://rice.kuali.org/dd         http://rice.kuali.org/dd/dd.xsd">
 
   <bean id="PaymentRequestDocument" parent="PaymentRequestDocument-parentBean">
-      <property name="documentPresentationControllerClass" value="edu.arizona.kfs.module.purap.document.authorization.DocuwarePaymentRequestDocumentPresentationController"/>
+		<!--
+			MOD-PA2000-01 Override the document data dictionary entry to add
+			the bank setting in prepareForSave and payment method attribute.
+		-->
+	  	<property name="documentClass" value="edu.arizona.kfs.module.purap.document.UaPaymentRequestDocument" />
+	    <property name="baseDocumentClass" value="org.kuali.kfs.module.purap.document.PaymentRequestDocument"/>
+	    
+        <property name="documentPresentationControllerClass" value="edu.arizona.kfs.module.purap.document.authorization.DocuwarePaymentRequestDocumentPresentationController"/>
+		
+		<property name="attributes">
+			<list merge="true">
+				<bean parent="PaymentMethodAttribute-SelectControl"/>
+			</list>
+		</property>
   </bean>
+  
+  <bean id="PaymentRequestDocument-bankCode" parent="PaymentRequestDocument-bankCode-parentBean">
+    <property name="required" value="false"/>
+  </bean>
+  
 
   <bean id="PaymentRequestDocument-accountsPayableProcessorIdentifier" parent="PaymentRequestDocument-accountsPayableProcessorIdentifier-parentBean">
     <property name="maxLength" value="40"/>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/datadictionary/VendorCreditMemoDocument.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/datadictionary/VendorCreditMemoDocument.xml	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/datadictionary/VendorCreditMemoDocument.xml	(revision 10217)
@@ -1,12 +1,25 @@
-<?xml version="1.0" encoding="UTF-8"?>
-<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:dd="http://rice.kuali.org/dd" xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-2.0.xsd         http://rice.kuali.org/dd         http://rice.kuali.org/dd/dd.xsd">
-
-  	<bean id="VendorCreditMemoDocument" parent="VendorCreditMemoDocument-parentBean">
-        <property name="documentPresentationControllerClass" value="edu.arizona.kfs.module.purap.document.authorization.DocuwareVendorCreditMemoDocumentPresentationController"/>
-    </bean>           
-
-  <bean id="VendorCreditMemoDocument-bankCode" parent="VendorCreditMemoDocument-bankCode-parentBean">
-    <property name="required" value="false"/>
-  </bean>
-
-</beans>
+<?xml version="1.0" encoding="UTF-8"?>
+<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p" xmlns:dd="http://rice.kuali.org/dd" xsi:schemaLocation="http://www.springframework.org/schema/beans         http://www.springframework.org/schema/beans/spring-beans-2.0.xsd         http://rice.kuali.org/dd         http://rice.kuali.org/dd/dd.xsd">
+
+  	<bean id="VendorCreditMemoDocument" parent="VendorCreditMemoDocument-parentBean">
+		<!--
+			MOD-PA2000-01 Override the document data dictionary entry to add
+			the bank setting in prepareForSave and add payment method attribute.
+		-->
+	  	<property name="documentClass" value="edu.arizona.kfs.module.purap.document.UaVendorCreditMemoDocument" />
+	    <property name="baseDocumentClass" value="org.kuali.kfs.module.purap.document.VendorCreditMemoDocument"/>
+		
+		<property name="attributes">
+			<list merge="true">
+				<bean parent="PaymentMethodAttribute-SelectControl"/>
+			</list>
+		</property>
+
+        <property name="documentPresentationControllerClass" value="edu.arizona.kfs.module.purap.document.authorization.DocuwareVendorCreditMemoDocumentPresentationController"/>
+    </bean>           
+
+  <bean id="VendorCreditMemoDocument-bankCode" parent="VendorCreditMemoDocument-bankCode-parentBean">
+    <property name="required" value="false"/>
+  </bean>
+
+</beans>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/service/impl/UaPaymentRequestServiceImpl.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/service/impl/UaPaymentRequestServiceImpl.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/service/impl/UaPaymentRequestServiceImpl.java	(revision 10217)
@@ -0,0 +1,105 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.module.purap.document.service.impl;
+
+import java.sql.Date;
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Iterator;
+
+import org.kuali.kfs.module.purap.document.PaymentRequestDocument;
+import org.kuali.kfs.module.purap.document.VendorCreditMemoDocument;
+import org.kuali.kfs.module.purap.document.service.impl.PaymentRequestServiceImpl;
+import org.kuali.kfs.module.purap.util.VendorGroupingHelper;
+
+import edu.arizona.kfs.fp.businessobject.options.PaymentMethodValuesFinder;
+import edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService;
+import edu.arizona.kfs.module.purap.document.UaPaymentRequestDocument;
+
+/**
+ * Override the base payment request service to filter out those which are not being paid by check/ACH.
+ * 
+ * MOD-PA2000-01
+ * 
+ * @author jonathan
+ */
+public class UaPaymentRequestServiceImpl extends PaymentRequestServiceImpl {
+
+    protected UaPaymentMethodGeneralLedgerPendingEntryService paymentMethodGeneralLedgerPendingEntryService;
+    
+    /**
+     * This method filters the payment requests given to just those which will be processed by PDP.
+     * 
+     * This will be entries with payment method "P".
+     * 
+     * @param baseResults The entire list of payment requests valid for extraction.
+     * @return A filtered subset of the passed in list.
+     */
+    protected Collection<PaymentRequestDocument> filterPaymentRequests( Collection<PaymentRequestDocument> baseResults ) {
+        ArrayList<PaymentRequestDocument> filteredResults = new ArrayList<PaymentRequestDocument>( baseResults.size() );
+        for ( PaymentRequestDocument doc : baseResults ) {
+            if ( doc instanceof UaPaymentRequestDocument ) {
+                if ( getPaymentMethodGeneralLedgerPendingEntryService().isPaymentMethodProcessedUsingPdp( ((UaPaymentRequestDocument)doc).getPaymentMethodCode() ) ) {
+                    filteredResults.add(doc);
+                }
+            } else {
+                // if not the UA modification for some reason, assume that the payment method has not
+                // been set and is therefore check
+                filteredResults.add(doc);
+            }
+        }
+        return filteredResults;
+    }
+    
+    @Override
+    public Collection<PaymentRequestDocument> getPaymentRequestsToExtract(Date onOrBeforePaymentRequestPayDate) {
+        Collection<PaymentRequestDocument> baseResults = super.getPaymentRequestsToExtract(onOrBeforePaymentRequestPayDate);
+        return filterPaymentRequests(baseResults);
+    }
+    
+    @Override
+    public Iterator<PaymentRequestDocument> getPaymentRequestsToExtractByCM(String campusCode, VendorCreditMemoDocument cmd) {
+        throw new UnsupportedOperationException( "This method is not in use." );
+    }
+    
+    @Override
+    public Collection<PaymentRequestDocument> getPaymentRequestsToExtractByVendor(String campusCode, VendorGroupingHelper vendor, Date onOrBeforePaymentRequestPayDate) {
+        Collection<PaymentRequestDocument> baseResults = super.getPaymentRequestsToExtractByVendor(campusCode, vendor, onOrBeforePaymentRequestPayDate);
+        return filterPaymentRequests(baseResults);
+    }
+    
+    @Override
+    public Collection<PaymentRequestDocument> getPaymentRequestsToExtractSpecialPayments(String chartCode, Date onOrBeforePaymentRequestPayDate) {
+        Collection<PaymentRequestDocument> baseResults = super.getPaymentRequestsToExtractSpecialPayments(chartCode, onOrBeforePaymentRequestPayDate);
+        return filterPaymentRequests(baseResults);
+    }
+    
+    @Override
+    public Collection<PaymentRequestDocument> getPaymentRequestToExtractByChart(String chartCode, Date onOrBeforePaymentRequestPayDate) {
+        Collection<PaymentRequestDocument> baseResults = super.getPaymentRequestToExtractByChart(chartCode, onOrBeforePaymentRequestPayDate);
+        return filterPaymentRequests(baseResults);
+    }
+
+    protected UaPaymentMethodGeneralLedgerPendingEntryService getPaymentMethodGeneralLedgerPendingEntryService() {
+        return paymentMethodGeneralLedgerPendingEntryService;
+    }
+
+    public void setPaymentMethodGeneralLedgerPendingEntryService(UaPaymentMethodGeneralLedgerPendingEntryService paymentMethodGeneralLedgerPendingEntryService) {
+        this.paymentMethodGeneralLedgerPendingEntryService = paymentMethodGeneralLedgerPendingEntryService;
+    }
+    
+    
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/service/impl/UaCreditMemoServiceImpl.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/service/impl/UaCreditMemoServiceImpl.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/service/impl/UaCreditMemoServiceImpl.java	(revision 10217)
@@ -0,0 +1,140 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.module.purap.document.service.impl;
+
+import java.util.ArrayList;
+import java.util.Collection;
+import java.util.Iterator;
+
+import org.kuali.kfs.module.purap.PurapConstants;
+import org.kuali.kfs.module.purap.document.VendorCreditMemoDocument;
+import org.kuali.kfs.module.purap.document.service.impl.CreditMemoServiceImpl;
+import org.kuali.kfs.module.purap.document.validation.event.AttributedContinuePurapEvent;
+import org.kuali.kfs.module.purap.util.VendorGroupingHelper;
+import org.kuali.kfs.sys.businessobject.Bank;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.kfs.sys.service.BankService;
+import org.kuali.rice.kew.exception.WorkflowException;
+import org.kuali.rice.kns.exception.ValidationException;
+
+import edu.arizona.kfs.fp.businessobject.options.PaymentMethodValuesFinder;
+import edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService;
+import edu.arizona.kfs.module.purap.document.UaPaymentRequestDocument;
+import edu.arizona.kfs.module.purap.document.UaVendorCreditMemoDocument;
+
+public class UaCreditMemoServiceImpl extends CreditMemoServiceImpl {
+    private static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(UaCreditMemoServiceImpl.class);
+
+    private UaPaymentMethodGeneralLedgerPendingEntryService paymentMethodGeneralLedgerPendingEntryService;
+    
+    /**
+     * This method filters the payment requests given to just those which will be processed by PDP.
+     * 
+     * This will be entries with payment method "P".
+     * 
+     * @param baseResults The entire list of payment requests valid for extraction.
+     * @return A filtered subset of the passed in list.
+     */
+    protected Collection<VendorCreditMemoDocument> filterPaymentRequests( Collection<VendorCreditMemoDocument> baseResults ) {
+        return filterPaymentRequests(baseResults.iterator());
+    }
+    
+    /**
+     * This method filters the payment requests given to just those which will be processed by PDP.
+     * 
+     * This will be entries with payment method "P".
+     * 
+     * @param baseResults An iterator over a list of payment requests valid for extraction.
+     * @return A filtered subset of the passed in list.
+     */
+    protected Collection<VendorCreditMemoDocument> filterPaymentRequests( Iterator<VendorCreditMemoDocument> baseResults ) {
+        ArrayList<VendorCreditMemoDocument> filteredResults = new ArrayList<VendorCreditMemoDocument>();
+        while ( baseResults.hasNext() ) {
+            VendorCreditMemoDocument doc = baseResults.next();
+            if ( doc instanceof UaVendorCreditMemoDocument ) {
+                if ( getPaymentMethodGeneralLedgerPendingEntryService().isPaymentMethodProcessedUsingPdp( ((UaVendorCreditMemoDocument)doc).getPaymentMethodCode() ) ) {
+                    filteredResults.add(doc);
+                }
+            } else {
+                // if not the UA modification for some reason, assume that the payment method has not
+                // been set and is therefore check
+                filteredResults.add(doc);
+            }
+        }
+        return filteredResults;
+    }
+    
+    /**
+     * Replace superclass method to copy the payment method code from the payment request.
+     * 
+     * @author jonathan
+     * @see org.kuali.kfs.module.purap.document.service.impl.CreditMemoServiceImpl#populateAndSaveCreditMemo(org.kuali.kfs.module.purap.document.VendorCreditMemoDocument)
+     */
+    @Override
+    public void populateAndSaveCreditMemo(VendorCreditMemoDocument document) {
+        try {
+            document.setStatusCode(PurapConstants.CreditMemoStatuses.IN_PROCESS);
+            
+            if (document.isSourceDocumentPaymentRequest()) {
+                document.setBankCode(document.getPaymentRequestDocument().getBankCode());
+                document.setBank(document.getPaymentRequestDocument().getBank());
+                // KITT-592 : if this is a UC CM document and the source is a new UA payment request document, copy the payment method code
+                if ( document instanceof UaVendorCreditMemoDocument && document.getPaymentRequestDocument() instanceof UaPaymentRequestDocument ) {
+                    ((UaVendorCreditMemoDocument)document).setPaymentMethodCode(((UaPaymentRequestDocument)document.getPaymentRequestDocument()).getPaymentMethodCode());
+                }
+            }
+            else {
+                // set bank code to default bank code in the system parameter
+                Bank defaultBank = SpringContext.getBean(BankService.class).getDefaultBankByDocType(VendorCreditMemoDocument.class);
+                if (defaultBank != null) {
+                    document.setBankCode(defaultBank.getBankCode());
+                    document.setBank(defaultBank);
+                }
+            }
+            
+            documentService.saveDocument(document, AttributedContinuePurapEvent.class);
+        } catch (ValidationException ve) {
+            document.setStatusCode(PurapConstants.CreditMemoStatuses.INITIATE);
+        } catch (WorkflowException we) {
+            // set the status back to initiate
+            document.setStatusCode(PurapConstants.CreditMemoStatuses.INITIATE);
+            String errorMsg = "Error saving document # " + document.getDocumentHeader().getDocumentNumber() + " " + we.getMessage();
+            LOG.error(errorMsg, we);
+            throw new RuntimeException(errorMsg, we);
+        }
+    }
+    
+    @Override
+    public Iterator<VendorCreditMemoDocument> getCreditMemosToExtract(String chartCode) {
+        Iterator<VendorCreditMemoDocument> baseResults = super.getCreditMemosToExtract(chartCode);
+        return filterPaymentRequests(baseResults).iterator();
+    }
+    
+    @Override
+    public Collection<VendorCreditMemoDocument> getCreditMemosToExtractByVendor(String chartCode, VendorGroupingHelper vendor) {
+        Collection<VendorCreditMemoDocument> baseResults = super.getCreditMemosToExtractByVendor(chartCode, vendor);
+        return filterPaymentRequests(baseResults);
+    }
+
+    protected UaPaymentMethodGeneralLedgerPendingEntryService getPaymentMethodGeneralLedgerPendingEntryService() {
+        return paymentMethodGeneralLedgerPendingEntryService;
+    }
+
+    public void setPaymentMethodGeneralLedgerPendingEntryService(UaPaymentMethodGeneralLedgerPendingEntryService paymentMethodGeneralLedgerPendingEntryService) {
+        this.paymentMethodGeneralLedgerPendingEntryService = paymentMethodGeneralLedgerPendingEntryService;
+    }
+    
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/validation/impl/UaAccountsPayableBankCodeValidation.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/validation/impl/UaAccountsPayableBankCodeValidation.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/validation/impl/UaAccountsPayableBankCodeValidation.java	(revision 10217)
@@ -0,0 +1,70 @@
+/*
+ * Copyright 2008-2009 The Kuali Foundation
+ * 
+ * Licensed under the Educational Community License, Version 2.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl2.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.module.purap.document.validation.impl;
+
+import org.apache.commons.lang.StringUtils;
+import org.kuali.kfs.module.purap.PurapPropertyConstants;
+import org.kuali.kfs.module.purap.document.AccountsPayableDocumentBase;
+import org.kuali.kfs.module.purap.document.validation.impl.AccountsPayableBankCodeValidation;
+import org.kuali.kfs.sys.document.validation.event.AttributedDocumentEvent;
+import org.kuali.kfs.sys.document.validation.impl.BankCodeValidation;
+
+import edu.arizona.kfs.module.purap.document.UaPaymentRequestDocument;
+import edu.arizona.kfs.module.purap.document.UaVendorCreditMemoDocument;
+
+/**
+ * Override the validator from baseline with one which is aware of the new documents with a payment method code.
+ * 
+ * @author jonathan
+ */
+public class UaAccountsPayableBankCodeValidation extends AccountsPayableBankCodeValidation {
+//    private static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(UaAccountsPayableBankCodeValidation.class);
+
+    /**
+     * @see org.kuali.kfs.sys.document.validation.Validation#validate(org.kuali.kfs.sys.document.validation.event.AttributedDocumentEvent)
+     */
+    public boolean validate(AttributedDocumentEvent event) {
+        AccountsPayableDocumentBase apDocument = (AccountsPayableDocumentBase) getAccountingDocumentForValidation();
+
+        // check if one of the extended UA documents, if so, take the payment method into account, otherwise, revert to baseline behavior
+        boolean isValid = true;
+        if ( apDocument instanceof UaPaymentRequestDocument ) {
+            isValid = BankCodeValidation.validate(apDocument.getBankCode(), "document." + PurapPropertyConstants.BANK_CODE, ((UaPaymentRequestDocument)apDocument).getPaymentMethodCode(), false, true);            
+            if ( isValid ) {
+                // clear out the bank code on the document if not needed (per the message set by the call above)
+                if ( StringUtils.isNotBlank(apDocument.getBankCode())
+                        && !BankCodeValidation.doesBankCodeNeedToBePopulated(((UaPaymentRequestDocument)apDocument).getPaymentMethodCode()) ) {
+                    apDocument.setBank(null);
+                    apDocument.setBankCode(null);                
+                }
+            }
+        } else if ( apDocument instanceof UaVendorCreditMemoDocument ) {
+            isValid = BankCodeValidation.validate(apDocument.getBankCode(), "document." + PurapPropertyConstants.BANK_CODE,  ((UaVendorCreditMemoDocument)apDocument).getPaymentMethodCode(), false, true);                        
+            if ( isValid ) {
+                // clear out the bank code on the document if not needed (per the message set by the call above)
+                if ( StringUtils.isNotBlank(apDocument.getBankCode())
+                        && !BankCodeValidation.doesBankCodeNeedToBePopulated(((UaVendorCreditMemoDocument)apDocument).getPaymentMethodCode()) ) {
+                    apDocument.setBank(null);
+                    apDocument.setBankCode(null);                
+                }
+            }
+        } else {
+            isValid = BankCodeValidation.validate(apDocument.getBankCode(), "document." + PurapPropertyConstants.BANK_CODE, false, true);
+        }
+
+        return isValid;
+    }
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/validation/impl/VendorCreditMemoPaymentMethodCodeValidation.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/validation/impl/VendorCreditMemoPaymentMethodCodeValidation.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/validation/impl/VendorCreditMemoPaymentMethodCodeValidation.java	(revision 10217)
@@ -0,0 +1,59 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.module.purap.document.validation.impl;
+
+import org.apache.commons.lang.StringUtils;
+import org.kuali.kfs.module.purap.document.PaymentRequestDocument;
+import org.kuali.kfs.sys.document.validation.GenericValidation;
+import org.kuali.kfs.sys.document.validation.event.AttributedDocumentEvent;
+import org.kuali.rice.kns.util.GlobalVariables;
+
+import edu.arizona.kfs.module.purap.document.UaPaymentRequestDocument;
+import edu.arizona.kfs.module.purap.document.UaVendorCreditMemoDocument;
+
+/**
+ * Validates the payment method code used on credit memo document if it was created
+ * from a payment request document.
+ * 
+ * @author jonathan
+ */
+public class VendorCreditMemoPaymentMethodCodeValidation extends GenericValidation {
+
+    protected static final String ERROR_PAYMENTMETHODCODE_MUSTMATCHPREQ = "error.document.creditmemo.paymentmethodcode.mustmatchpreq";
+
+    public boolean validate(AttributedDocumentEvent event) {
+        if ( event.getDocument() instanceof UaVendorCreditMemoDocument ) {
+            UaVendorCreditMemoDocument doc = (UaVendorCreditMemoDocument) event.getDocument();
+            // check if from a PREQ document
+            if ( doc.isSourceDocumentPaymentRequest() ) {
+                // load the document
+                PaymentRequestDocument preqDoc = doc.getPaymentRequestDocument();
+                // if a UA PREQ, get the PMC
+                if ( preqDoc instanceof UaPaymentRequestDocument ) {
+                    // check if the PMC on this document is the same
+                    String preqPaymentMethodCode = ((UaPaymentRequestDocument)preqDoc).getPaymentMethodCode();
+                    if ( !StringUtils.equals(preqPaymentMethodCode, doc.getPaymentMethodCode() ) ) {
+                        GlobalVariables.getMessageMap().putError("document.paymentMethodCode", ERROR_PAYMENTMETHODCODE_MUSTMATCHPREQ, preqPaymentMethodCode);
+                        return false;
+                    }
+                }
+            }
+        }
+        // if not (for some reason) the UA CM document, just return true
+        return true;
+    }
+
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/validation/configuration/PurapValidatorOverrides.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/validation/configuration/PurapValidatorOverrides.xml	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/validation/configuration/PurapValidatorOverrides.xml	(revision 10217)
@@ -0,0 +1,41 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<!--
+ Copyright 2006-2007 The Kuali Foundation.
+ 
+ Licensed under the Educational Community License, Version 1.0 (the "License");
+ you may not use this file except in compliance with the License.
+ You may obtain a copy of the License at
+ 
+ http://www.opensource.org/licenses/ecl1.php
+ 
+ Unless required by applicable law or agreed to in writing, software
+ distributed under the License is distributed on an "AS IS" BASIS,
+ WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ See the License for the specific language governing permissions and
+ limitations under the License.
+-->
+<beans xmlns="http://www.springframework.org/schema/beans"
+       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
+       xmlns:p="http://www.springframework.org/schema/p"
+       xmlns:aop="http://www.springframework.org/schema/aop"
+       xmlns:tx="http://www.springframework.org/schema/tx"
+       xsi:schemaLocation="http://www.springframework.org/schema/beans
+                           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
+                           http://www.springframework.org/schema/tx
+                           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
+                           http://www.springframework.org/schema/aop
+                           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd">
+
+
+	<!-- KITT-592: replace the bank code validator with one aware of the documents with a payment method code -->
+    <bean id="PurchasingAccountsPayable-bankCodeValidation" class="edu.arizona.kfs.module.purap.document.validation.impl.UaAccountsPayableBankCodeValidation" abstract="true"/>
+
+	<bean id="VendorCreditMemo-routeDocumentValidation" parent="VendorCreditMemo-routeDocumentValidation-parentBean" scope="prototype">
+		<property name="validations">
+			<list merge="true">
+				<bean class="edu.arizona.kfs.module.purap.document.validation.impl.VendorCreditMemoPaymentMethodCodeValidation" />
+			</list>
+		</property>
+	</bean>
+
+</beans>
\ No newline at end of file
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/workflow/CreditMemoNonCheck.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/workflow/CreditMemoNonCheck.xml	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/workflow/CreditMemoNonCheck.xml	(revision 10217)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
+  <documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
+    <documentType>
+      <name>CMNC</name>
+      <parent>FSLO</parent>
+      <label>Credit Memo - Non-Check</label>
+      <active>true</active>
+      <routingVersion>2</routingVersion>
+      <routePaths />
+    </documentType>
+  </documentTypes>
+</data>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/workflow/PaymentRequestNonCheck.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/workflow/PaymentRequestNonCheck.xml	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/workflow/PaymentRequestNonCheck.xml	(revision 10217)
@@ -0,0 +1,13 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<data xmlns="ns:workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="ns:workflow resource:WorkflowData">
+  <documentTypes xmlns="ns:workflow/DocumentType" xsi:schemaLocation="ns:workflow/DocumentType resource:DocumentType">
+    <documentType>
+      <name>PRNC</name>
+      <parent>FSLO</parent>
+      <label>Payment Request - Non-Check</label>
+      <active>true</active>
+      <routingVersion>2</routingVersion>
+      <routePaths />
+    </documentType>
+  </documentTypes>
+</data>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/UaPaymentRequestDocument.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/UaPaymentRequestDocument.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/UaPaymentRequestDocument.java	(revision 10217)
@@ -0,0 +1,119 @@
+package edu.arizona.kfs.module.purap.document;
+
+import org.kuali.kfs.fp.document.DisbursementVoucherConstants;
+import org.kuali.kfs.module.purap.PurapConstants;
+import org.kuali.kfs.module.purap.document.PaymentRequestDocument;
+import org.kuali.kfs.sys.KFSConstants;
+import org.kuali.kfs.sys.businessobject.Bank;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntry;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntrySequenceHelper;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntrySourceDetail;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.rice.kew.util.KEWConstants;
+import org.kuali.rice.kns.document.authorization.DocumentAuthorizer;
+import org.kuali.rice.kns.service.DocumentHelperService;
+import org.kuali.rice.kns.service.ParameterConstants.COMPONENT;
+import org.kuali.rice.kns.util.GlobalVariables;
+import org.kuali.rice.kns.util.KNSConstants;
+
+import edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService;
+
+/**
+ * Overrides the prepareForSave method to ensure that the bank code is synchronized with the payment method.
+ * 
+ * MOD-PA2000-01
+ * 
+ * @author jonathan
+ */
+@COMPONENT( component = "PaymentRequest" )
+public class UaPaymentRequestDocument extends PaymentRequestDocument {
+    private static org.apache.log4j.Logger LOG = org.apache.log4j.Logger.getLogger(UaPaymentRequestDocument.class);
+
+    public static String DOCUMENT_TYPE_NON_CHECK = "PRNC";
+    
+    // default this value to "C" to preserve baseline behavior
+    protected String paymentMethodCode = "C"; // check
+    private static UaPaymentMethodGeneralLedgerPendingEntryService paymentMethodGeneralLedgerPendingEntryService;
+
+    /**
+     * Gets the paymentMethodCode attribute. 
+     * @return Returns the paymentMethodCode.
+     */
+    public String getPaymentMethodCode() {
+        return paymentMethodCode;
+    }
+
+    /**
+     * Sets the paymentMethodCode attribute value.
+     * @param paymentMethodCode The paymentMethodCode to set.
+     */
+    public void setPaymentMethodCode(String paymentMethodCode) {
+        this.paymentMethodCode = paymentMethodCode;
+    }
+    
+    @Override
+    public void prepareForSave() {
+        super.prepareForSave();
+        
+        // First, only do this if the document is in initiated status - after that, we don't want to 
+        // accidentally reset the bank code
+        if ( KEWConstants.ROUTE_HEADER_INITIATED_CD.equals( getDocumentHeader().getWorkflowDocument().getRouteHeader().getDocRouteStatus() )
+                || KEWConstants.ROUTE_HEADER_SAVED_CD.equals( getDocumentHeader().getWorkflowDocument().getRouteHeader().getDocRouteStatus() ) ) {
+            // need to check whether the user has the permission to edit the bank code
+            // if so, don't synchronize since we can't tell whether the value coming in
+            // was entered by the user or not.
+            DocumentAuthorizer docAuth = SpringContext.getBean(DocumentHelperService.class).getDocumentAuthorizer(this);
+            if ( !docAuth.isAuthorizedByTemplate(this, 
+                    KFSConstants.ParameterNamespaces.KFS, 
+                    KFSConstants.PermissionTemplate.EDIT_BANK_CODE.name, 
+                    GlobalVariables.getUserSession().getPrincipalId()  ) ) {
+                synchronizeBankCodeWithPaymentMethod();        
+            } else {
+                // ensure that the name is updated properly
+                refreshReferenceObject( "bank" );
+            }
+        }        
+    }
+
+    protected void synchronizeBankCodeWithPaymentMethod() {
+        Bank bank = getPaymentMethodGeneralLedgerPendingEntryService().getBankForPaymentMethod( getPaymentMethodCode() );
+        if ( bank != null ) {
+            setBankCode(bank.getBankCode());
+            setBank(bank);
+        } else {
+            // no bank code, no bank needed
+            setBankCode(null);
+            setBank(null);
+        }
+    }
+
+    protected UaPaymentMethodGeneralLedgerPendingEntryService getPaymentMethodGeneralLedgerPendingEntryService() {
+        if ( paymentMethodGeneralLedgerPendingEntryService == null ) {
+            paymentMethodGeneralLedgerPendingEntryService = SpringContext.getBean(UaPaymentMethodGeneralLedgerPendingEntryService.class);
+        }
+        return paymentMethodGeneralLedgerPendingEntryService;
+    }
+
+    public boolean generateDocumentGeneralLedgerPendingEntries(GeneralLedgerPendingEntrySequenceHelper sequenceHelper) {
+        if (getGeneralLedgerPendingEntries() == null || getGeneralLedgerPendingEntries().size() < 2) {
+            LOG.warn("No gl entries for accounting lines.");
+            return true;
+        }
+//        LOG.debug("generateDocumentGeneralLedgerPendingEntries()");
+        getPaymentMethodGeneralLedgerPendingEntryService().generatePaymentMethodSpecificDocumentGeneralLedgerPendingEntries(
+                this,getPaymentMethodCode(),getBankCode(), KNSConstants.DOCUMENT_PROPERTY_NAME + "." + "bankCode", getGeneralLedgerPendingEntry(0), false, false, sequenceHelper);
+        
+        return true;
+    }
+    
+    @Override
+    public void customizeExplicitGeneralLedgerPendingEntry(GeneralLedgerPendingEntrySourceDetail postable, GeneralLedgerPendingEntry explicitEntry) {
+        super.customizeExplicitGeneralLedgerPendingEntry(postable, explicitEntry);
+        // if the document is not processed using PDP, then the cash entries need to be created instead of liability
+        // so, switch the document type so the offset generation uses a cash offset object code
+        if ( !getPaymentMethodGeneralLedgerPendingEntryService().isPaymentMethodProcessedUsingPdp(getPaymentMethodCode())) {
+            explicitEntry.setFinancialDocumentTypeCode(DOCUMENT_TYPE_NON_CHECK);
+        }
+    }
+    
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/UaVendorCreditMemoDocument.java
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/UaVendorCreditMemoDocument.java	(revision 0)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/document/UaVendorCreditMemoDocument.java	(revision 10217)
@@ -0,0 +1,130 @@
+/*
+ * Copyright 2010 The Kuali Foundation.
+ * 
+ * Licensed under the Educational Community License, Version 1.0 (the "License");
+ * you may not use this file except in compliance with the License.
+ * You may obtain a copy of the License at
+ * 
+ * http://www.opensource.org/licenses/ecl1.php
+ * 
+ * Unless required by applicable law or agreed to in writing, software
+ * distributed under the License is distributed on an "AS IS" BASIS,
+ * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
+ * See the License for the specific language governing permissions and
+ * limitations under the License.
+ */
+package edu.arizona.kfs.module.purap.document;
+
+import org.kuali.kfs.fp.document.DisbursementVoucherConstants;
+import org.kuali.kfs.module.purap.document.VendorCreditMemoDocument;
+import org.kuali.kfs.sys.KFSConstants;
+import org.kuali.kfs.sys.businessobject.Bank;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntry;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntrySequenceHelper;
+import org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntrySourceDetail;
+import org.kuali.kfs.sys.context.SpringContext;
+import org.kuali.rice.kew.util.KEWConstants;
+import org.kuali.rice.kns.document.authorization.DocumentAuthorizer;
+import org.kuali.rice.kns.service.DocumentHelperService;
+import org.kuali.rice.kns.service.ParameterConstants.COMPONENT;
+import org.kuali.rice.kns.util.GlobalVariables;
+import org.kuali.rice.kns.util.KNSConstants;
+
+import edu.arizona.kfs.fp.service.UaPaymentMethodGeneralLedgerPendingEntryService;
+
+/**
+ * KITT-592 - added payment method code and supporting logic
+ * 
+ * @author jonathan
+ */
+@COMPONENT( component = "VendorCreditMemo" )
+public class UaVendorCreditMemoDocument extends VendorCreditMemoDocument {
+
+    public static String DOCUMENT_TYPE_NON_CHECK = "CMNC";
+
+    protected String paymentMethodCode = "C"; // check
+    private static UaPaymentMethodGeneralLedgerPendingEntryService paymentMethodGeneralLedgerPendingEntryService;
+
+    /**
+     * Gets the paymentMethodCode attribute. 
+     * @return Returns the paymentMethodCode.
+     */
+    public String getPaymentMethodCode() {
+        return paymentMethodCode;
+    }
+
+    /**
+     * Sets the paymentMethodCode attribute value.
+     * @param paymentMethodCode The paymentMethodCode to set.
+     */
+    public void setPaymentMethodCode(String paymentMethodCode) {
+        this.paymentMethodCode = paymentMethodCode;
+    }
+
+    @Override
+    public void prepareForSave() {
+        super.prepareForSave();
+        
+        // First, only do this if the document is in initiated status - after that, we don't want to 
+        // accidentally reset the bank code
+        if ( KEWConstants.ROUTE_HEADER_INITIATED_CD.equals( getDocumentHeader().getWorkflowDocument().getRouteHeader().getDocRouteStatus() )
+                || KEWConstants.ROUTE_HEADER_SAVED_CD.equals( getDocumentHeader().getWorkflowDocument().getRouteHeader().getDocRouteStatus() ) ) {
+            // need to check whether the user has the permission to edit the bank code
+            // if so, don't synchronize since we can't tell whether the value coming in
+            // was entered by the user or not.
+            DocumentAuthorizer docAuth = SpringContext.getBean(DocumentHelperService.class).getDocumentAuthorizer(this);
+            if ( !docAuth.isAuthorizedByTemplate(this, 
+                    KFSConstants.ParameterNamespaces.KFS, 
+                    KFSConstants.PermissionTemplate.EDIT_BANK_CODE.name, 
+                    GlobalVariables.getUserSession().getPrincipalId()  ) ) {
+                synchronizeBankCodeWithPaymentMethod();        
+            } else {
+                // ensure that the name is updated properly
+                refreshReferenceObject( "bank" );
+            }
+        }        
+    }
+
+    protected void synchronizeBankCodeWithPaymentMethod() {
+        Bank bank = getPaymentMethodGeneralLedgerPendingEntryService().getBankForPaymentMethod( getPaymentMethodCode() );
+        if ( bank != null ) {
+            setBankCode(bank.getBankCode());
+            setBank(bank);
+        } else {
+            // no bank code, no bank needed
+            setBankCode(null);
+            setBank(null);
+        }
+    }
+
+    @Override
+    public void customizeExplicitGeneralLedgerPendingEntry(GeneralLedgerPendingEntrySourceDetail postable, GeneralLedgerPendingEntry explicitEntry) {
+        super.customizeExplicitGeneralLedgerPendingEntry(postable, explicitEntry);
+        // if the document is not processed using PDP, then the cash entries need to be created instead of liability
+        // so, switch the document type so the offset generation uses a cash offset object code
+        if ( !getPaymentMethodGeneralLedgerPendingEntryService().isPaymentMethodProcessedUsingPdp(getPaymentMethodCode())) {
+            explicitEntry.setFinancialDocumentTypeCode(DOCUMENT_TYPE_NON_CHECK);
+        }
+    }
+
+    public boolean generateDocumentGeneralLedgerPendingEntries(GeneralLedgerPendingEntrySequenceHelper sequenceHelper) {
+        if (getGeneralLedgerPendingEntries() == null || getGeneralLedgerPendingEntries().size() < 2) {
+            LOG.warn("No gl entries for accounting lines.");
+            return true;
+        }
+//        LOG.debug("generateDocumentGeneralLedgerPendingEntries()");
+        getPaymentMethodGeneralLedgerPendingEntryService().generatePaymentMethodSpecificDocumentGeneralLedgerPendingEntries(
+                this,getPaymentMethodCode(),getBankCode(), KNSConstants.DOCUMENT_PROPERTY_NAME + "." + "bankCode", getGeneralLedgerPendingEntry(0), true, true, sequenceHelper);
+        
+        return true;
+    }
+    
+    
+    protected UaPaymentMethodGeneralLedgerPendingEntryService getPaymentMethodGeneralLedgerPendingEntryService() {
+        if ( paymentMethodGeneralLedgerPendingEntryService == null ) {
+            paymentMethodGeneralLedgerPendingEntryService = SpringContext.getBean(UaPaymentMethodGeneralLedgerPendingEntryService.class);
+        }
+        return paymentMethodGeneralLedgerPendingEntryService;
+    }
+    
+}
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/ojb-purap.xml
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/ojb-purap.xml	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/src/edu/arizona/kfs/module/purap/ojb-purap.xml	(revision 10217)
@@ -637,4 +637,307 @@
     
 </class-descriptor> 
 
+<!-- Disable the base classes (cause errors earlier) -->
+<class-descriptor class="org.kuali.kfs.module.purap.document.PaymentRequestDocument" table="OLD_PAY_REQ_OBJ_USED" />
+<class-descriptor class="org.kuali.kfs.module.purap.document.VendorCreditMemoDocument" table="OLD_CRDT_MEMO_OBJ_USED" />
+
+<!-- MOD-PA2000-01: Added Payment method code -->
+<class-descriptor class="edu.arizona.kfs.module.purap.document.UaPaymentRequestDocument" table="AP_PMT_RQST_T">
+    <field-descriptor name="purapDocumentIdentifier" column="PMT_RQST_ID" jdbc-type="INTEGER" primarykey="true" index="true" autoincrement="true" sequence-name="PMT_RQST_ID"/>
+    <field-descriptor name="objectId" column="OBJ_ID" jdbc-type="VARCHAR" index="true"/>
+    <field-descriptor name="versionNumber" column="VER_NBR" jdbc-type="BIGINT" locking="true"/>
+    <field-descriptor name="documentNumber" column="FDOC_NBR" jdbc-type="VARCHAR" index="true"/>
+    <field-descriptor name="statusCode" column="PMT_RQST_STAT_CD" jdbc-type="VARCHAR" index="true"/>
+    <field-descriptor name="purchaseOrderIdentifier" column="PO_ID" jdbc-type="INTEGER" index="true"/>
+    <field-descriptor name="postingYear" column="PO_ENCUM_FSCL_YR" jdbc-type="INTEGER"/>
+    <field-descriptor name="recurringPaymentTypeCode" column="PO_CLSIF_TYP_DESC" jdbc-type="VARCHAR"/>
+    <field-descriptor name="invoiceDate" column="INV_DT" jdbc-type="DATE"/>
+    <field-descriptor name="invoiceNumber" column="INV_NBR" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorInvoiceAmount" column="VNDR_INV_AMT" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="vendorPaymentTermsCode" column="VNDR_PMT_TERMS_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorShippingPaymentTermsCode" column="VNDR_SHP_PMT_TERM_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorCustomerNumber" column="VNDR_CUST_NBR" jdbc-type="VARCHAR"/>
+    <field-descriptor name="paymentRequestPayDate" column="PMT_RQST_PAY_DT" jdbc-type="DATE"/>
+    <field-descriptor name="paymentRequestCostSourceCode" column="PMT_RQST_CST_SRC_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="paymentRequestedCancelIndicator" column="PMT_RQST_CNCL_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="paymentAttachmentIndicator" column="PMT_ATT_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="immediatePaymentIndicator" column="IMD_PMT_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="holdIndicator" column="PMT_HLD_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="noteLine1Text" column="PMT_NTE_LN1_TXT" jdbc-type="VARCHAR"/>
+    <field-descriptor name="noteLine2Text" column="PMT_NTE_LN2_TXT" jdbc-type="VARCHAR"/>
+    <field-descriptor name="noteLine3Text" column="PMT_NTE_LN3_TXT" jdbc-type="VARCHAR"/>
+    <field-descriptor name="specialHandlingInstructionLine1Text" column="PMT_SPCL_HANDLG_INSTRC_LN1_TXT" jdbc-type="VARCHAR"/>
+    <field-descriptor name="specialHandlingInstructionLine2Text" column="PMT_SPCL_HANDLG_INSTRC_LN2_TXT" jdbc-type="VARCHAR"/>
+    <field-descriptor name="specialHandlingInstructionLine3Text" column="PMT_SPCL_HANDLG_INSTRC_LN3_TXT" jdbc-type="VARCHAR"/>
+    <field-descriptor name="paymentPaidTimestamp" column="PMT_PD_DT" jdbc-type="TIMESTAMP"/>
+    <field-descriptor name="paymentRequestElectronicInvoiceIndicator" column="PMT_RQST_ELCTRNC_INV_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="vendorHeaderGeneratedIdentifier" column="VNDR_HDR_GNRTD_ID" jdbc-type="INTEGER"/>
+    <field-descriptor name="vendorDetailAssignedIdentifier" column="VNDR_DTL_ASND_ID" jdbc-type="INTEGER"/>
+    <field-descriptor name="vendorName" column="VNDR_NM" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorLine1Address" column="VNDR_LN1_ADDR" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorLine2Address" column="VNDR_LN2_ADDR" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorCityName" column="VNDR_CTY_NM" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorStateCode" column="VNDR_ST_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorPostalCode" column="VNDR_PSTL_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorCountryCode" column="VNDR_CNTRY_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="extractedTimestamp" column="PMT_EXTRT_DT" jdbc-type="TIMESTAMP"/>
+    <field-descriptor name="accountsPayableProcessorIdentifier" column="AP_PRCSR_ID" jdbc-type="VARCHAR"/>
+    <field-descriptor name="accountsPayableRequestCancelIdentifier" column="AP_RQST_CNCL_ID" jdbc-type="VARCHAR"/>
+    <field-descriptor name="lastActionPerformedByPersonId" column="AP_HLD_ID" jdbc-type="VARCHAR"/>
+    <field-descriptor name="processingCampusCode" column="PRCS_CMP_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="accountsPayableApprovalTimestamp" column="AP_APRVL_DT" jdbc-type="TIMESTAMP"/>
+    <field-descriptor name="originalVendorHeaderGeneratedIdentifier" column="ORIG_VNDR_HDR_GNRTD_ID" jdbc-type="INTEGER"/>
+    <field-descriptor name="originalVendorDetailAssignedIdentifier" column="ORIG_VNDR_DTL_ASND_ID" jdbc-type="INTEGER"/>
+    <field-descriptor name="alternateVendorHeaderGeneratedIdentifier" column="ALTRNT_VNDR_HDR_GNRTD_ID" jdbc-type="INTEGER"/>
+    <field-descriptor name="alternateVendorDetailAssignedIdentifier" column="ALTRNT_VNDR_DTL_ASND_ID" jdbc-type="INTEGER"/>   
+    <field-descriptor name="continuationAccountIndicator" column="CONT_ACCT_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="accountsPayablePurchasingDocumentLinkIdentifier" column="AP_PUR_DOC_LNK_ID" jdbc-type="INTEGER"/>
+    <field-descriptor name="closePurchaseOrderIndicator" column="CLOSE_PO_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="reopenPurchaseOrderIndicator" column="REOPEN_PO_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="vendorAddressInternationalProvinceName" column="VNDR_ADDR_INTL_PROV_NM" jdbc-type="VARCHAR"/>
+    <field-descriptor name="receivingDocumentRequiredIndicator" column="RCVNG_DOC_REQ_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="paymentRequestPositiveApprovalIndicator" column="PMT_RQST_PSTV_APRVL_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+	<field-descriptor name="useTaxIndicator" column="USE_TAX_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="bankCode" column="BNK_CD" jdbc-type="VARCHAR" />
+	<field-descriptor name="taxClassificationCode" column="TAX_CLSIF_CD" jdbc-type="VARCHAR" />
+	<field-descriptor name="taxFederalPercent" column="FTX_PCT" jdbc-type="DECIMAL" />
+	<field-descriptor name="taxStatePercent" column="STX_PCT" jdbc-type="DECIMAL" />
+	<field-descriptor name="taxCountryCode" column="TAX_CNTRY_CD" jdbc-type="VARCHAR" />
+	<field-descriptor name="taxGrossUpIndicator" column="GRS_UP_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+	<field-descriptor name="taxExemptTreatyIndicator" column="TRTY_EXMPT_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+	<field-descriptor name="taxForeignSourceIndicator" column="FRGN_SRC_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+	<field-descriptor name="taxSpecialW4Amount" column="SPCL_W4_INC_AMT" jdbc-type="DECIMAL" />
+	<field-descriptor name="taxUSAIDPerDiemIndicator" column="USAID_DIEM_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+	<field-descriptor name="taxOtherExemptIndicator" column="INC_TAX_EXMPT_CD_OTHR_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+	<field-descriptor name="taxNQIId" column="NQI_CUST_TAX_ID" jdbc-type="VARCHAR" />
+	<field-descriptor name="vendorAttentionName" column="VNDR_ATTN_NM" jdbc-type="VARCHAR" />
+
+	<!-- MOD-PA2000-01: Added Payment method code -->
+    <field-descriptor name="paymentMethodCode" column="PMT_MTHD_CD" jdbc-type="VARCHAR"/>
+    
+    
+    <!-- COMMON TO ALL DOCUMENTS -->
+    <reference-descriptor name="documentHeader" class-ref="org.kuali.kfs.sys.businessobject.FinancialSystemDocumentHeader" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="documentNumber" />
+    </reference-descriptor>
+
+    <reference-descriptor name="vendorDetail" class-ref="org.kuali.kfs.vnd.businessobject.VendorDetail" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="vendorHeaderGeneratedIdentifier" />
+        <foreignkey field-ref="vendorDetailAssignedIdentifier" />
+    </reference-descriptor>
+    <reference-descriptor name="status" class-ref="org.kuali.kfs.module.purap.businessobject.PaymentRequestStatus" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="statusCode" />
+    </reference-descriptor>
+    <collection-descriptor name="items" proxy="true" element-class-ref="org.kuali.kfs.module.purap.businessobject.PaymentRequestItem" collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="object" auto-delete="object">
+        <inverse-foreignkey field-ref="purapDocumentIdentifier" />
+        <query-customizer class="org.kuali.kfs.module.purap.dataaccess.impl.PurapItemQueryCustomizer">
+            <attribute
+                attribute-name="orderByField.itemLineNumber"
+                attribute-value="ASC"
+            />
+        </query-customizer> 
+    </collection-descriptor>
+<!--<reference-descriptor name="purchaseOrderDocument" class-ref="org.kuali.kfs.module.purap.document.PurchaseOrderDocument" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="purchaseOrderIdentifier" />
+    </reference-descriptor>
+-->
+    <reference-descriptor name="vendorShippingPaymentTerms" class-ref="org.kuali.kfs.vnd.businessobject.ShippingPaymentTerms" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="vendorShippingPaymentTermsCode" />
+    </reference-descriptor>
+    <reference-descriptor name="vendorPaymentTerms" class-ref="org.kuali.kfs.vnd.businessobject.PaymentTermType" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="vendorPaymentTermsCode" />
+    </reference-descriptor>
+    <reference-descriptor name="paymentRequestCostSource" class-ref="org.kuali.kfs.vnd.businessobject.PurchaseOrderCostSource" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="paymentRequestCostSourceCode" />
+    </reference-descriptor>
+    <reference-descriptor name="recurringPaymentType" class-ref="org.kuali.kfs.module.purap.businessobject.RecurringPaymentType" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="recurringPaymentTypeCode" />
+    </reference-descriptor>
+    <reference-descriptor name="bank" class-ref="org.kuali.kfs.sys.businessobject.Bank" auto-retrieve="true" auto-update="none" auto-delete="none"  proxy="true" >
+    	<foreignkey field-ref="bankCode" />
+    </reference-descriptor>
+    <reference-descriptor name="processingCampus" class-ref="org.kuali.kfs.vnd.businessobject.CampusParameter" auto-retrieve="true" auto-update="none" auto-delete="none"  proxy="true" >
+    	<foreignkey field-ref="processingCampusCode" />
+    </reference-descriptor>    
+   <!--  
+   <reference-descriptor name="incomeClass" class-ref="org.kuali.kfs.fp.businessobject.TaxIncomeClassCode" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true">
+    	<foreignkey field-ref="taxClassificationCode" />
+    </reference-descriptor>
+-->
+    <!-- Do not set this collection to auto save or delete; it needs to be saved by a specific process in the GL entry creation (hjs) -->
+   <collection-descriptor name="generalLedgerPendingEntries" proxy="true" element-class-ref="org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntry" collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="none" auto-delete="none">
+        <orderby name="transactionLedgerEntrySequenceNumber" sort="ASC" />
+        <query-customizer class="org.kuali.kfs.sys.dataaccess.impl.OjbQueryCustomizer">
+            <attribute attribute-name="documentNumber" attribute-value="parent.documentNumber" />
+        </query-customizer>
+    </collection-descriptor>
+
+</class-descriptor>
+
+<class-descriptor class="edu.arizona.kfs.module.purap.document.UaVendorCreditMemoDocument" table="AP_CRDT_MEMO_T">
+    <field-descriptor name="purapDocumentIdentifier" column="CRDT_MEMO_ID" jdbc-type="INTEGER" primarykey="true" index="true" autoincrement="true" sequence-name="CRDT_MEMO_ID"/>
+    <field-descriptor name="objectId" column="OBJ_ID" jdbc-type="VARCHAR" index="true"/>
+    <field-descriptor name="versionNumber" column="VER_NBR" jdbc-type="BIGINT" locking="true"/>
+    <field-descriptor name="documentNumber" column="FDOC_NBR" jdbc-type="VARCHAR" index="true"/>
+    <field-descriptor name="vendorHeaderGeneratedIdentifier" column="VNDR_HDR_GNRTD_ID" jdbc-type="INTEGER" index="true"/>
+    <field-descriptor name="vendorDetailAssignedIdentifier" column="VNDR_DTL_ASND_ID" jdbc-type="INTEGER" index="true"/>
+    <field-descriptor name="vendorCustomerNumber" column="VNDR_CUST_NBR" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorName" column="VNDR_NM" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorLine1Address" column="VNDR_LN1_ADDR" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorLine2Address" column="VNDR_LN2_ADDR" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorCityName" column="VNDR_CTY_NM" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorStateCode" column="VNDR_ST_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorPostalCode" column="VNDR_PSTL_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="vendorCountryCode" column="VNDR_CNTRY_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="purchaseOrderIdentifier" column="PO_ID" jdbc-type="INTEGER" index="true"/>
+    <field-descriptor name="postingYear" column="PO_ENCUM_FSCL_YR" jdbc-type="INTEGER"/>
+    <field-descriptor name="paymentRequestIdentifier" column="PMT_RQST_ID" jdbc-type="INTEGER" index="true"/>
+    <field-descriptor name="statusCode" column="CRDT_MEMO_STAT_CD" jdbc-type="VARCHAR" index="true"/>
+    <field-descriptor name="creditMemoNumber" column="CRDT_MEMO_NBR" jdbc-type="VARCHAR"/>
+    <field-descriptor name="creditMemoDate" column="CRDT_MEMO_DT" jdbc-type="DATE"/>
+    <field-descriptor name="creditMemoAmount" column="CRDT_MEMO_AMT" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="noteLine1Text" column="CRDT_MEMO_NTE_LN1_TXT" jdbc-type="VARCHAR"/>
+    <field-descriptor name="noteLine2Text" column="CRDT_MEMO_NTE_LN2_TXT" jdbc-type="VARCHAR"/>
+    <field-descriptor name="noteLine3Text" column="CRDT_MEMO_NTE_LN3_TXT" jdbc-type="VARCHAR"/>
+    <field-descriptor name="creditMemoPaidTimestamp" column="CRDT_MEMO_PD_TS" jdbc-type="TIMESTAMP"/>
+    <field-descriptor name="holdIndicator" column="CRDT_HLD_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="accountsPayableProcessorIdentifier" column="AP_PRCSR_ID" jdbc-type="VARCHAR"/>
+    <field-descriptor name="processingCampusCode" column="PRCS_CMP_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="accountsPayableApprovalTimestamp" column="AP_APRVL_DT" jdbc-type="TIMESTAMP"/>
+    <field-descriptor name="itemMiscellaneousCreditDescription" column="ITM_MISC_CRDT_DESC" jdbc-type="VARCHAR"/>
+    <field-descriptor name="extractedTimestamp" column="CRDT_MEMO_EXTRT_DT" jdbc-type="TIMESTAMP"/>
+    <field-descriptor name="accountsPayablePurchasingDocumentLinkIdentifier" column="AP_PUR_DOC_LNK_ID" jdbc-type="INTEGER"/>
+    <field-descriptor name="lastActionPerformedByPersonId" column="AP_HLD_ID" jdbc-type="VARCHAR"/>
+    <field-descriptor name="continuationAccountIndicator" column="CONT_ACCT_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="closePurchaseOrderIndicator" column="CLOSE_PO_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="reopenPurchaseOrderIndicator" column="REOPEN_PO_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="vendorAddressInternationalProvinceName" column="VNDR_ADDR_INTL_PROV_NM" jdbc-type="VARCHAR"/>
+	<field-descriptor name="useTaxIndicator" column="USE_TAX_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion" />
+    <field-descriptor name="bankCode" column="BNK_CD" jdbc-type="VARCHAR" />
+    <field-descriptor name="vendorAttentionName" column="VNDR_ATTN_NM" jdbc-type="VARCHAR" />
+    
+	<!-- MOD-PA2000-01: Added Payment method code -->
+    <field-descriptor name="paymentMethodCode" column="PMT_MTHD_CD" jdbc-type="VARCHAR"/>
+    
+    <reference-descriptor name="documentHeader" class-ref="org.kuali.kfs.sys.businessobject.FinancialSystemDocumentHeader" auto-retrieve="true" auto-update="object" auto-delete="object" proxy="true" >
+        <foreignkey field-ref="documentNumber" />
+    </reference-descriptor>
+    <reference-descriptor name="vendorDetail" class-ref="org.kuali.kfs.vnd.businessobject.VendorDetail" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="vendorHeaderGeneratedIdentifier" />
+        <foreignkey field-ref="vendorDetailAssignedIdentifier" />
+    </reference-descriptor>
+<!--
+    <reference-descriptor name="purchaseOrderDocument" class-ref="org.kuali.kfs.module.purap.document.PurchaseOrderDocument" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="purchaseOrderIdentifier" />
+    </reference-descriptor>
+    <reference-descriptor name="paymentRequestDocument" class-ref="org.kuali.kfs.module.purap.document.PaymentRequestDocument" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="paymentRequestIdentifier" />
+    </reference-descriptor>
+-->
+    <reference-descriptor name="status" class-ref="org.kuali.kfs.module.purap.businessobject.CreditMemoStatus" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="statusCode" />
+    </reference-descriptor>
+    <reference-descriptor name="bank" class-ref="org.kuali.kfs.sys.businessobject.Bank" auto-retrieve="true" auto-update="none" auto-delete="none"  proxy="true" >
+    	<foreignkey field-ref="bankCode" />
+    </reference-descriptor>
+    <reference-descriptor name="processingCampus" class-ref="org.kuali.kfs.vnd.businessobject.CampusParameter" auto-retrieve="true" auto-update="none" auto-delete="none"  proxy="true" >
+    	<foreignkey field-ref="processingCampusCode" />
+    </reference-descriptor>  
+    <collection-descriptor name="items" proxy="true" element-class-ref="org.kuali.kfs.module.purap.businessobject.CreditMemoItem" collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="object" auto-delete="object">
+        <inverse-foreignkey field-ref="purapDocumentIdentifier" />
+        <query-customizer class="org.kuali.kfs.module.purap.dataaccess.impl.PurapItemQueryCustomizer">
+    	    <attribute
+            	attribute-name="orderByField.itemLineNumber"
+            	attribute-value="ASC"
+        	/>
+    	</query-customizer> 
+    </collection-descriptor>
+
+   <collection-descriptor name="generalLedgerPendingEntries" proxy="true" element-class-ref="org.kuali.kfs.sys.businessobject.GeneralLedgerPendingEntry" collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="none" auto-delete="none">
+        <orderby name="transactionLedgerEntrySequenceNumber" sort="ASC" />
+        <query-customizer class="org.kuali.kfs.sys.dataaccess.impl.OjbQueryCustomizer">
+            <attribute attribute-name="documentNumber" attribute-value="parent.documentNumber" />
+        </query-customizer>
+    </collection-descriptor>
+
+</class-descriptor>
+
+
+<!-- Descriptors copied because they referenced the original class names -->
+<class-descriptor class="org.kuali.kfs.module.purap.businessobject.PaymentRequestItem" table="AP_PMT_RQST_ITM_T">
+    <field-descriptor name="itemIdentifier" column="PMT_RQST_ITM_ID" jdbc-type="INTEGER" primarykey="true" index="true" autoincrement="true" sequence-name="PMT_RQST_ITM_ID"/>
+    <field-descriptor name="objectId" column="OBJ_ID" jdbc-type="VARCHAR" index="true"/>
+    <field-descriptor name="versionNumber" column="VER_NBR" jdbc-type="BIGINT" locking="true"/>
+    <field-descriptor name="purapDocumentIdentifier" column="PMT_RQST_ID" jdbc-type="INTEGER" index="true"/>
+    <field-descriptor name="itemLineNumber" column="ITM_LN_NBR" jdbc-type="INTEGER" index="true"/>
+    <field-descriptor name="itemTypeCode" column="ITM_TYP_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="itemDescription" column="ITM_DESC" jdbc-type="VARCHAR"/>
+    <field-descriptor name="itemCatalogNumber" column="ITM_CATLG_NBR" jdbc-type="VARCHAR"/>
+    <field-descriptor name="itemAuxiliaryPartIdentifier" column="ITM_AUX_PART_ID" jdbc-type="VARCHAR"/>
+    <field-descriptor name="itemUnitOfMeasureCode" column="ITM_UOM_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="itemQuantity" column="ITM_INV_QTY" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="itemUnitPrice" column="ITM_UNIT_PRC" jdbc-type="DECIMAL"/>
+    <field-descriptor name="purchaseOrderItemUnitPrice" column="PO_ITM_UNIT_PRC" jdbc-type="DECIMAL"/>
+    <field-descriptor name="extendedPrice" column="ITM_EXTND_PRC" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="itemAssignedToTradeInIndicator" column="ITM_ASND_TO_TRADE_IN_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="itemOutstandingInvoiceQuantity" column="ITM_OSTND_INV_QTY" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="itemOutstandingInvoiceAmount" column="ITM_OSTND_INV_AMT" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion" /> 
+    <field-descriptor name="itemSalesTaxAmount" column="ITM_TAX_AMT" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="capitalAssetTransactionTypeCode" column="CPTL_AST_TRN_TYP_CD" jdbc-type="VARCHAR"/>    
+    <reference-descriptor name="purapDocument" class-ref="edu.arizona.kfs.module.purap.document.UaPaymentRequestDocument" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="purapDocumentIdentifier" />
+    </reference-descriptor>
+    <reference-descriptor name="itemType" class-ref="org.kuali.kfs.module.purap.businessobject.ItemType" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="itemTypeCode" />
+    </reference-descriptor>
+    <!-- the account deletion is handled within our buildDeletionAwareLists, setting auto-delete=none as a workaround to Optimistic Locking Exception for now -->
+    <collection-descriptor name="sourceAccountingLines" proxy="true" element-class-ref="org.kuali.kfs.module.purap.businessobject.PaymentRequestAccount" collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="object" auto-delete="none">
+        <orderby name="accountNumber" sort="ASC" />
+        <orderby name="financialObjectCode" sort="ASC" />
+        <inverse-foreignkey field-ref="itemIdentifier" />
+    </collection-descriptor>
+    <collection-descriptor name="useTaxItems" proxy="true" element-class-ref="org.kuali.kfs.module.purap.businessobject.PaymentRequestItemUseTax" collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="object" auto-delete="object">
+        <inverse-foreignkey field-ref="itemIdentifier" />
+    </collection-descriptor>        
+</class-descriptor>
+
+
+<class-descriptor class="org.kuali.kfs.module.purap.businessobject.CreditMemoItem" table="AP_CRDT_MEMO_ITM_T">
+    <field-descriptor name="itemIdentifier" column="CRDT_MEMO_ITM_ID" jdbc-type="INTEGER" primarykey="true" index="true" autoincrement="true" sequence-name="CRDT_MEMO_ITM_ID"/>
+    <field-descriptor name="objectId" column="OBJ_ID" jdbc-type="VARCHAR" index="true"/>
+    <field-descriptor name="versionNumber" column="VER_NBR" jdbc-type="BIGINT" locking="true"/>
+    <field-descriptor name="purapDocumentIdentifier" column="CRDT_MEMO_ID" jdbc-type="INTEGER" index="true"/>
+    <field-descriptor name="itemLineNumber" column="ITM_LN_NBR" jdbc-type="INTEGER" index="true"/>
+    <field-descriptor name="itemTypeCode" column="ITM_TYP_CD" jdbc-type="VARCHAR"/>
+    <field-descriptor name="itemQuantity" column="ITM_CRDT_QTY" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="itemUnitPrice" column="ITM_UNT_PRC" jdbc-type="DECIMAL"/>
+    <field-descriptor name="extendedPrice" column="ITM_EXTND_PRC" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="itemAssignedToTradeInIndicator" column="ITM_ASND_TO_TRADE_IN_IND" jdbc-type="VARCHAR" conversion="org.kuali.rice.kns.util.OjbCharBooleanConversion"/>
+    <field-descriptor name="itemDescription" column="ITM_DESC" jdbc-type="VARCHAR"/>
+    <field-descriptor name="poInvoicedTotalQuantity" column="PO_INV_TOT_QTY" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="poUnitPrice" column="PO_UNT_PRC" jdbc-type="DECIMAL"/>
+    <field-descriptor name="poTotalAmount" column="PO_EXTND_PRC" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="preqInvoicedTotalQuantity" column="PMT_RQST_INV_TOT_QTY" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="preqUnitPrice" column="PMT_RQST_UNT_PRC" jdbc-type="DECIMAL"/>
+    <field-descriptor name="itemSalesTaxAmount" column="ITM_TAX_AMT" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+    <field-descriptor name="preqTotalAmount" column="PMT_RQST_EXTND_PRC" jdbc-type="DECIMAL" conversion="org.kuali.rice.kns.util.OjbKualiDecimalFieldConversion"/>
+	<field-descriptor name="capitalAssetTransactionTypeCode" column="CPTL_AST_TRN_TYP_CD" jdbc-type="VARCHAR"/>    
+    <reference-descriptor name="itemType" class-ref="org.kuali.kfs.module.purap.businessobject.ItemType" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="itemTypeCode" />
+    </reference-descriptor>
+    <!-- the account deletion is handled within our buildDeletionAwareLists, setting auto-delete=none as a workaround to Optimistic Locking Exception for now -->
+    <collection-descriptor name="sourceAccountingLines" proxy="true" element-class-ref="org.kuali.kfs.module.purap.businessobject.CreditMemoAccount" collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="object" auto-delete="none">
+        <orderby name="accountNumber" sort="ASC" />
+        <orderby name="financialObjectCode" sort="ASC" />
+        <inverse-foreignkey field-ref="itemIdentifier" />
+    </collection-descriptor>
+    <collection-descriptor name="useTaxItems" proxy="true" element-class-ref="org.kuali.kfs.module.purap.businessobject.CreditMemoItemUseTax" collection-class="org.apache.ojb.broker.util.collections.ManageableArrayList" auto-retrieve="true" auto-update="object" auto-delete="object">
+        <inverse-foreignkey field-ref="itemIdentifier" />
+    </collection-descriptor>        
+    <reference-descriptor name="purapDocument" class-ref="edu.arizona.kfs.module.purap.document.UaVendorCreditMemoDocument" auto-retrieve="true" auto-update="none" auto-delete="none" proxy="true" >
+        <foreignkey field-ref="purapDocumentIdentifier" />
+	</reference-descriptor>    
+</class-descriptor>
+
+
 </descriptor-repository>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/portal/channel/maintenance/financialProcessing.tag
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/portal/channel/maintenance/financialProcessing.tag	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/portal/channel/maintenance/financialProcessing.tag	(revision 10217)
@@ -28,10 +28,14 @@
         <li><portal:portalLink displayTitle="true" title="Disbursement Voucher Travel Expense Type" url="kr/lookup.do?methodToCall=start&businessObjectClassName=org.kuali.kfs.fp.businessobject.TravelExpenseTypeCode&docFormKey=88888888&returnLocation=${ConfigProperties.application.url}/portal.do&hideReturnLink=true" /></li>
         <li><portal:portalLink displayTitle="true" title="Disbursement Voucher Travel Mileage Rate" url="kr/lookup.do?methodToCall=start&businessObjectClassName=org.kuali.kfs.fp.businessobject.TravelMileageRate&docFormKey=88888888&returnLocation=${ConfigProperties.application.url}/portal.do&hideReturnLink=true" /></li>
         <li><portal:portalLink displayTitle="true" title="Disbursement Voucher Travel Per Diem" url="kr/lookup.do?methodToCall=start&businessObjectClassName=org.kuali.kfs.fp.businessobject.TravelPerDiem&docFormKey=88888888&returnLocation=${ConfigProperties.application.url}/portal.do&hideReturnLink=true" /></li>
-        <li><portal:portalLink displayTitle="true" title="Disbursement Voucher Wire Charge" url="kr/lookup.do?methodToCall=start&businessObjectClassName=org.kuali.kfs.fp.businessobject.WireCharge&docFormKey=88888888&returnLocation=${ConfigProperties.application.url}/portal.do&hideReturnLink=true" /></li>        
+        <%-- KITT-592 payment method replaces the wire charge table
+        <li><portal:portalLink displayTitle="true" title="Disbursement Voucher Wire Charge (to be retired)" url="kr/lookup.do?methodToCall=start&businessObjectClassName=org.kuali.kfs.fp.businessobject.WireCharge&docFormKey=88888888&returnLocation=${ConfigProperties.application.url}/portal.do&hideReturnLink=true" /></li>
+        --%>        
 		<li><portal:portalLink displayTitle="true" title="Fiscal Year Function Control" url="kr/lookup.do?methodToCall=start&businessObjectClassName=org.kuali.kfs.fp.businessobject.FiscalYearFunctionControl&docFormKey=88888888&returnLocation=${ConfigProperties.application.url}/portal.do&hideReturnLink=true" /></li>				
 		<li><portal:portalLink displayTitle="true" title="Function Control Code" url="kr/lookup.do?methodToCall=start&businessObjectClassName=org.kuali.kfs.fp.businessobject.FunctionControlCode&docFormKey=88888888&returnLocation=${ConfigProperties.application.url}/portal.do&hideReturnLink=true" /></li>				
         <li><portal:portalLink displayTitle="true" title="Non-Resident Alien Tax Percent" url="kr/lookup.do?methodToCall=start&businessObjectClassName=org.kuali.kfs.fp.businessobject.NonResidentAlienTaxPercent&docFormKey=88888888&returnLocation=${ConfigProperties.application.url}/portal.do&hideReturnLink=true" /></li>
+        <%-- MOD-PA2000-01 KITT-592 --%>
+        <li><portal:portalLink displayTitle="true" title="Payment Method" url="kr/lookup.do?methodToCall=start&businessObjectClassName=edu.arizona.kfs.fp.businessobject.PaymentMethod&docFormKey=88888888&returnLocation=${ConfigProperties.application.url}/portal.do&hideReturnLink=true" /></li>        
         <%-- KITT-236 --%>
         <li><portal:portalLink displayTitle="true" title="Procurement Cardholder" url="kr/lookup.do?methodToCall=start&businessObjectClassName=com.rsmart.kuali.kfs.fp.businessobject.ProcurementCardHolderDetail&docFormKey=88888888&returnLocation=${ConfigProperties.application.url}/portal.do&hideReturnLink=true" /></li>
    </ul>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/fp/dvMessages.tag
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/fp/dvMessages.tag	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/fp/dvMessages.tag	(revision 10217)
@@ -15,9 +15,34 @@
 --%>
 <%@ include file="/jsp/sys/kfsTldHeader.jsp"%>
 
+<%-- MOD-PA2000-01: Baseline Modification Start --%>
+<script type="text/javascript" src="dwr/interface/UaPaymentMethodGeneralLedgerPendingEntryService.js"></script>
+<%-- MOD-PA2000-01: Baseline Modification End --%>
+
 <%-- helpful messages --%>
 <script type="text/javascript">
   function paymentMethodMessages(selectedMethod) {
+
+    <%-- MOD-PA2000-01: Baseline Modification Start --%>
+	if ( selectedMethod != "" ) {
+		var dwrReply = {
+			callback:function(data) {
+			if ( data != null && typeof data == 'object' ) {
+					setRecipientValue( "document.disbVchrBankCode", data.bankCode );
+					setRecipientValue( "document.bank", data.bankName );
+				} else {
+					setRecipientValue( "document.disbVchrBankCode", "" );
+					setRecipientValue( "document.bank", "" );
+				}
+			},
+			errorHandler:function( errorMessage ) { 
+				window.status = errorMessage;
+			}
+		};
+		UaPaymentMethodGeneralLedgerPendingEntryService.getBankForPaymentMethod( selectedMethod, dwrReply );
+	}
+    <%-- MOD-PA2000-01: Baseline Modification End --%>
+	  
     if (selectedMethod == 'W') {
 		alert('<bean:message key="message.dv.feewarning"/>');
 <%-- KULFDBCK-892
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/module/purap/creditMemoInfo.tag
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/module/purap/creditMemoInfo.tag	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/module/purap/creditMemoInfo.tag	(revision 10217)
@@ -22,7 +22,7 @@
 <c:set var="fullDocumentEntryCompleted" value="${not empty KualiForm.editingMode['fullDocumentEntryCompleted']}" />
 <c:set var="purchaseOrderAttributes" value="${DataDictionary.PurchaseOrderDocument.attributes}" />
 
-<kul:tab tabTitle="Credit Memo Info" defaultOpen="true">
+<kul:tab tabTitle="Credit Memo Info" defaultOpen="true" tabErrorKey="document.bankCode,document.paymentMethodCode">
    
     <div class="tab-container" align=center>
             <h3>Credit Memo Info</h3>
@@ -122,16 +122,46 @@
 			<tr>
 	            <sys:bankLabel align="right"/>
                 <sys:bankControl property="document.bankCode" objectProperty="document.bank" readOnly="${not fullEntryMode}"/>
-                <th align=right valign=middle class="bord-l-b">
-                    <div align="right">&nbsp;</div>
-                </th>
-                <td align=left valign=middle class="datacell">
-                    &nbsp;
-                </td>
-                
-            </tr>
-            
+<%-- MOD-PA2000-01: Baseline Modification Start --%>
+                    <th align=right valign=middle class="bord-l-b">
+                        <div align="right"><kul:htmlAttributeLabel attributeEntry="${documentAttributes.paymentMethodCode}" /></div>
+                    </th>
+                    <td align=left valign=middle class="datacell">
+                        <kul:htmlControlAttribute 
+                        	attributeEntry="${documentAttributes.paymentMethodCode}" property="document.paymentMethodCode" 
+                        	readOnly="${not fullEntryMode}"
+                        	onchange="paymentMethodChanged( this.value );" />
+                    </td>
+<%-- MOD-PA2000-01: Baseline Modification End --%>
+            </tr>            
 		</table> 
     </div>
+<%-- MOD-PA2000-01: Baseline Modification Start --%>
+<c:if test="${fullEntryMode}">
+	<script type="text/javascript" src="dwr/interface/UaPaymentMethodGeneralLedgerPendingEntryService.js"></script>
+	<script type="text/javascript">
+		function paymentMethodChanged(selectedMethod) {
+		
+			if ( selectedMethod != "" ) {
+				var dwrReply = {
+					callback:function(data) {
+					if ( data != null && typeof data == 'object' ) {
+							setRecipientValue( "document.bankCode", data.bankCode );
+							setRecipientValue( "document.bank", data.bankName );
+						} else {
+							setRecipientValue( "document.bankCode", "" );
+							setRecipientValue( "document.bank", "" );
+						}
+					},
+					errorHandler:function( errorMessage ) { 
+						window.status = errorMessage;
+					}
+				};
+				UaPaymentMethodGeneralLedgerPendingEntryService.getBankForPaymentMethod( selectedMethod, dwrReply );
+			}
+		}	
+	</script>
+</c:if>
+<%-- MOD-PA2000-01: Baseline Modification End --%>
     
 </kul:tab>
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/module/purap/paymentRequestInvoiceInfo.tag
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/module/purap/paymentRequestInvoiceInfo.tag	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/module/purap/paymentRequestInvoiceInfo.tag	(revision 10217)
@@ -166,14 +166,47 @@
 			<tr>
 	                <sys:bankLabel align="right"/>
                     <sys:bankControl property="document.bankCode" objectProperty="document.bank" readOnly="${not (fullEntryMode or editPreExtract)}"/>
+<%-- MOD-PA2000-01: Baseline Modification Start --%>
                     <th align=right valign=middle class="bord-l-b">
-                        <div align="right">&nbsp;</div>
+                        <div align="right"><kul:htmlAttributeLabel attributeEntry="${documentAttributes.paymentMethodCode}" /></div>
                     </th>
                     <td align=left valign=middle class="datacell">
-                        &nbsp;
+                        <kul:htmlControlAttribute 
+                        	attributeEntry="${documentAttributes.paymentMethodCode}" property="document.paymentMethodCode" 
+                        	readOnly="${not (fullEntryMode or editPreExtract)}" tabindexOverride="${tabindexOverrideBase + 4}"
+                        	onchange="paymentMethodChanged( this.value );" />
                     </td>
+<%-- MOD-PA2000-01: Baseline Modification End --%>
                 
             </tr>
+
+<%-- MOD-PA2000-01: Baseline Modification Start --%>
+<c:if test="${(fullEntryMode or editPreExtract)}">
+	<script type="text/javascript" src="dwr/interface/UaPaymentMethodGeneralLedgerPendingEntryService.js"></script>
+	<script type="text/javascript">
+		function paymentMethodChanged(selectedMethod) {
+		
+			if ( selectedMethod != "" ) {
+				var dwrReply = {
+					callback:function(data) {
+					if ( data != null && typeof data == 'object' ) {
+							setRecipientValue( "document.bankCode", data.bankCode );
+							setRecipientValue( "document.bank", data.bankName );
+						} else {
+							setRecipientValue( "document.bankCode", "" );
+							setRecipientValue( "document.bank", "" );
+						}
+					},
+					errorHandler:function( errorMessage ) { 
+						window.status = errorMessage;
+					}
+				};
+				UaPaymentMethodGeneralLedgerPendingEntryService.getBankForPaymentMethod( selectedMethod, dwrReply );
+			}
+		}	
+	</script>
+</c:if>
+<%-- MOD-PA2000-01: Baseline Modification End --%>
             
 		</table> 
 		
Index: financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/sys/bankControl.tag
===================================================================
--- financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/sys/bankControl.tag	(revision 10216)
+++ financial-system/kfs/branches/mod-jhkeller/pa2000-01/work/web-root/WEB-INF/tags/sys/bankControl.tag	(revision 10217)
@@ -46,7 +46,17 @@
   </c:if>
 
   <td class="${style}">
+<%-- MOD-PA2000-01: Baseline Modification Start --%>
+    <c:if test="${readOnly}">
+    	<span id="${property}">
+    </c:if>
+<%-- MOD-PA2000-01: Baseline Modification End --%>
     <kul:htmlControlAttribute attributeEntry="${DataDictionary.Bank.attributes.bankCode}" property="${property}" readOnly="${readOnly}" onblur="loadBankInfo(document.forms['KualiForm'], '${property}', '${objectProperty}');" />
+<%-- MOD-PA2000-01: Baseline Modification Start --%>
+    <c:if test="${readOnly}">
+    	</span>
+    </c:if>
+<%-- MOD-PA2000-01: Baseline Modification End --%>
     <c:if test="${not readOnly}">
       &nbsp;
       <kul:lookup boClassName="org.kuali.kfs.sys.businessobject.Bank" fieldConversions="bankCode:${property}" lookupParameters="${lookupParameters}" readOnlyFields="${readOnlyFields}" autoSearch="true"/>
